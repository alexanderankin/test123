/*
 * SearchDialog.java
 *
 * Created on 29. februar 2008, 15:57
 */

package superabbrevs.gui.searchdialog;

import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.ListSelectionModel;
import javax.swing.SwingUtilities;
import org.gjt.sp.jedit.gui.EnhancedDialog;

/**
 *
 * @author  Sune Simonsen
 */
public class SearchDialog extends EnhancedDialog {
    
    private SearchDialogModel model;
    
    /** Creates new form SearchDialog */
    public SearchDialog(java.awt.Frame parent, String title, boolean modal, SearchDialogModel model) {
        super(parent, title, modal);
        initComponents();
        this.model = model;
        abbreviationsJTable.setModel(model);
        if (!model.showHeader()) {
            abbreviationsJTable.getTableHeader().setMinimumSize(
                    new Dimension(0, 0));
            abbreviationsJTable.getTableHeader().setPreferredSize(
                    new Dimension(0,0));
        }
        abbreviationsJTable.getTableHeader().setVisible(model.showHeader());
        abbreviationsJTable.getSelectionModel().setSelectionMode(
                ListSelectionModel.SINGLE_SELECTION);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        searchJTextField = new javax.swing.JTextField();
        abbreviationsJScrollPane = new javax.swing.JScrollPane();
        abbreviationsJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Search for an abbreviation");
        setName("searchDialog"); // NOI18N

        searchJTextField.setNextFocusableComponent(abbreviationsJTable);
        searchJTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                searchJTextFieldFocusGained(evt);
            }
        });
        searchJTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchJTextFieldKeyReleased(evt);
            }
        });

        abbreviationsJScrollPane.setBackground(new java.awt.Color(255, 255, 255));
        abbreviationsJScrollPane.setFocusable(false);

        abbreviationsJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Description", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        abbreviationsJTable.setNextFocusableComponent(searchJTextField);
        abbreviationsJTable.setShowHorizontalLines(false);
        abbreviationsJTable.setShowVerticalLines(false);
        abbreviationsJTable.setUpdateSelectionOnSort(false);
        abbreviationsJTable.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                abbreviationsJTableFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                abbreviationsJTableFocusLost(evt);
            }
        });
        abbreviationsJTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                abbreviationsJTableKeyPressed(evt);
            }
        });
        abbreviationsJScrollPane.setViewportView(abbreviationsJTable);

        jLabel1.setDisplayedMnemonic('S');
        jLabel1.setLabelFor(searchJTextField);
        jLabel1.setText("Search for:");
        jLabel1.setDisplayedMnemonicIndex(0);
        jLabel1.setNextFocusableComponent(searchJTextField);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(abbreviationsJScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchJTextField)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(searchJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(abbreviationsJScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchJTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchJTextFieldKeyReleased
        model.searchTextChanged(searchJTextField.getText());
    }//GEN-LAST:event_searchJTextFieldKeyReleased

    private void searchJTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchJTextFieldFocusGained
        searchJTextField.setSelectionStart(0);
        searchJTextField.setSelectionEnd(searchJTextField.getText().length());
    }//GEN-LAST:event_searchJTextFieldFocusGained

    private void abbreviationsJTableFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_abbreviationsJTableFocusLost
        abbreviationsJTable.getSelectionModel().clearSelection();
    }//GEN-LAST:event_abbreviationsJTableFocusLost

    private void abbreviationsJTableFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_abbreviationsJTableFocusGained
        SwingUtilities.invokeLater(new Runnable() {
            public void run(){
                //tm.requestFocusInWindow();
                if (abbreviationsJTable.getSelectionModel().isSelectionEmpty()) {
                    abbreviationsJTable.changeSelection(0, 0, false, false);
                }
            }
        });
    }//GEN-LAST:event_abbreviationsJTableFocusGained

    private void abbreviationsJTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_abbreviationsJTableKeyPressed
        switch (evt.getKeyCode()) {
            case KeyEvent.VK_ENTER:
                dispose();
                break;
            case KeyEvent.VK_TAB:
                searchJTextField.grabFocus();
                break;
        }
    }//GEN-LAST:event_abbreviationsJTableKeyPressed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane abbreviationsJScrollPane;
    private javax.swing.JTable abbreviationsJTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField searchJTextField;
    // End of variables declaration//GEN-END:variables
    
    private ArrayList<SearchAcceptedListener> searchAcceptedListeners = 
            new ArrayList<SearchAcceptedListener>();  
    
    public void addSearchAcceptedListener(SearchAcceptedListener listener) {
        searchAcceptedListeners.add(listener);
    }
    
    public void removeSearchAcceptedListener(SearchAcceptedListener listener) {
        searchAcceptedListeners.remove(listener);
    }
    
    @Override
    public void ok() {
        if (!abbreviationsJTable.getSelectionModel().isSelectionEmpty()) {
            int s = abbreviationsJTable.getSelectionModel().getMinSelectionIndex();
            Object o = model.getRowObject(s); 
            for (SearchAcceptedListener listener : searchAcceptedListeners) {
                listener.accepted(o);
            }
        }
    }

    @Override
    public void cancel() {
        dispose();
    }
}
