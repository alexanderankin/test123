<list>
  <Abbrev>
    <name>Div element</name>
    <abbrev>div</abbrev>
    <expansion>&lt;div${1=ifNotEmpty(s,&quot; &quot;)}$1&gt;
	$end
&lt;/div&gt;</expansion>
    <inputType>NO_INPUT</inputType>
  </Abbrev>
  <Abbrev>
    <name>Html close tag</name>
    <abbrev>&gt;</abbrev>
    <expansion>&lt;#
if (offset == input.length() || 
	(offset &lt; input.length() &amp;&amp;
	&apos;&lt;&apos; != input.charAt(offset))) {
	
	String beforeCaret = input.substring(0,offset);

	Pattern p = Pattern.compile(&quot;&lt;(\\w+)([^&lt;&gt;])*$&quot;);
	Matcher m = p.matcher(beforeCaret);
	if(m.find()) {
		tag = beforeCaret.substring(m.start(1), m.end(1));
		print(&quot;&gt;$1&lt;/&quot;+tag+&quot;&gt;&quot;);
	} else {
		print(&quot;&gt;\t&quot;);
	}
} else {
	print(&quot;&gt;\t&quot;);
}
#&gt;</expansion>
    <inputType>LINE</inputType>
  </Abbrev>
  <Abbrev>
    <name>Html tag</name>
    <abbrev>&lt;</abbrev>
    <expansion>&lt;#
singleTags = &quot;br|hr|img&quot;;

getTag(s) {
	Pattern p = Pattern.compile(&quot;^(\\w+)([^&lt;&gt;])*$&quot;);
	Matcher m = p.matcher(s);
	if(m.find()) {
		return s.substring(m.start(1), m.end(1)); 
	}
	return null;
}

closeStyle(s) {
	tag = getTag(s);
	if (tag == null) {
		return &quot;/&gt;&quot;;
	}
	
	return choose(tag,singleTags,&quot;/&gt;&quot;,&quot;&gt;&quot;);
}

closeTag(s) {
	tag = getTag(s);
	if (tag == null) {
		return &quot;/&gt;&quot;;
	}
	
	return choose(tag,singleTags,&quot;&quot;,&quot;&lt;/&quot;+tag+&quot;&gt;&quot;);
}
#&gt;
&lt;${1:tag}${1=closeStyle(s)}$end${1=closeTag(s)}</expansion>
    <inputType>NO_INPUT</inputType>
  </Abbrev>
  <Abbrev>
    <name>List item</name>
    <abbrev>li</abbrev>
    <expansion>&lt;li&gt;$1&lt;/li&gt;</expansion>
    <inputType>NO_INPUT</inputType>
  </Abbrev>
  <Abbrev>
    <name>List item chaning</name>
    <abbrev>&lt;/li&gt;</abbrev>
    <expansion>&lt;/li&gt;
&lt;li&gt;$1&lt;/li&gt;</expansion>
    <inputType>NO_INPUT</inputType>
  </Abbrev>
  <Abbrev>
    <name>Ordered List</name>
    <abbrev>ol</abbrev>
    <expansion>&lt;ol&gt;
	$end
&lt;/ol&gt;</expansion>
    <inputType>NO_INPUT</inputType>
  </Abbrev>
</list>