<?xml version="1.0"?>

<!--
     This build.xml file for building the SuperAbbrevs  plugin is based
	 upon the model file used for building the QuickNotepad plugin.

     The 'dist' target compiles the plugin and creates the JAR file.
     Before running the 'dist' target, you will need to generate the
     documentation using one of these two targets:

     - 'docs-xalan': Creates documentation using the Xalan XSLT processor
     - 'docs-xsltproc': Creates documentation using the xsltproc tool

     To use it for building your own plugin, make these changes:

     - Change definition of 'jedit.install.dir' to point to the directory
       containing jedit.jar
     - Change definition of 'jar.name' to the name of your plugin's JAR file
     - If necessary, add any dependencies to the 'project.class.path'
       definition
     - If necessary, change the list of files in the 'dist' targtet
     - If your plugin has documentation generated using the DocBook XSL
       stylesheets, change the 'docs-xalan' and 'docs-xsltproc' targets
       accordingly.
-->
<project name="SuperAbbrevs" default="dist" basedir=".">
	
	<property file="build.properties"/>
	
	<property name="jar.name"  value="SuperAbbrevs.jar"/>

	<property name="jedit.install.dir"  value="/home/sune/apps/jedit/4.3pre8"/>
	
	<property name="src.dir" value="."/>
	<property name="build.dir" value="build"/>
	<property name="install.dir"  value="/home/sune/.jedit/jars"/>

	<path id="project.class.path">
		<pathelement location="${jedit.install.dir}/jedit.jar"/>
	</path>


	<target name="init">
		<mkdir dir="${build.dir}"/>
		<!-- make ctags -->
		<exec executable="ctags">
			<arg value="-R"/>
			<arg value="."/>
		</exec>
	</target>

	<target name="jflex">
		<exec executable="jflex">
			<arg value="superabbrevs/lexer/*.lex"/>
		</exec>
	</target>

	<target name="compile" depends="init">
		<javac 
		target="1.4"
		source="1.4"
			srcdir="${src.dir}"
			destdir="${build.dir}"
			debug="on"
			deprecation="on"
			includeJavaRuntime="yes"
		>
			<classpath refid="project.class.path"/>
		</javac>
	</target>
	
	<target name="dist" depends="compile">
		<mkdir dir="${install.dir}"/>
		<jar jarfile="${install.dir}/${jar.name}">
			<fileset dir="${build.dir}"/>
			<fileset dir="${src.dir}">
				<include name="actions.xml"/>
				<include name="**/*.props"/>
				<include name="**/*.html"/>
				<include name="**/*.gif"/>
				<include name="**/*.bsh"/>
				<include name="*.bsh"/>
				<include name="resources/*"/>
			</fileset>
		</jar>
	</target>

	<target name="generate-docbook-wrapper">
		<delete file="doc/docbook-wrapper.xsl"/>
		<echo file="doc/docbook-wrapper.xsl" message="&lt;xsl:stylesheet"/>
		<echo file="doc/docbook-wrapper.xsl" append="true" message=" xmlns:xsl='http://www.w3.org/1999/XSL/Transform'"/>
		<echo file="doc/docbook-wrapper.xsl" append="true" message=" version='1.0'&gt;"/>
		<echo file="doc/docbook-wrapper.xsl" append="true" message="&lt;xsl:import href='${docbook.xsl}/${stylesheet}'/>"/>
		<echo file="doc/docbook-wrapper.xsl" append="true" message="&lt;/xsl:stylesheet&gt;"/>
	</target>
	
	<!-- Generate docs with xsltproc tool from www.xmlsoft.org -->
	<target name="docs">
		<antcall target="generate-docbook-wrapper"/>
		<exec executable="xsltproc" dir="doc">
			<arg value="users-guide.xsl"/>
			<arg value="users-guide.xml"/>
		</exec>
	</target>

	<target name="clean-docs">
		<delete>
			<fileset dir="doc" includes="*~" defaultexcludes="no"/>
			<fileset dir="doc" includes="*.html" defaultexcludes="no"/>
		</delete>
	</target>
	
	<target name="clean" depends="clean-docs">
		<delete dir="${build.dir}"/>
		<delete>
			<fileset dir="." includes="**/*~" defaultexcludes="no"/>
		</delete>
	</target>

</project>
