<?xml version="1.0"?>

<!--
	 This is a build.xml file for building the SideKick plugin.

	 The 'dist' target compiles the plugin and creates the JAR file.
	 Before running the 'dist' target, you will need to generate the
	 documentation using one of these two targets:

	 - 'docs-xalan': Creates documentation using the Xalan XSLT processor
	 - 'docs-xsltproc': Creates documentation using the xsltproc tool

	 To use it for building your own plugin, make these changes:

	 - Change definition of 'jar.name' to the name of your plugin's JAR file
	 - If necessary, add any dependencies to the 'project.class.path'
	   definition
	 - If necessary, change the list of files in the 'dist' targtet
	 - If necessary, change the 'docs-xalan' and 'docs-xsltproc' targets
	   accordingly.
-->

<project name="sidekick" default="dist" basedir=".">

	<!-- Read optional properties from various places -->
	<!-- Latter ones override previous properties. -->
	<property file="${user.home}/.build.properties"/>
	<property file="../build.properties"/>
	<property file="build.properties"/>

	<!-- jEdit home, where jedit.jar is located -->
	<property name="jedit.install.dir"  value="../.."/>

	<!-- Home of other plugins, eg. ErrorList -->
	<property name="install.dir"  value=".."/>

	<!-- misc. build parameters -->
	<property name="jar.name"  value="SideKick.jar"/>
	<property name="src.dir" value="."/>
	<property name="build.dir" value="build"/>
	<property name="build.compiler.debug" value="on"/>
	<property name="build.compiler.optimize" value="off"/>


	<path id="project.class.path">
		<pathelement location="${jedit.install.dir}/jedit.jar" />
		<pathelement location="${install.dir}/ErrorList.jar"/>
		<pathelement location="${user.home}/.jedit/jars/ErrorList.jar" />
		<pathelement location="."/>
	</path>


	<target name="init">
		<mkdir dir="${build.dir}"/>
	</target>


	<target name="docs-init">
		<delete file="docbook-wrapper.xsl" />
		<echo file="docbook-wrapper.xsl"
			message="&lt;xsl:stylesheet"/>
		<echo file="docbook-wrapper.xsl" append="true"
			message=" xmlns:xsl='http://www.w3.org/1999/XSL/Transform'"/>
		<echo file="docbook-wrapper.xsl" append="true"
			message=" version='1.0'&gt;"/>
		<echo file="docbook-wrapper.xsl" append="true"
			message="&lt;xsl:import href='${docbook.xsl}/html/chunk.xsl'/&gt;"/>
		<echo file="docbook-wrapper.xsl" append="true"
			message="&lt;/xsl:stylesheet&gt;"/>
	</target>


	<target name="compile" depends="init">
		<javac
			srcdir="${src.dir}"
			destdir="${build.dir}"
			deprecation="on"
			debug="${build.compiler.debug}"
			optimize="${build.compiler.optimize}"
			includeJavaRuntime="yes"
		>
			<classpath refid="project.class.path"/>
		</javac>
	</target>


	<target name="docs">
		<antcall target="docs-${docs-proc.target}"/>
	</target>


	<target name="dist" depends="compile">
		<mkdir dir="${install.dir}"/>
		<jar jarfile="${install.dir}/${jar.name}">
			<fileset dir="${build.dir}"/>
			<fileset dir="${src.dir}">
				<include name="actions.xml"/>
				<include name="dockables.xml"/>
				<include name="services.xml"/>
				<include name="**/*.props"/>
				<include name="**/*.html"/>
			</fileset>
		</jar>
	</target>


	<target name="javadoc">
		<javadoc sourcepath="${src.classes}"
			destdir="docs/api"
			classpathref="project.class.path"
			author="true"
			version="true"
			use="true"
			windowtitle="${ant.project.name} API"
			Doctitle="${ant.project.name} API Documentation"
			source="${jdk.source}"
			linksource="yes">
			<packageset dir="${src.dir}" />
			<link href="http://java.sun.com/j2se/1.4/docs/api/"/>
			<link href="http://jedit.org/42docs/api/"/>
		</javadoc>
	</target>


	<!-- Generate docs with xsltproc tool from www.xmlsoft.org -->
	<target name="docs-xsltproc" depends="docs-init">
		<exec executable="xsltproc">
			<arg value="--catalogs"/>
			<arg value="users-guide.xsl"/>
			<arg value="users-guide.xml"/>
		</exec>
	</target>


	<!-- Generate docs with Xalan tool from xml.apache.org -->
	<target name="docs-xalan" depends="docs-init">
		<style
			style="users-guide.xsl"
			in="users-guide.xml"
			out="index.html"
		>
			<xmlcatalog>
				<dtd
					publicId="-//OASIS//DTD DocBook XML V4.1.2//EN"
					location="${docbook.dtd}"
				/>
			</xmlcatalog>
		</style>
	</target>


	<target name="clean">
		<delete dir="${build.dir}"/>
		<delete>
			<fileset dir="." includes="**/*~" defaultexcludes="no"/>
			<fileset dir="." includes="**/*.html" defaultexcludes="no"/>
		</delete>
	</target>


	<!-- Generate tags using 'ctags' program from ctags.sourceforge.net -->
	<target name="tags">
		<exec executable="ctags">
			<arg value="-R" />
			<arg path="." />
		</exec>
	</target>

</project>
