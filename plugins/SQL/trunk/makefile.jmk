# An Sql plugin makefile
#
# To recompile this plugin, start jmk in the plugin's source directory.
#

jar_name = "SQL";

##
# javac executable and args
##
#javac_bin = "javac";
#javac_opts = "-deprecation";

javac_bin = "jikes";
javac_opts = "-g" "-deprecation" "+E";

# set up the class path
new_class_path = "../../jedit.jar;../EditBus.jar;../BufferList.jar;/usr/local/xsql/lib/classes12.zip;/usr/share/java/xerces.jar:.";
#old_class_path = (getprop "java.class.path");
old_class_path = (cat (getprop "java.home") "/lib/rt.jar" );

# concatenate the old and new class paths
if (equal "", old_class_path) then class_path = new_class_path;
else class_path = (cat old_class_path ";" new_class_path); end

cmd_javac = javac_bin "-classpath" class_path javac_opts;

##
# jar executable and args
##
jar_bin = "fastjar";
jar_opts = "cf";
cmd_jar = jar_bin jar_opts;

props = (cat "SqlPlugin.props");
srcs = (subst ".java", ".class",
  (glob (join (join (dirs "."), "/"), "*Plugin.java" "*.java"))
) props;
jar = (cat "../" jar_name ".jar");

get_files = function (dummy)
{
  extensions = "class" "gif" "html" "props" "xml" "dtd";
  file_globs = (join "/*.", extensions);
  other_files = "actions.xml";

  (glob (join (dirs "."), file_globs)) other_files
}
end;

"all": jar;

"%.class" : "%.java";
{
    exec cmd_javac <;
}

jar: srcs;
{
    exec cmd_jar @ (get_files "1");
}

"clean":;
{
  delete (glob (join (dirs "."), "/*.class"));
}

"install": jar;
{
  copy jar ( cat ( getprop "user.home" ) "/.jedit/jars/" jar_name ".jar" );
}

"docs":;
{
  exec "openjade" "-t" "sgml" "/usr/share/sgml/xml.dcl"
        "users-guide.xml";
}

".PHONY": "all" "clean" "install" "docs";
