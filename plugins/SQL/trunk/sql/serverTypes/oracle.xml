<?xml version="1.0"?>

<!DOCTYPE serverType SYSTEM "sqlServerType.dtd">

<serverType name="Oracle">

  <driverClass>oracle.jdbc.driver.OracleDriver</driverClass>

  <objectCreationPrefix>CREATE OR REPLACE </objectCreationPrefix>

  <vfs>
    <driverClass>sql.serverTypes.OracleVFS</driverClass>

    <editMode>pl-sql</editMode>
  </vfs>

  <format type="date">dd-MMM-yyyy</format>
  
  <format type="time">hh:mm:ssa</format>
  
  <format type="timestamp">dd-MMM-yyyy hh:mm:ssa</format>

  <defStatementDelimiterRegex>(?m)(?i)([\s]*[/;])+[\s]*$</defStatementDelimiterRegex>

  <connection>
    <parameter name="host" default="127.0.0.1" description="Host name or IP"/>
    <parameter name="port" default="1521" description="TCP port"/>
    <parameter name="sid" default="SID" description="Oracle SID"/>
    <parameter name="user" default="scott" description="Oracle user"/>
    <parameter name="password" default="tiger" description="Oracle password"/>
    <parameter name="oracle.jdbc.V8Compatible" default="true" description="Process DATE at TIMESTAMP"/>
    <string>jdbc:oracle:thin:@{host}:{port}:{sid}</string>
  </connection>

  <statements>
    <!-- Statements for general publishing
       and stored procedures management -->
    <statement purpose="selectLastChangedObjects">
  SELECT o.object_name AS objectName,
         o.status AS status,
         o.object_type AS objectType,
         o.timestamp AS objectTime,
         o.object_id AS objectId
  FROM user_objects o
  WHERE ( o.object_type = 'PROCEDURE' OR
          o.object_type = 'FUNCTION' OR
          o.object_type = 'JAVA SOURCE' OR
          o.object_type = 'PACKAGE' OR
          o.object_type = 'PACKAGE BODY' )
  AND ( o.timestamp &gt; = ? )
  AND ( o.timestamp &lt; = ? )
  ORDER BY o.timestamp
    </statement>
    <statement purpose="selectUserObjects">
  SELECT DISTINCT o.object_name AS name,
                  o.object_type AS type,
                  o.status AS valid
  FROM all_objects o
  WHERE o.owner = ?
  AND ( o.object_type = 'PROCEDURE' OR
        o.object_type = 'FUNCTION' OR
        o.object_type = 'JAVA SOURCE' OR
        o.object_type = 'PACKAGE' OR
        o.object_type = 'PACKAGE BODY' )
  ORDER by o.object_name, o.object_type
    </statement>
    <statement purpose="selectCodeObjectLines">
      SELECT text AS sourceCodeLine
      FROM all_source
      WHERE owner=?
      AND name=?
      AND type=?
      ORDER BY LINE
    </statement>
    <statement purpose="selectCodeObjectErrors">
      SELECT line AS errRow,
             position AS errCol,
             text AS errorMessage
      FROM user_errors
      WHERE name = ?
      AND type = ?
      ORDER BY SEQUENCE
    </statement>
    <statement purpose="getSysdate">
      BEGIN ? := SYSDATE; END;
    </statement>
    <!-- Statements for sql.serverTypes.OracleVFS -->
    <statement purpose="selectObjectGroups">
      SELECT DISTINCT owner AS tableGroup
      FROM all_tables
    </statement>
    <statement purpose="selectTablesInGroup">
      SELECT table_name AS tableName, to_char( nvl ( num_rows, 0 ) ) || ' row(s)' AS numRows
      FROM all_tables
      WHERE owner=?
    </statement>
    <statement purpose="selectViewsInGroup">
      SELECT view_name AS viewName
			FROM all_views
      WHERE owner=?
    </statement>
    <statement purpose="selectCodeObjectsInGroup">
  SELECT DISTINCT o.object_name AS name,
                  o.status AS valid
  FROM all_objects o
  WHERE o.owner = ?
  AND o.object_type = ?
  ORDER by o.object_name
    </statement>
    <statement purpose="selectTriggerCode">
  SELECT
  t.triggering_event AS event,
  t.base_object_type AS baseObjectType,
  t.table_owner AS tableOwner,
  t.table_name AS tableName,
  t.referencing_names AS referencingClause,
  t.trigger_name AS triggerName,
  t.trigger_type AS triggerType,
  t.trigger_body AS sourceCode
  FROM all_triggers t
  WHERE t.owner = ?
  AND t.trigger_name = ?
    </statement>
    <statement purpose="selectViewCode">
  SELECT v.text AS sourceCodeLine
    FROM all_views v
       WHERE v.owner=?
       AND v.view_name=?
       AND 'VIEW'=?
    </statement>
    <statement substMethod="text" purpose="selectTableDDL">
  SELECT ''CREATE TABLE {0}.{1} ('' || CHR(10) AS sourceCodeLine,
         1 as column_id,
         1 as fragment
    FROM DUAL
  UNION
  SELECT ''  '' || atc.COLUMN_NAME || '' '' || 
         atc.DATA_TYPE || 
           DECODE (atc.DATA_TYPE, 
                     ''DATE'', '''',
                     ''TIMESTAMP'', '''',
                               ''('' || 
                                   NVL(atc.DATA_PRECISION, atc.DATA_LENGTH) || 
                                   DECODE(atc.DATA_SCALE, NULL, '''', '', '' || atc.DATA_SCALE)|| '')'' ) ||  
         DECODE(atc.NULLABLE, ''N'', ''' NOT NULL'', '''') ||
         DECODE((SELECT MAX(atc1.COLUMN_ID) 
                   FROM all_tab_columns atc1
                   WHERE atc1.OWNER=atc.OWNER
                   AND atc1.TABLE_NAME=atc.TABLE_NAME) - atc.COLUMN_ID, 0, '''', '','') || 
         CHR(10) AS sourceCodeLine, 
         atc.column_id, 
         2 as fragment
    FROM all_tab_columns atc
    WHERE atc.OWNER='''{0}'''
    AND atc.TABLE_NAME='''{1}'''
  UNION       
  SELECT '');'' || CHR(10) || CHR(10) AS sourceCodeLine,
         1 as column_id,
         3 as fragment
    FROM DUAL
  UNION
    SELECT ''COMMENT ON COLUMN '' || acc.OWNER || ''.'' || 
                            acc.TABLE_NAME || ''.'' ||
                            acc.COLUMN_NAME || 
           '' IS '''''' || replace(acc.comments,'''''''','''''''''''') || '''''';'' || CHR(10) AS sourceCodeLine, 
           atc.column_id, 
           4 as fragment
      FROM all_col_comments acc, all_tab_columns atc
      WHERE acc.OWNER='''{0}'''
      AND acc.TABLE_NAME='''{1}'''
      AND atc.OWNER = acc.OWNER
      AND atc.TABLE_NAME = acc.TABLE_NAME
      AND atc.COLUMN_NAME = acc.COLUMN_NAME
  ORDER BY fragment, COLUMN_ID
    </statement>
  </statements>

</serverType>
