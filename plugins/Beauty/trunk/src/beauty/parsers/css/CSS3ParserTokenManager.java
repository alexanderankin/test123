/* Generated By:JavaCC: Do not edit this line. CSS3ParserTokenManager.java */
package beauty.parsers.css;
import java.io.*;
import java.util.*;

/** Token Manager. */
public class CSS3ParserTokenManager implements CSS3ParserConstants
{
    // line buffer, text is accumulated here, then written to the output stream
    // on end of line marker.
    static StringBuilder b = new StringBuilder();

    // all text is accumulated here.  When processing is complete, this buffer
    // will contain the final beautified text.
    static StringBuilder outputBuffer = new StringBuilder();

    // accumulate pieces a token or string at a time.  The objects in this array
    // will be ocnverted to strings, padded as appropriate, and added to the
    // line buffer b.  This is the "accumulator".
    static ArrayList a = new ArrayList();

    // where to write the completely beautified code.
    private static PrintWriter out = null;

    // level of indentation
    static int level = 0;

    // width of indent
    static int indent_width = 4;
    static String indent = "    ";
    static String double_indent = indent + indent;

    // the soft tab setting from jEdit, use soft tabs by default.
    static boolean useSoftTabs = true;

    // line separator, defaults to system line separator, but can be set to
    // a specific separator
    static String ls = System.getProperty("line.separator");

    static void reset() {
        b = new StringBuilder();
        outputBuffer = new StringBuilder();
        a.clear();
        level = 0;
    }

    static String getText() {
        return outputBuffer.toString();
    }

    static void setLineSeparator(String le) {
        ls = le;
    }

    static void setIndentWidth(int w) {
        indent_width = w;
        if (indent_width <= 0) {
            indent_width = 4;
        }
        indent = "";
        for (int i = 0; i < w; i++) {
            indent += " ";
        }
        double_indent = indent + indent;
    }

    static void setUseSoftTabs(boolean b) {
        useSoftTabs = b;
        if (b) {
            indent = "\u005ct";
            double_indent = "\u005ct\u005ct";
        }
        else {
            setIndentWidth(indent_width);
        }
    }

    // add a token to the accumulator
    static void add(Token t) {
        if (t != null) {
            a.add(t);
        }
    }

    // add a string to the accumulator
    static void add(String s) {
        if (s != null) {
            a.add(s);
        }
    }

    // trim spaces from the last item in the accumulator
    static void trim() {
        if (a.size() == 0)
            return;
        Object o = a.get(a.size() - 1);
        StringBuilder sb = new StringBuilder();
        if (o instanceof Token)
            sb.append( ((Token)o).image );
        else
            sb.append((String)o);
        while(sb.length() > 0 && sb.charAt(sb.length() - 1) == ' ')
            sb.deleteCharAt(sb.length() - 1);
        a.set(a.size() - 1, sb.toString() );
    }

    // trim a single new line from the end of the output buffer
    static void trimNL() {
        if(outputBuffer.length() > 0 && outputBuffer.charAt(outputBuffer.length() - 1) == '\u005cn')
            outputBuffer.deleteCharAt(outputBuffer.length() - 1);
        if(outputBuffer.length() > 0 && outputBuffer.charAt(outputBuffer.length() - 1) == '\u005cr')
            outputBuffer.deleteCharAt(outputBuffer.length() - 1);
    }

    // trim all \n and/or \r from the end of the given string
    static void trimNL(String s) {
        StringBuilder sb = new StringBuilder(s);
        while(sb.length() > 0 && (sb.charAt(sb.length() - 1) == '\u005cr' || sb.charAt(sb.length() - 1) == '\u005cn'))
            sb.deleteCharAt(sb.length() - 1);
    }

    // trim all whitespace (\r, \n, space, \t) from the start of the given string
    static String trimStart(String s) {
        StringBuilder sb = new StringBuilder(s);
        while(sb.length() > 0 && (sb.charAt(0) == '\u005cr'
                || sb.charAt(0) == '\u005cn'
                || sb.charAt(0) == '\u005ct'
                || sb.charAt(0) == ' ')) {
            sb.deleteCharAt(0);
        }
        return sb.toString();
    }

    // trim up to max whitespace (\r, \n, space, \t) from the start of the given string
    static String trimStart(String s, int max) {
        StringBuilder sb = new StringBuilder(s);
        int trimmed = 0;
        while(sb.length() > 0 && Character.isWhitespace(sb.charAt(0)) && trimmed < max) {
            sb.deleteCharAt(0);
            ++trimmed;
        }
        return sb.toString();
    }

    // trims whitespace (\r, \n, space, \t) from the last items in the
    // accumulator.  If the last item is all whitespace, continues on to the
    // previous until a non-whitespace character is encountered.  If the
    // entire accumulator is whitespace, continues to trim whitespace from the
    // outputBuffer.
    static void trimWhitespace() {
        for (int i = a.size() - 1; i >= 0; i-- ) {
            Object o = a.get(i);
            StringBuilder sb = new StringBuilder();
            if (o instanceof Token)
                sb.append( ((Token)o).image );
            else
                sb.append((String)o);
            while(sb.length() > 0 && (sb.charAt(sb.length() - 1) == '\u005cr'
                    || sb.charAt(sb.length() - 1) == '\u005cn'
                    || sb.charAt(sb.length() - 1) == '\u005ct'
                    || sb.charAt(sb.length() - 1) == ' ')) {
                sb.deleteCharAt(sb.length() - 1);
            }
            if (sb.length() == 0) {
                a.remove(i);
            }
            else {
                a.set(i, sb.toString());
                break;
            }
        }
        if (a.size() == 0) {
            while(outputBuffer.length() > 0 && (outputBuffer.charAt(outputBuffer.length() - 1) == '\u005cr'
                    || outputBuffer.charAt(outputBuffer.length() - 1) == '\u005cn'
                    || outputBuffer.charAt(outputBuffer.length() - 1) == '\u005ct'
                    || outputBuffer.charAt(outputBuffer.length() - 1) == ' ')) {
                outputBuffer.deleteCharAt(outputBuffer.length() - 1);
            }
        }
    }

    // writes the contents of the accumulator to the outputBuffer.  The line
    // buffer (b) is used to build the line.
    static void write() {
        try {
            b.setLength(0); // clear the line buffer

            // this next section builds the output string while protecting
            // string literals.  All extra spaces are removed from the output
            // string, except that string literals are left as is.
            ArrayList list = new ArrayList();
            String s = new String("");
            for (int i = 0; i < a.size(); i++) {
                Object o = a.get(i);
                if (o instanceof Token) {
                    Token token = (Token)o;
                    if (token.kind == CSS3ParserConstants.STRING1 || token.kind == CSS3ParserConstants.COMMENT) {
                        s = s.replaceAll("[ ]+", " ");
                        list.add(s);
                        s = new String("");
                        list.add(token.image);
                    }
                    else {
                        s += ((Token)o).image;
                        s = s.replaceAll("[ ]+", " ");
                    }
                }
                else {
                    s += (String)o;
                    s = s.replaceAll("[ ]+", " ");
                }
            }
            for (int i = 0; i < list.size(); i++) {
                b.append((String)list.get(i));
            }

            b.append(s);
            s = b.toString();

            // check for blank line(s)
            String maybe_blank = new String(s);
            if (maybe_blank.trim().isEmpty()) {
                // yep, it's a blank, so just print it out
                if (s.length() >= ls.length()) {
                    s = s.substring(0, s.length() - ls.length());
                }
                outputBuffer.append(s);
                a.clear();
                return;
            }

            // indent --
            // most lines get indented, but there are a few special cases:
            // "else" gets put on the same line as the closing "}" for the "if",
            // so don't want to indent.  Similarly with "catch" and "finally".
            // The "while" at the end of a "do" loop is marked as "^while" to
            // differentiate it from a regular "while" block. "else if" is also
            // a special case.
            if (!s.startsWith(" {")) {
                s = s.trim();
                for (int i = 0; i < level; i++) {
                    s = indent + s;
                }
            }

            // check if the output buffer does NOT end with a new line.  If it
            // doesn't, remove any leading whitespace from this line
            if (!endsWith(outputBuffer, "\u005cn") && !endsWith(outputBuffer, "\u005cr")) {
                s = trimStart(s);
            }

            // check that there aren't extra spaces in the buffer already --
            // this handles the case where the output buffer ends with a space
            // and the new string starts with a space, don't want 2 spaces.
            if (s.startsWith(" ") && endsWith(outputBuffer, " ")) {
                s = s.substring(1);
            }

            // check that there is one space between the end of the output
            // buffer and this line -- this handles the case where the output
            // buffer does not end in a space and the new string does not start
            // with a space, want one space in between.
            if (!s.startsWith(" ")
                    && !endsWith(outputBuffer, " ")
                    && !endsWith(outputBuffer, "\u005cr")
                    && !endsWith(outputBuffer, "\u005cn")
                    && outputBuffer.length() > 0) {
                outputBuffer.append(" ");
            }

            // by the Sun standard, there is no situation where '(' is followed
            // by a space or ')' is preceded with by a space
            s = s.replaceAll("[(][ ]", "(");
            s = s.replaceAll("[ ][)]", ")");

            // there should be no situation where a comma is preceded by a space,
            // although that seems to happen when formatting string arrays.
            s = s.replaceAll("\u005c\u005cs+[,]", ",");

            // finally! add the string to the output buffer
            // check for line length, may need to wrap.  Sun says to avoid lines
            // longer than 80 characters.  This doesn't work well yet, so I've 
            // commented out the wrapping code.  Still need to clean out the
            // wrapping markers.
            //s = s.replaceAll("[]", "");
            outputBuffer.append(s);
            /*
            int wrap_sep_count = countWrapSep(s);
            if (s.length() - wrap_sep_count > 80) {
                String[] lines = wrapLines(s);
                if ( lines != null ) {
                    for (int i = 0; i < lines.length; i++) {
                        outputBuffer.append(lines[i]).append(ls);
                    }
                }
                else {
                    // whack any remaining  characters
                    s = s.replaceAll("[]", "");
                    outputBuffer.append(s);
                }
            }
            else {
                // whack any remaining  characters
                s = s.replaceAll("[]", "");
                outputBuffer.append(s);
            }
            */
            // clear the accumulator for the next line
            a.clear();
        }
        catch(Exception e) {
            e.printStackTrace();
        }
    }

    static void writeln() {
        write();
        trimNL();
        outputBuffer.append(ls);
    }

    static int countWrapSep(String s) {
        int count = 0;
        for (int i = 0; i < s.length(); i++) {
            if (s.charAt(i) == '\u001c') {
                ++count;
            }
        }
        return count;
    }

    // needs work, does a wrap, but not per spec
    static String[] wrapLines(String s) {
        if (s.length() <= 80) {
            return new String[]{s};
        }
        int wc = countWrapSep(s);
        if (wc > 0) {
            int[] break_points = new int[wc];
            int offset = 0;
            for (int i = 0; i < wc; i++) {
                int index = s.indexOf('\u001c', offset);
                break_points[i] = index;
                offset = index + 1;
            }

            int first_break = -1;
            for (int i = 0; i < break_points.length; i++) {
                int possible = break_points[i];
                if (possible > 80) {
                    break;
                }
                first_break = possible;
            }
            if ( first_break == -1 ) {
                first_break = s.length();
            }

            int ws_length = 0;
            for (int i = 0; i < s.length(); i++) {
                if (s.charAt(i) == ' ')
                    ++ws_length;
                else
                    break;
            }
            String leading_ws = s.substring(0, ws_length);
            String head = s.substring(0, first_break);
            String tail = s.substring(first_break);
            //head = head.replaceAll("[]", "");
            //tail = tail.replaceAll("[]", "");
            return new String[]{head, leading_ws + double_indent + tail};
        }
        return null;
    }

    // StringBuilder doesn't have an "endsWith" method
    static boolean endsWith(StringBuilder sb, String s) {
        if (sb == null && s == null)
            return true;
        if (sb == null && sb != null)
            return false;
        if (sb.length() < s.length())
            return false;
        String end = sb.substring(sb.length() - s.length());
        return end.equals(s);
    }

    static void addComment(Token t) {
        if (t != null) {
            add(t);
        }
    }

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 36:
         return jjMoveStringLiteralDfa1_0(0x8000000000L, 0x0L);
      case 40:
         jjmatchedKind = 49;
         return jjMoveNfa_0(20, 0);
      case 41:
         jjmatchedKind = 50;
         return jjMoveNfa_0(20, 0);
      case 42:
         jjmatchedKind = 47;
         return jjMoveStringLiteralDfa1_0(0x10000000000L, 0x0L);
      case 45:
         jjmatchedKind = 42;
         return jjMoveStringLiteralDfa1_0(0x800000L, 0x0L);
      case 46:
         jjmatchedKind = 48;
         return jjMoveNfa_0(20, 0);
      case 47:
         jjmatchedKind = 44;
         return jjMoveNfa_0(20, 0);
      case 58:
         jjmatchedKind = 51;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x40000004L);
      case 59:
         jjmatchedKind = 43;
         return jjMoveNfa_0(20, 0);
      case 60:
         return jjMoveStringLiteralDfa1_0(0x400000L, 0x0L);
      case 61:
         jjmatchedKind = 41;
         return jjMoveNfa_0(20, 0);
      case 64:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x1fff8L);
      case 65:
         return jjMoveStringLiteralDfa1_0(0x80000000L, 0x0L);
      case 76:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x20000000L);
      case 91:
         jjmatchedKind = 45;
         return jjMoveNfa_0(20, 0);
      case 93:
         jjmatchedKind = 46;
         return jjMoveNfa_0(20, 0);
      case 94:
         return jjMoveStringLiteralDfa1_0(0x4000000000L, 0x0L);
      case 97:
         return jjMoveStringLiteralDfa1_0(0x80000000L, 0x0L);
      case 108:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x20000000L);
      case 124:
         jjmatchedKind = 98;
         return jjMoveStringLiteralDfa1_0(0x2000000L, 0x0L);
      case 125:
         jjmatchedKind = 37;
         return jjMoveNfa_0(20, 0);
      default :
         return jjMoveNfa_0(20, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active0, long active1)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(20, 0);
   }
   switch(curChar)
   {
      case 33:
         return jjMoveStringLiteralDfa2_0(active0, 0x400000L, active1, 0L);
      case 45:
         return jjMoveStringLiteralDfa2_0(active0, 0x800000L, active1, 0L);
      case 58:
         if ((active1 & 0x4L) != 0L)
         {
            jjmatchedKind = 66;
            jjmatchedPos = 1;
         }
         break;
      case 61:
         if ((active0 & 0x2000000L) != 0L)
         {
            jjmatchedKind = 25;
            jjmatchedPos = 1;
         }
         else if ((active0 & 0x4000000000L) != 0L)
         {
            jjmatchedKind = 38;
            jjmatchedPos = 1;
         }
         else if ((active0 & 0x8000000000L) != 0L)
         {
            jjmatchedKind = 39;
            jjmatchedPos = 1;
         }
         else if ((active0 & 0x10000000000L) != 0L)
         {
            jjmatchedKind = 40;
            jjmatchedPos = 1;
         }
         break;
      case 65:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x20000000L);
      case 66:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x2000L);
      case 67:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x8400L);
      case 70:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x100L);
      case 73:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x10L);
      case 76:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x4000L);
      case 77:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x40L);
      case 78:
         return jjMoveStringLiteralDfa2_0(active0, 0x80000000L, active1, 0x40000020L);
      case 80:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x10280L);
      case 82:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x1000L);
      case 84:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x800L);
      case 97:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x20000000L);
      case 98:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x2000L);
      case 99:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x8408L);
      case 102:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x100L);
      case 105:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x10L);
      case 108:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x4000L);
      case 109:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x40L);
      case 110:
         return jjMoveStringLiteralDfa2_0(active0, 0x80000000L, active1, 0x40000020L);
      case 112:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x10280L);
      case 114:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x1000L);
      case 116:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x800L);
      default :
         break;
   }
   return jjMoveNfa_0(20, 1);
}
private int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjMoveNfa_0(20, 1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(20, 1);
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa3_0(active0, 0x400000L, active1, 0L);
      case 62:
         if ((active0 & 0x800000L) != 0L)
         {
            jjmatchedKind = 23;
            jjmatchedPos = 2;
         }
         break;
      case 65:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0xa0L);
      case 68:
         if ((active0 & 0x80000000L) != 0L)
         {
            jjmatchedKind = 31;
            jjmatchedPos = 2;
         }
         break;
      case 69:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x4040L);
      case 72:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x10000L);
      case 73:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x1000L);
      case 77:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x10L);
      case 78:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x20000000L);
      case 79:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x4000ad00L);
      case 82:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x200L);
      case 97:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0xa0L);
      case 100:
         if ((active0 & 0x80000000L) != 0L)
         {
            jjmatchedKind = 31;
            jjmatchedPos = 2;
         }
         break;
      case 101:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x4040L);
      case 104:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x10008L);
      case 105:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x1000L);
      case 109:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x10L);
      case 110:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x20000000L);
      case 111:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x4000ad00L);
      case 114:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x200L);
      default :
         break;
   }
   return jjMoveNfa_0(20, 2);
}
private int jjMoveStringLiteralDfa3_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjMoveNfa_0(20, 2);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(20, 2);
   }
   switch(curChar)
   {
      case 45:
         if ((active0 & 0x400000L) != 0L)
         {
            jjmatchedKind = 22;
            jjmatchedPos = 3;
         }
         break;
      case 68:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x40L);
      case 69:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x200L);
      case 70:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x4000L);
      case 71:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x20001080L);
      case 76:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x400L);
      case 77:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x20L);
      case 78:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x100L);
      case 79:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x10000L);
      case 80:
         if ((active1 & 0x800L) != 0L)
         {
            jjmatchedKind = 75;
            jjmatchedPos = 3;
         }
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x10L);
      case 84:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x40002000L);
      case 85:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x8000L);
      case 97:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x8L);
      case 100:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x40L);
      case 101:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x200L);
      case 102:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x4000L);
      case 103:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x20001080L);
      case 108:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x400L);
      case 109:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x20L);
      case 110:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x100L);
      case 111:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x10000L);
      case 112:
         if ((active1 & 0x800L) != 0L)
         {
            jjmatchedKind = 75;
            jjmatchedPos = 3;
         }
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x10L);
      case 116:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x40002000L);
      case 117:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x8000L);
      default :
         break;
   }
   return jjMoveNfa_0(20, 3);
}
private int jjMoveStringLiteralDfa4_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjMoveNfa_0(20, 3);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(20, 3);
   }
   switch(curChar)
   {
      case 40:
         if ((active1 & 0x20000000L) != 0L)
         {
            jjmatchedKind = 93;
            jjmatchedPos = 4;
         }
         else if ((active1 & 0x40000000L) != 0L)
         {
            jjmatchedKind = 94;
            jjmatchedPos = 4;
         }
         break;
      case 69:
         if ((active1 & 0x80L) != 0L)
         {
            jjmatchedKind = 71;
            jjmatchedPos = 4;
         }
         return jjMoveStringLiteralDfa5_0(active1, 0x20L);
      case 70:
         return jjMoveStringLiteralDfa5_0(active1, 0x200L);
      case 72:
         return jjMoveStringLiteralDfa5_0(active1, 0x1000L);
      case 73:
         return jjMoveStringLiteralDfa5_0(active1, 0x40L);
      case 78:
         return jjMoveStringLiteralDfa5_0(active1, 0x18000L);
      case 79:
         return jjMoveStringLiteralDfa5_0(active1, 0x410L);
      case 84:
         if ((active1 & 0x4000L) != 0L)
         {
            jjmatchedKind = 78;
            jjmatchedPos = 4;
         }
         return jjMoveStringLiteralDfa5_0(active1, 0x2100L);
      case 101:
         if ((active1 & 0x80L) != 0L)
         {
            jjmatchedKind = 71;
            jjmatchedPos = 4;
         }
         return jjMoveStringLiteralDfa5_0(active1, 0x20L);
      case 102:
         return jjMoveStringLiteralDfa5_0(active1, 0x200L);
      case 104:
         return jjMoveStringLiteralDfa5_0(active1, 0x1000L);
      case 105:
         return jjMoveStringLiteralDfa5_0(active1, 0x40L);
      case 110:
         return jjMoveStringLiteralDfa5_0(active1, 0x18000L);
      case 111:
         return jjMoveStringLiteralDfa5_0(active1, 0x410L);
      case 114:
         return jjMoveStringLiteralDfa5_0(active1, 0x8L);
      case 116:
         if ((active1 & 0x4000L) != 0L)
         {
            jjmatchedKind = 78;
            jjmatchedPos = 4;
         }
         return jjMoveStringLiteralDfa5_0(active1, 0x2100L);
      default :
         break;
   }
   return jjMoveNfa_0(20, 4);
}
private int jjMoveStringLiteralDfa5_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(20, 4);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(20, 4);
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa6_0(active1, 0x100L);
      case 65:
         if ((active1 & 0x40L) != 0L)
         {
            jjmatchedKind = 70;
            jjmatchedPos = 5;
         }
         break;
      case 69:
         return jjMoveStringLiteralDfa6_0(active1, 0x10200L);
      case 79:
         return jjMoveStringLiteralDfa6_0(active1, 0x2000L);
      case 82:
         return jjMoveStringLiteralDfa6_0(active1, 0x410L);
      case 83:
         return jjMoveStringLiteralDfa6_0(active1, 0x20L);
      case 84:
         if ((active1 & 0x1000L) != 0L)
         {
            jjmatchedKind = 76;
            jjmatchedPos = 5;
         }
         return jjMoveStringLiteralDfa6_0(active1, 0x8000L);
      case 97:
         if ((active1 & 0x40L) != 0L)
         {
            jjmatchedKind = 70;
            jjmatchedPos = 5;
         }
         break;
      case 101:
         return jjMoveStringLiteralDfa6_0(active1, 0x10200L);
      case 111:
         return jjMoveStringLiteralDfa6_0(active1, 0x2000L);
      case 114:
         return jjMoveStringLiteralDfa6_0(active1, 0x410L);
      case 115:
         return jjMoveStringLiteralDfa6_0(active1, 0x28L);
      case 116:
         if ((active1 & 0x1000L) != 0L)
         {
            jjmatchedKind = 76;
            jjmatchedPos = 5;
         }
         return jjMoveStringLiteralDfa6_0(active1, 0x8000L);
      default :
         break;
   }
   return jjMoveNfa_0(20, 5);
}
private int jjMoveStringLiteralDfa6_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(20, 5);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(20, 5);
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa7_0(active1, 0x400L);
      case 69:
         return jjMoveStringLiteralDfa7_0(active1, 0x8000L);
      case 70:
         return jjMoveStringLiteralDfa7_0(active1, 0x100L);
      case 77:
         if ((active1 & 0x2000L) != 0L)
         {
            jjmatchedKind = 77;
            jjmatchedPos = 6;
         }
         break;
      case 80:
         return jjMoveStringLiteralDfa7_0(active1, 0x20L);
      case 82:
         return jjMoveStringLiteralDfa7_0(active1, 0x200L);
      case 84:
         if ((active1 & 0x10L) != 0L)
         {
            jjmatchedKind = 68;
            jjmatchedPos = 6;
         }
         return jjMoveStringLiteralDfa7_0(active1, 0x10000L);
      case 101:
         return jjMoveStringLiteralDfa7_0(active1, 0x8008L);
      case 102:
         return jjMoveStringLiteralDfa7_0(active1, 0x100L);
      case 109:
         if ((active1 & 0x2000L) != 0L)
         {
            jjmatchedKind = 77;
            jjmatchedPos = 6;
         }
         break;
      case 112:
         return jjMoveStringLiteralDfa7_0(active1, 0x20L);
      case 114:
         return jjMoveStringLiteralDfa7_0(active1, 0x200L);
      case 116:
         if ((active1 & 0x10L) != 0L)
         {
            jjmatchedKind = 68;
            jjmatchedPos = 6;
         }
         return jjMoveStringLiteralDfa7_0(active1, 0x10000L);
      default :
         break;
   }
   return jjMoveNfa_0(20, 6);
}
private int jjMoveStringLiteralDfa7_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(20, 6);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(20, 6);
   }
   switch(curChar)
   {
      case 65:
         return jjMoveStringLiteralDfa8_0(active1, 0x120L);
      case 69:
         return jjMoveStringLiteralDfa8_0(active1, 0x200L);
      case 73:
         return jjMoveStringLiteralDfa8_0(active1, 0x10000L);
      case 80:
         return jjMoveStringLiteralDfa8_0(active1, 0x400L);
      case 82:
         if ((active1 & 0x8000L) != 0L)
         {
            jjmatchedKind = 79;
            jjmatchedPos = 7;
         }
         break;
      case 97:
         return jjMoveStringLiteralDfa8_0(active1, 0x120L);
      case 101:
         return jjMoveStringLiteralDfa8_0(active1, 0x200L);
      case 105:
         return jjMoveStringLiteralDfa8_0(active1, 0x10000L);
      case 112:
         return jjMoveStringLiteralDfa8_0(active1, 0x400L);
      case 114:
         if ((active1 & 0x8000L) != 0L)
         {
            jjmatchedKind = 79;
            jjmatchedPos = 7;
         }
         break;
      case 116:
         if ((active1 & 0x8L) != 0L)
         {
            jjmatchedKind = 67;
            jjmatchedPos = 7;
         }
         break;
      default :
         break;
   }
   return jjMoveNfa_0(20, 7);
}
private int jjMoveStringLiteralDfa8_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(20, 7);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(20, 7);
   }
   switch(curChar)
   {
      case 67:
         return jjMoveStringLiteralDfa9_0(active1, 0x10120L);
      case 78:
         return jjMoveStringLiteralDfa9_0(active1, 0x200L);
      case 82:
         return jjMoveStringLiteralDfa9_0(active1, 0x400L);
      case 99:
         return jjMoveStringLiteralDfa9_0(active1, 0x10120L);
      case 110:
         return jjMoveStringLiteralDfa9_0(active1, 0x200L);
      case 114:
         return jjMoveStringLiteralDfa9_0(active1, 0x400L);
      default :
         break;
   }
   return jjMoveNfa_0(20, 8);
}
private int jjMoveStringLiteralDfa9_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(20, 8);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(20, 8);
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa10_0(active1, 0x10000L);
      case 67:
         return jjMoveStringLiteralDfa10_0(active1, 0x200L);
      case 69:
         if ((active1 & 0x20L) != 0L)
         {
            jjmatchedKind = 69;
            jjmatchedPos = 9;
         }
         else if ((active1 & 0x100L) != 0L)
         {
            jjmatchedKind = 72;
            jjmatchedPos = 9;
         }
         break;
      case 79:
         return jjMoveStringLiteralDfa10_0(active1, 0x400L);
      case 99:
         return jjMoveStringLiteralDfa10_0(active1, 0x200L);
      case 101:
         if ((active1 & 0x20L) != 0L)
         {
            jjmatchedKind = 69;
            jjmatchedPos = 9;
         }
         else if ((active1 & 0x100L) != 0L)
         {
            jjmatchedKind = 72;
            jjmatchedPos = 9;
         }
         break;
      case 111:
         return jjMoveStringLiteralDfa10_0(active1, 0x400L);
      default :
         break;
   }
   return jjMoveNfa_0(20, 9);
}
private int jjMoveStringLiteralDfa10_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(20, 9);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(20, 9);
   }
   switch(curChar)
   {
      case 65:
         return jjMoveStringLiteralDfa11_0(active1, 0x10000L);
      case 69:
         if ((active1 & 0x200L) != 0L)
         {
            jjmatchedKind = 73;
            jjmatchedPos = 10;
         }
         break;
      case 70:
         return jjMoveStringLiteralDfa11_0(active1, 0x400L);
      case 97:
         return jjMoveStringLiteralDfa11_0(active1, 0x10000L);
      case 101:
         if ((active1 & 0x200L) != 0L)
         {
            jjmatchedKind = 73;
            jjmatchedPos = 10;
         }
         break;
      case 102:
         return jjMoveStringLiteralDfa11_0(active1, 0x400L);
      default :
         break;
   }
   return jjMoveNfa_0(20, 10);
}
private int jjMoveStringLiteralDfa11_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(20, 10);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(20, 10);
   }
   switch(curChar)
   {
      case 73:
         return jjMoveStringLiteralDfa12_0(active1, 0x400L);
      case 76:
         return jjMoveStringLiteralDfa12_0(active1, 0x10000L);
      case 105:
         return jjMoveStringLiteralDfa12_0(active1, 0x400L);
      case 108:
         return jjMoveStringLiteralDfa12_0(active1, 0x10000L);
      default :
         break;
   }
   return jjMoveNfa_0(20, 11);
}
private int jjMoveStringLiteralDfa12_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(20, 11);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(20, 11);
   }
   switch(curChar)
   {
      case 76:
         return jjMoveStringLiteralDfa13_0(active1, 0x400L);
      case 80:
         return jjMoveStringLiteralDfa13_0(active1, 0x10000L);
      case 108:
         return jjMoveStringLiteralDfa13_0(active1, 0x400L);
      case 112:
         return jjMoveStringLiteralDfa13_0(active1, 0x10000L);
      default :
         break;
   }
   return jjMoveNfa_0(20, 12);
}
private int jjMoveStringLiteralDfa13_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(20, 12);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(20, 12);
   }
   switch(curChar)
   {
      case 69:
         if ((active1 & 0x400L) != 0L)
         {
            jjmatchedKind = 74;
            jjmatchedPos = 13;
         }
         break;
      case 72:
         return jjMoveStringLiteralDfa14_0(active1, 0x10000L);
      case 101:
         if ((active1 & 0x400L) != 0L)
         {
            jjmatchedKind = 74;
            jjmatchedPos = 13;
         }
         break;
      case 104:
         return jjMoveStringLiteralDfa14_0(active1, 0x10000L);
      default :
         break;
   }
   return jjMoveNfa_0(20, 13);
}
private int jjMoveStringLiteralDfa14_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(20, 13);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(20, 13);
   }
   switch(curChar)
   {
      case 65:
         return jjMoveStringLiteralDfa15_0(active1, 0x10000L);
      case 97:
         return jjMoveStringLiteralDfa15_0(active1, 0x10000L);
      default :
         break;
   }
   return jjMoveNfa_0(20, 14);
}
private int jjMoveStringLiteralDfa15_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(20, 14);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(20, 14);
   }
   switch(curChar)
   {
      case 66:
         return jjMoveStringLiteralDfa16_0(active1, 0x10000L);
      case 98:
         return jjMoveStringLiteralDfa16_0(active1, 0x10000L);
      default :
         break;
   }
   return jjMoveNfa_0(20, 15);
}
private int jjMoveStringLiteralDfa16_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(20, 15);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(20, 15);
   }
   switch(curChar)
   {
      case 69:
         return jjMoveStringLiteralDfa17_0(active1, 0x10000L);
      case 101:
         return jjMoveStringLiteralDfa17_0(active1, 0x10000L);
      default :
         break;
   }
   return jjMoveNfa_0(20, 16);
}
private int jjMoveStringLiteralDfa17_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(20, 16);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(20, 16);
   }
   switch(curChar)
   {
      case 84:
         if ((active1 & 0x10000L) != 0L)
         {
            jjmatchedKind = 80;
            jjmatchedPos = 17;
         }
         break;
      case 116:
         if ((active1 & 0x10000L) != 0L)
         {
            jjmatchedKind = 80;
            jjmatchedPos = 17;
         }
         break;
      default :
         break;
   }
   return jjMoveNfa_0(20, 17);
}
static final long[] jjbitVec0 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private int jjMoveNfa_0(int startState, int curPos)
{
   int strKind = jjmatchedKind;
   int strPos = jjmatchedPos;
   int seenUpto;
   input_stream.backup(seenUpto = curPos + 1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { throw new Error("Internal Error"); }
   curPos = 0;
   int startsAt = 0;
   jjnewStateCnt = 613;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 20:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 64)
                        kind = 64;
                     jjCheckNAddStates(0, 78);
                  }
                  else if ((0x100003600L & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     jjCheckNAddStates(79, 91);
                  }
                  else if (curChar == 46)
                     jjCheckNAddStates(92, 113);
                  else if (curChar == 35)
                     jjCheckNAddStates(114, 118);
                  else if (curChar == 45)
                  {
                     if (kind > 34)
                        kind = 34;
                     jjCheckNAddStates(119, 123);
                  }
                  else if (curChar == 39)
                  {
                     if (kind > 33)
                        kind = 33;
                     jjCheckNAddStates(124, 128);
                  }
                  else if (curChar == 34)
                  {
                     if (kind > 33)
                        kind = 33;
                     jjCheckNAddStates(129, 133);
                  }
                  else if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 162;
                  else if (curChar == 33)
                     jjCheckNAddTwoStates(25, 34);
                  else if (curChar == 44)
                  {
                     if (kind > 29)
                        kind = 29;
                  }
                  else if (curChar == 62)
                  {
                     if (kind > 28)
                        kind = 28;
                  }
                  else if (curChar == 43)
                  {
                     if (kind > 27)
                        kind = 27;
                  }
                  else if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 3;
                  if ((0x100002600L & l) != 0L)
                     jjCheckNAddStates(134, 136);
                  else if (curChar == 45)
                     jjAddStates(137, 140);
                  else if (curChar == 60)
                     jjCheckNAddStates(141, 144);
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 0:
                  if ((0x100002600L & l) != 0L)
                     jjCheckNAddStates(134, 136);
                  break;
               case 1:
                  if (curChar == 10)
                     jjCheckNAddStates(134, 136);
                  break;
               case 2:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 3:
                  if (curChar == 42)
                     jjCheckNAddTwoStates(4, 5);
                  break;
               case 4:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(4, 5);
                  break;
               case 5:
                  if (curChar == 42)
                     jjCheckNAddStates(145, 147);
                  break;
               case 6:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(7, 5);
                  break;
               case 7:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(7, 5);
                  break;
               case 8:
                  if (curChar != 47)
                     break;
                  if (kind > 1)
                     kind = 1;
                  jjCheckNAddTwoStates(9, 11);
                  break;
               case 9:
                  if ((0x100002600L & l) == 0L)
                     break;
                  if (kind > 1)
                     kind = 1;
                  jjCheckNAddTwoStates(9, 11);
                  break;
               case 10:
                  if (curChar != 10)
                     break;
                  if (kind > 1)
                     kind = 1;
                  jjCheckNAddTwoStates(9, 11);
                  break;
               case 11:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 10;
                  break;
               case 12:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 14:
                  if (curChar == 43 && kind > 27)
                     kind = 27;
                  break;
               case 15:
                  if (curChar == 62 && kind > 28)
                     kind = 28;
                  break;
               case 16:
                  if (curChar == 44 && kind > 29)
                     kind = 29;
                  break;
               case 24:
                  if (curChar == 33)
                     jjCheckNAddTwoStates(25, 34);
                  break;
               case 25:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddTwoStates(34, 25);
                  break;
               case 36:
                  if (curChar == 45)
                     jjAddStates(148, 149);
                  break;
               case 37:
                  if (curChar != 45)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddTwoStates(38, 39);
                  break;
               case 38:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddTwoStates(38, 39);
                  break;
               case 40:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddTwoStates(38, 39);
                  break;
               case 41:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(150, 154);
                  break;
               case 42:
                  if (curChar != 10)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddTwoStates(38, 39);
                  break;
               case 43:
               case 52:
                  if (curChar == 13)
                     jjCheckNAdd(42);
                  break;
               case 44:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddTwoStates(38, 39);
                  break;
               case 45:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(155, 162);
                  break;
               case 46:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(163, 166);
                  break;
               case 47:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(167, 171);
                  break;
               case 48:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(172, 177);
                  break;
               case 49:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(178, 184);
                  break;
               case 51:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(185, 189);
                  break;
               case 53:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(190, 197);
                  break;
               case 54:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(198, 201);
                  break;
               case 55:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(202, 206);
                  break;
               case 56:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(207, 212);
                  break;
               case 57:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(213, 219);
                  break;
               case 58:
                  if (curChar == 60)
                     jjCheckNAddStates(141, 144);
                  break;
               case 59:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(220, 223);
                  break;
               case 60:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(61, 154);
                  break;
               case 61:
                  if (curChar == 45)
                     jjCheckNAddStates(224, 229);
                  break;
               case 62:
                  if ((0x3ff200000000000L & l) != 0L)
                     jjCheckNAddStates(224, 229);
                  break;
               case 63:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(230, 234);
                  break;
               case 64:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(65, 73);
                  break;
               case 65:
                  if (curChar == 45)
                     jjCheckNAddStates(235, 237);
                  break;
               case 66:
                  if ((0x3ff200000000000L & l) != 0L)
                     jjCheckNAddStates(235, 237);
                  break;
               case 67:
                  if (curChar == 61)
                     jjCheckNAddStates(238, 242);
                  break;
               case 68:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(69, 103);
                  break;
               case 69:
                  if (curChar == 45)
                     jjCheckNAddStates(243, 248);
                  break;
               case 70:
                  if ((0x3ff200000000000L & l) != 0L)
                     jjCheckNAddStates(243, 248);
                  break;
               case 71:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(249, 253);
                  break;
               case 72:
                  if (curChar == 62 && kind > 96)
                     kind = 96;
                  break;
               case 74:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     jjCheckNAddStates(235, 237);
                  break;
               case 76:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(254, 259);
                  break;
               case 77:
                  if (curChar == 10)
                     jjCheckNAddStates(235, 237);
                  break;
               case 78:
               case 86:
                  if (curChar == 13)
                     jjCheckNAdd(77);
                  break;
               case 79:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(235, 237);
                  break;
               case 80:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(260, 268);
                  break;
               case 81:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(269, 273);
                  break;
               case 82:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(274, 279);
                  break;
               case 83:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(280, 286);
                  break;
               case 84:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(287, 294);
                  break;
               case 85:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(295, 300);
                  break;
               case 87:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(301, 309);
                  break;
               case 88:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(310, 314);
                  break;
               case 89:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(315, 320);
                  break;
               case 90:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(321, 327);
                  break;
               case 91:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(328, 335);
                  break;
               case 93:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     jjCheckNAddStates(243, 248);
                  break;
               case 94:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(336, 343);
                  break;
               case 95:
                  if (curChar == 10)
                     jjCheckNAddStates(243, 248);
                  break;
               case 96:
               case 105:
                  if (curChar == 13)
                     jjCheckNAdd(95);
                  break;
               case 97:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(344, 351);
                  break;
               case 98:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(352, 362);
                  break;
               case 99:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(363, 369);
                  break;
               case 100:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(370, 377);
                  break;
               case 101:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(378, 386);
                  break;
               case 102:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(387, 396);
                  break;
               case 104:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(397, 404);
                  break;
               case 106:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(405, 415);
                  break;
               case 107:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(416, 422);
                  break;
               case 108:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(423, 430);
                  break;
               case 109:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(431, 439);
                  break;
               case 110:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(440, 449);
                  break;
               case 111:
                  if (curChar == 34)
                     jjCheckNAddStates(450, 452);
                  break;
               case 112:
                  if ((0xfffffffbffffcbffL & l) != 0L)
                     jjCheckNAddStates(450, 452);
                  break;
               case 113:
                  if (curChar == 34)
                     jjCheckNAddStates(453, 457);
                  break;
               case 115:
                  if ((0x3400L & l) != 0L)
                     jjCheckNAddStates(450, 452);
                  break;
               case 116:
                  if (curChar == 10)
                     jjCheckNAddStates(450, 452);
                  break;
               case 117:
               case 120:
                  if (curChar == 13)
                     jjCheckNAdd(116);
                  break;
               case 118:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     jjCheckNAddStates(450, 452);
                  break;
               case 119:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(458, 463);
                  break;
               case 121:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(450, 452);
                  break;
               case 122:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(464, 472);
                  break;
               case 123:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(473, 477);
                  break;
               case 124:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(478, 483);
                  break;
               case 125:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(484, 490);
                  break;
               case 126:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(491, 498);
                  break;
               case 127:
                  if (curChar == 39)
                     jjCheckNAddStates(499, 501);
                  break;
               case 128:
                  if ((0xffffff7fffffcbffL & l) != 0L)
                     jjCheckNAddStates(499, 501);
                  break;
               case 129:
                  if (curChar == 39)
                     jjCheckNAddStates(453, 457);
                  break;
               case 131:
                  if ((0x3400L & l) != 0L)
                     jjCheckNAddStates(499, 501);
                  break;
               case 132:
                  if (curChar == 10)
                     jjCheckNAddStates(499, 501);
                  break;
               case 133:
               case 136:
                  if (curChar == 13)
                     jjCheckNAdd(132);
                  break;
               case 134:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     jjCheckNAddStates(499, 501);
                  break;
               case 135:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(502, 507);
                  break;
               case 137:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(499, 501);
                  break;
               case 138:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(508, 516);
                  break;
               case 139:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(517, 521);
                  break;
               case 140:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(522, 527);
                  break;
               case 141:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(528, 534);
                  break;
               case 142:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(535, 542);
                  break;
               case 144:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     jjCheckNAddStates(224, 229);
                  break;
               case 145:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(543, 550);
                  break;
               case 146:
                  if (curChar == 10)
                     jjCheckNAddStates(224, 229);
                  break;
               case 147:
               case 156:
                  if (curChar == 13)
                     jjCheckNAdd(146);
                  break;
               case 148:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(551, 558);
                  break;
               case 149:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(559, 569);
                  break;
               case 150:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(570, 576);
                  break;
               case 151:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(577, 584);
                  break;
               case 152:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(585, 593);
                  break;
               case 153:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(594, 603);
                  break;
               case 155:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(604, 611);
                  break;
               case 157:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(612, 622);
                  break;
               case 158:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(623, 629);
                  break;
               case 159:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(630, 637);
                  break;
               case 160:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(638, 646);
                  break;
               case 161:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(647, 656);
                  break;
               case 162:
                  if (curChar == 47)
                     jjCheckNAddStates(657, 660);
                  break;
               case 163:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(661, 664);
                  break;
               case 164:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(165, 180);
                  break;
               case 165:
                  if (curChar == 45)
                     jjCheckNAddStates(665, 668);
                  break;
               case 166:
                  if ((0x3ff200000000000L & l) != 0L)
                     jjCheckNAddStates(665, 668);
                  break;
               case 167:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddTwoStates(168, 167);
                  break;
               case 168:
                  if (curChar == 62 && kind > 97)
                     kind = 97;
                  break;
               case 170:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     jjCheckNAddStates(665, 668);
                  break;
               case 171:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(669, 674);
                  break;
               case 172:
                  if (curChar == 10)
                     jjCheckNAddStates(665, 668);
                  break;
               case 173:
               case 182:
                  if (curChar == 13)
                     jjCheckNAdd(172);
                  break;
               case 174:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(675, 679);
                  break;
               case 175:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(680, 688);
                  break;
               case 176:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(689, 693);
                  break;
               case 177:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(694, 699);
                  break;
               case 178:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(700, 706);
                  break;
               case 179:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(707, 714);
                  break;
               case 181:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(715, 720);
                  break;
               case 183:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(721, 729);
                  break;
               case 184:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(730, 734);
                  break;
               case 185:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(735, 740);
                  break;
               case 186:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(741, 747);
                  break;
               case 187:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(748, 755);
                  break;
               case 188:
                  if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 162;
                  break;
               case 189:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAddStates(79, 91);
                  break;
               case 190:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAdd(190);
                  break;
               case 191:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddTwoStates(191, 192);
                  break;
               case 193:
                  if (curChar == 61 && kind > 24)
                     kind = 24;
                  break;
               case 194:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddTwoStates(194, 13);
                  break;
               case 195:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddTwoStates(195, 14);
                  break;
               case 196:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddTwoStates(196, 15);
                  break;
               case 197:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddTwoStates(197, 16);
                  break;
               case 198:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddTwoStates(198, 199);
                  break;
               case 201:
                  if (curChar != 34)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAddStates(129, 133);
                  break;
               case 202:
                  if ((0xfffffffbffffcbffL & l) != 0L)
                     jjCheckNAddStates(756, 758);
                  break;
               case 203:
                  if (curChar == 34 && kind > 32)
                     kind = 32;
                  break;
               case 205:
                  if ((0x3400L & l) != 0L)
                     jjCheckNAddStates(756, 758);
                  break;
               case 206:
                  if (curChar == 10)
                     jjCheckNAddStates(756, 758);
                  break;
               case 207:
               case 210:
                  if (curChar == 13)
                     jjCheckNAdd(206);
                  break;
               case 208:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     jjCheckNAddStates(756, 758);
                  break;
               case 209:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(759, 764);
                  break;
               case 211:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(756, 758);
                  break;
               case 212:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(765, 773);
                  break;
               case 213:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(774, 778);
                  break;
               case 214:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(779, 784);
                  break;
               case 215:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(785, 791);
                  break;
               case 216:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(792, 799);
                  break;
               case 217:
                  if ((0xfffffffbffffcbffL & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAddTwoStates(217, 218);
                  break;
               case 219:
                  if ((0x3400L & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAddTwoStates(217, 218);
                  break;
               case 220:
                  if (curChar != 10)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAddTwoStates(217, 218);
                  break;
               case 221:
               case 224:
                  if (curChar == 13)
                     jjCheckNAdd(220);
                  break;
               case 222:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAddTwoStates(217, 218);
                  break;
               case 223:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAddStates(800, 804);
                  break;
               case 225:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAddTwoStates(217, 218);
                  break;
               case 226:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAddStates(805, 812);
                  break;
               case 227:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAddStates(813, 816);
                  break;
               case 228:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAddStates(817, 821);
                  break;
               case 229:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAddStates(822, 827);
                  break;
               case 230:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAddStates(828, 834);
                  break;
               case 231:
                  if (curChar != 39)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAddStates(124, 128);
                  break;
               case 232:
                  if ((0xffffff7fffffcbffL & l) != 0L)
                     jjCheckNAddStates(835, 837);
                  break;
               case 233:
                  if (curChar == 39 && kind > 32)
                     kind = 32;
                  break;
               case 235:
                  if ((0x3400L & l) != 0L)
                     jjCheckNAddStates(835, 837);
                  break;
               case 236:
                  if (curChar == 10)
                     jjCheckNAddStates(835, 837);
                  break;
               case 237:
               case 240:
                  if (curChar == 13)
                     jjCheckNAdd(236);
                  break;
               case 238:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     jjCheckNAddStates(835, 837);
                  break;
               case 239:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(838, 843);
                  break;
               case 241:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(835, 837);
                  break;
               case 242:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(844, 852);
                  break;
               case 243:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(853, 857);
                  break;
               case 244:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(858, 863);
                  break;
               case 245:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(864, 870);
                  break;
               case 246:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(871, 878);
                  break;
               case 247:
                  if ((0xffffff7fffffcbffL & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAddTwoStates(247, 248);
                  break;
               case 249:
                  if ((0x3400L & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAddTwoStates(247, 248);
                  break;
               case 250:
                  if (curChar != 10)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAddTwoStates(247, 248);
                  break;
               case 251:
               case 254:
                  if (curChar == 13)
                     jjCheckNAdd(250);
                  break;
               case 252:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAddTwoStates(247, 248);
                  break;
               case 253:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAddStates(879, 883);
                  break;
               case 255:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAddTwoStates(247, 248);
                  break;
               case 256:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAddStates(884, 891);
                  break;
               case 257:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAddStates(892, 895);
                  break;
               case 258:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAddStates(896, 900);
                  break;
               case 259:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAddStates(901, 906);
                  break;
               case 260:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAddStates(907, 913);
                  break;
               case 261:
                  if (curChar == 45)
                     jjAddStates(137, 140);
                  break;
               case 262:
                  if (curChar != 45)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjCheckNAddTwoStates(263, 264);
                  break;
               case 263:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjCheckNAddTwoStates(263, 264);
                  break;
               case 265:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjCheckNAddTwoStates(263, 264);
                  break;
               case 266:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjCheckNAddStates(914, 918);
                  break;
               case 267:
                  if (curChar != 10)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjCheckNAddTwoStates(263, 264);
                  break;
               case 268:
               case 299:
                  if (curChar == 13)
                     jjCheckNAdd(267);
                  break;
               case 269:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjCheckNAddTwoStates(263, 264);
                  break;
               case 270:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjCheckNAddStates(919, 926);
                  break;
               case 271:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjCheckNAddStates(927, 930);
                  break;
               case 272:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjCheckNAddStates(931, 935);
                  break;
               case 273:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjCheckNAddStates(936, 941);
                  break;
               case 274:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjCheckNAddStates(942, 948);
                  break;
               case 275:
                  if (curChar == 45)
                     jjCheckNAddStates(949, 951);
                  break;
               case 276:
                  if ((0x3ff200000000000L & l) != 0L)
                     jjCheckNAddStates(949, 951);
                  break;
               case 277:
                  if (curChar == 40 && kind > 95)
                     kind = 95;
                  break;
               case 279:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     jjCheckNAddStates(949, 951);
                  break;
               case 280:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(952, 957);
                  break;
               case 281:
                  if (curChar == 10)
                     jjCheckNAddStates(949, 951);
                  break;
               case 282:
               case 291:
                  if (curChar == 13)
                     jjCheckNAdd(281);
                  break;
               case 283:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(949, 951);
                  break;
               case 284:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(958, 966);
                  break;
               case 285:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(967, 971);
                  break;
               case 286:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(972, 977);
                  break;
               case 287:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(978, 984);
                  break;
               case 288:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(985, 992);
                  break;
               case 290:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(993, 998);
                  break;
               case 292:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(999, 1007);
                  break;
               case 293:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(1008, 1012);
                  break;
               case 294:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(1013, 1018);
                  break;
               case 295:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(1019, 1025);
                  break;
               case 296:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(1026, 1033);
                  break;
               case 298:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjCheckNAddStates(1034, 1038);
                  break;
               case 300:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjCheckNAddStates(1039, 1046);
                  break;
               case 301:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjCheckNAddStates(1047, 1050);
                  break;
               case 302:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjCheckNAddStates(1051, 1055);
                  break;
               case 303:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjCheckNAddStates(1056, 1061);
                  break;
               case 304:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjCheckNAddStates(1062, 1068);
                  break;
               case 305:
                  if (curChar != 45)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjCheckNAddStates(119, 123);
                  break;
               case 306:
                  if (curChar == 35)
                     jjCheckNAddStates(114, 118);
                  break;
               case 307:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(308, 321);
                  break;
               case 308:
                  if (curChar != 45)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddTwoStates(309, 310);
                  break;
               case 309:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddTwoStates(309, 310);
                  break;
               case 311:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddTwoStates(309, 310);
                  break;
               case 312:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(1069, 1073);
                  break;
               case 313:
                  if (curChar != 10)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddTwoStates(309, 310);
                  break;
               case 314:
               case 323:
                  if (curChar == 13)
                     jjCheckNAdd(313);
                  break;
               case 315:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddTwoStates(309, 310);
                  break;
               case 316:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(1074, 1081);
                  break;
               case 317:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(1082, 1085);
                  break;
               case 318:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(1086, 1090);
                  break;
               case 319:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(1091, 1096);
                  break;
               case 320:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(1097, 1103);
                  break;
               case 322:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(1104, 1108);
                  break;
               case 324:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(1109, 1116);
                  break;
               case 325:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(1117, 1120);
                  break;
               case 326:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(1121, 1125);
                  break;
               case 327:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(1126, 1131);
                  break;
               case 328:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(1132, 1138);
                  break;
               case 329:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAddTwoStates(329, 330);
                  break;
               case 331:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAddTwoStates(329, 330);
                  break;
               case 332:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAddStates(1139, 1143);
                  break;
               case 333:
                  if (curChar != 10)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAddTwoStates(329, 330);
                  break;
               case 334:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 333;
                  break;
               case 335:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAddTwoStates(329, 330);
                  break;
               case 336:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAddStates(1144, 1151);
                  break;
               case 337:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAddStates(1152, 1155);
                  break;
               case 338:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAddStates(1156, 1160);
                  break;
               case 339:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAddStates(1161, 1166);
                  break;
               case 340:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAddStates(1167, 1173);
                  break;
               case 342:
                  if (curChar == 40)
                     jjCheckNAddStates(1174, 1179);
                  break;
               case 343:
                  if (curChar == 34)
                     jjCheckNAddStates(1180, 1182);
                  break;
               case 344:
                  if ((0xfffffffbffffcbffL & l) != 0L)
                     jjCheckNAddStates(1180, 1182);
                  break;
               case 345:
                  if (curChar == 34)
                     jjCheckNAddTwoStates(346, 347);
                  break;
               case 346:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddTwoStates(347, 346);
                  break;
               case 347:
                  if (curChar == 41 && kind > 53)
                     kind = 53;
                  break;
               case 349:
                  if ((0x3400L & l) != 0L)
                     jjCheckNAddStates(1180, 1182);
                  break;
               case 350:
                  if (curChar == 10)
                     jjCheckNAddStates(1180, 1182);
                  break;
               case 351:
               case 354:
                  if (curChar == 13)
                     jjCheckNAdd(350);
                  break;
               case 352:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     jjCheckNAddStates(1180, 1182);
                  break;
               case 353:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(1183, 1188);
                  break;
               case 355:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(1180, 1182);
                  break;
               case 356:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(1189, 1197);
                  break;
               case 357:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(1198, 1202);
                  break;
               case 358:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(1203, 1208);
                  break;
               case 359:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(1209, 1215);
                  break;
               case 360:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(1216, 1223);
                  break;
               case 361:
                  if (curChar == 39)
                     jjCheckNAddStates(1224, 1226);
                  break;
               case 362:
                  if ((0xffffff7fffffcbffL & l) != 0L)
                     jjCheckNAddStates(1224, 1226);
                  break;
               case 363:
                  if (curChar == 39)
                     jjCheckNAddTwoStates(346, 347);
                  break;
               case 365:
                  if ((0x3400L & l) != 0L)
                     jjCheckNAddStates(1224, 1226);
                  break;
               case 366:
                  if (curChar == 10)
                     jjCheckNAddStates(1224, 1226);
                  break;
               case 367:
               case 370:
                  if (curChar == 13)
                     jjCheckNAdd(366);
                  break;
               case 368:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     jjCheckNAddStates(1224, 1226);
                  break;
               case 369:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(1227, 1232);
                  break;
               case 371:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(1224, 1226);
                  break;
               case 372:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(1233, 1241);
                  break;
               case 373:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(1242, 1246);
                  break;
               case 374:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(1247, 1252);
                  break;
               case 375:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(1253, 1259);
                  break;
               case 376:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(1260, 1267);
                  break;
               case 377:
                  if ((0xfffffc7a00000000L & l) != 0L)
                     jjCheckNAddStates(1268, 1271);
                  break;
               case 379:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     jjCheckNAddStates(1268, 1271);
                  break;
               case 380:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(1272, 1277);
                  break;
               case 381:
                  if (curChar == 10)
                     jjCheckNAddStates(1268, 1271);
                  break;
               case 382:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 381;
                  break;
               case 383:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(1278, 1282);
                  break;
               case 384:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(1283, 1291);
                  break;
               case 385:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(1292, 1296);
                  break;
               case 386:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(1297, 1302);
                  break;
               case 387:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(1303, 1309);
                  break;
               case 388:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(1310, 1317);
                  break;
               case 389:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(1318, 1324);
                  break;
               case 392:
                  if (curChar == 43)
                     jjAddStates(1325, 1326);
                  break;
               case 393:
                  if (curChar != 63)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjstateSet[jjnewStateCnt++] = 394;
                  break;
               case 394:
                  if (curChar != 63)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjCheckNAddStates(1327, 1330);
                  break;
               case 395:
                  if (curChar == 63 && kind > 91)
                     kind = 91;
                  break;
               case 396:
               case 412:
               case 416:
               case 419:
               case 422:
                  if (curChar != 63)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjCheckNAdd(395);
                  break;
               case 397:
                  if (curChar != 63)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjCheckNAddTwoStates(395, 396);
                  break;
               case 398:
                  if (curChar != 63)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjCheckNAddStates(1331, 1333);
                  break;
               case 399:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjAddStates(1334, 1339);
                  break;
               case 400:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 401;
                  break;
               case 401:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 402;
                  break;
               case 402:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 403;
                  break;
               case 403:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(404);
                  break;
               case 404:
                  if ((0x3ff000000000000L & l) != 0L && kind > 91)
                     kind = 91;
                  break;
               case 405:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 406;
                  break;
               case 406:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 407;
                  break;
               case 407:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 408;
                  break;
               case 408:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjCheckNAdd(395);
                  break;
               case 409:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 410;
                  break;
               case 410:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 411;
                  break;
               case 411:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjstateSet[jjnewStateCnt++] = 412;
                  break;
               case 413:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 414;
                  break;
               case 414:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjstateSet[jjnewStateCnt++] = 415;
                  break;
               case 415:
                  if (curChar != 63)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjCheckNAddTwoStates(395, 416);
                  break;
               case 417:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjstateSet[jjnewStateCnt++] = 418;
                  break;
               case 418:
                  if (curChar != 63)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjCheckNAddStates(1340, 1342);
                  break;
               case 420:
                  if (curChar != 63)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjCheckNAddTwoStates(395, 419);
                  break;
               case 421:
                  if (curChar != 63)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjCheckNAddStates(1343, 1346);
                  break;
               case 423:
                  if (curChar != 63)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjCheckNAddTwoStates(395, 422);
                  break;
               case 424:
                  if (curChar != 63)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjCheckNAddStates(1347, 1349);
                  break;
               case 425:
                  if (curChar == 43)
                     jjstateSet[jjnewStateCnt++] = 426;
                  break;
               case 426:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(427, 433);
                  break;
               case 427:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 428;
                  break;
               case 428:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjstateSet[jjnewStateCnt++] = 429;
                  break;
               case 429:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjCheckNAddStates(1350, 1353);
                  break;
               case 430:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjCheckNAdd(404);
                  break;
               case 431:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjCheckNAddTwoStates(404, 430);
                  break;
               case 432:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjCheckNAddStates(1354, 1356);
                  break;
               case 433:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(1357, 1361);
                  break;
               case 434:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(427);
                  break;
               case 435:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(434, 427);
                  break;
               case 436:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(1362, 1364);
                  break;
               case 437:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(1365, 1368);
                  break;
               case 438:
                  if (curChar == 46)
                     jjCheckNAddStates(92, 113);
                  break;
               case 439:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(439, 441);
                  break;
               case 442:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(442, 444);
                  break;
               case 445:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(445, 446);
                  break;
               case 447:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(447, 449);
                  break;
               case 450:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(450, 452);
                  break;
               case 453:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(453, 455);
                  break;
               case 456:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(456, 458);
                  break;
               case 459:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(459, 461);
                  break;
               case 462:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(462, 464);
                  break;
               case 465:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(1369, 1372);
                  break;
               case 475:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(1373, 1375);
                  break;
               case 479:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(479, 481);
                  break;
               case 482:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(482, 484);
                  break;
               case 485:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(485, 488);
                  break;
               case 489:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(489, 493);
                  break;
               case 494:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(494, 495);
                  break;
               case 495:
                  if (curChar == 47)
                     jjCheckNAddTwoStates(496, 504);
                  break;
               case 496:
                  if (curChar == 46)
                     jjCheckNAdd(497);
                  break;
               case 497:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(497, 498);
                  break;
               case 498:
                  if (curChar == 47)
                     jjCheckNAddTwoStates(499, 501);
                  break;
               case 499:
                  if (curChar == 46)
                     jjCheckNAdd(500);
                  break;
               case 500:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 61)
                     kind = 61;
                  jjCheckNAdd(500);
                  break;
               case 501:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 61)
                     kind = 61;
                  jjCheckNAddStates(1376, 1378);
                  break;
               case 502:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 61)
                     kind = 61;
                  jjCheckNAdd(502);
                  break;
               case 503:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(503, 499);
                  break;
               case 504:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(1379, 1382);
                  break;
               case 505:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(505, 498);
                  break;
               case 506:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(506, 496);
                  break;
               case 507:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(1383, 1385);
                  break;
               case 508:
                  if (curChar != 45)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddTwoStates(509, 510);
                  break;
               case 509:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddTwoStates(509, 510);
                  break;
               case 511:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddTwoStates(509, 510);
                  break;
               case 512:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(1386, 1390);
                  break;
               case 513:
                  if (curChar != 10)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddTwoStates(509, 510);
                  break;
               case 514:
               case 523:
                  if (curChar == 13)
                     jjCheckNAdd(513);
                  break;
               case 515:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddTwoStates(509, 510);
                  break;
               case 516:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(1391, 1398);
                  break;
               case 517:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(1399, 1402);
                  break;
               case 518:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(1403, 1407);
                  break;
               case 519:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(1408, 1413);
                  break;
               case 520:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(1414, 1420);
                  break;
               case 522:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(1421, 1425);
                  break;
               case 524:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(1426, 1433);
                  break;
               case 525:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(1434, 1437);
                  break;
               case 526:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(1438, 1442);
                  break;
               case 527:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(1443, 1448);
                  break;
               case 528:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(1449, 1455);
                  break;
               case 529:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(529, 530);
                  break;
               case 530:
                  if (curChar == 37 && kind > 63)
                     kind = 63;
                  break;
               case 531:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  jjCheckNAdd(531);
                  break;
               case 532:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(533, 546);
                  break;
               case 533:
                  if (curChar != 45)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddTwoStates(534, 535);
                  break;
               case 534:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddTwoStates(534, 535);
                  break;
               case 536:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddTwoStates(534, 535);
                  break;
               case 537:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(1456, 1460);
                  break;
               case 538:
                  if (curChar != 10)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddTwoStates(534, 535);
                  break;
               case 539:
               case 548:
                  if (curChar == 13)
                     jjCheckNAdd(538);
                  break;
               case 540:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddTwoStates(534, 535);
                  break;
               case 541:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(1461, 1468);
                  break;
               case 542:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(1469, 1472);
                  break;
               case 543:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(1473, 1477);
                  break;
               case 544:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(1478, 1483);
                  break;
               case 545:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(1484, 1490);
                  break;
               case 547:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(1491, 1495);
                  break;
               case 549:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(1496, 1503);
                  break;
               case 550:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(1504, 1507);
                  break;
               case 551:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(1508, 1512);
                  break;
               case 552:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(1513, 1518);
                  break;
               case 553:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(1519, 1525);
                  break;
               case 555:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  jjCheckNAddStates(0, 78);
                  break;
               case 556:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(556, 441);
                  break;
               case 557:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(557, 558);
                  break;
               case 558:
                  if (curChar == 46)
                     jjCheckNAdd(439);
                  break;
               case 559:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(559, 444);
                  break;
               case 560:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(560, 561);
                  break;
               case 561:
                  if (curChar == 46)
                     jjCheckNAdd(442);
                  break;
               case 562:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(562, 446);
                  break;
               case 563:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(563, 564);
                  break;
               case 564:
                  if (curChar == 46)
                     jjCheckNAdd(445);
                  break;
               case 565:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(565, 449);
                  break;
               case 566:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(566, 567);
                  break;
               case 567:
                  if (curChar == 46)
                     jjCheckNAdd(447);
                  break;
               case 568:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(568, 452);
                  break;
               case 569:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(569, 570);
                  break;
               case 570:
                  if (curChar == 46)
                     jjCheckNAdd(450);
                  break;
               case 571:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(571, 455);
                  break;
               case 572:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(572, 573);
                  break;
               case 573:
                  if (curChar == 46)
                     jjCheckNAdd(453);
                  break;
               case 574:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(574, 458);
                  break;
               case 575:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(575, 576);
                  break;
               case 576:
                  if (curChar == 46)
                     jjCheckNAdd(456);
                  break;
               case 577:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(577, 461);
                  break;
               case 578:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(578, 579);
                  break;
               case 579:
                  if (curChar == 46)
                     jjCheckNAdd(459);
                  break;
               case 580:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(580, 464);
                  break;
               case 581:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(581, 582);
                  break;
               case 582:
                  if (curChar == 46)
                     jjCheckNAdd(462);
                  break;
               case 583:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(1526, 1529);
                  break;
               case 584:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(584, 585);
                  break;
               case 585:
                  if (curChar == 46)
                     jjCheckNAdd(465);
                  break;
               case 586:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(1530, 1532);
                  break;
               case 587:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(587, 588);
                  break;
               case 588:
                  if (curChar == 46)
                     jjCheckNAdd(475);
                  break;
               case 589:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(589, 481);
                  break;
               case 590:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(590, 591);
                  break;
               case 591:
                  if (curChar == 46)
                     jjCheckNAdd(479);
                  break;
               case 592:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(592, 484);
                  break;
               case 593:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(593, 594);
                  break;
               case 594:
                  if (curChar == 46)
                     jjCheckNAdd(482);
                  break;
               case 595:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(595, 488);
                  break;
               case 596:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(596, 597);
                  break;
               case 597:
                  if (curChar == 46)
                     jjCheckNAdd(485);
                  break;
               case 598:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(598, 493);
                  break;
               case 599:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(599, 600);
                  break;
               case 600:
                  if (curChar == 46)
                     jjCheckNAdd(489);
                  break;
               case 601:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(601, 495);
                  break;
               case 602:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(602, 603);
                  break;
               case 603:
                  if (curChar == 46)
                     jjCheckNAdd(494);
                  break;
               case 604:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(1533, 1535);
                  break;
               case 605:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(605, 606);
                  break;
               case 606:
                  if (curChar == 46)
                     jjCheckNAdd(507);
                  break;
               case 607:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(607, 530);
                  break;
               case 608:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(608, 609);
                  break;
               case 609:
                  if (curChar == 46)
                     jjCheckNAdd(529);
                  break;
               case 610:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  jjCheckNAdd(610);
                  break;
               case 611:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(611, 612);
                  break;
               case 612:
                  if (curChar == 46)
                     jjCheckNAdd(531);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 20:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 34)
                        kind = 34;
                     jjCheckNAddStates(119, 123);
                  }
                  else if (curChar == 92)
                     jjCheckNAddStates(1536, 1539);
                  else if (curChar == 126)
                  {
                     if (kind > 30)
                        kind = 30;
                     jjCheckNAdd(193);
                  }
                  else if (curChar == 64)
                     jjAddStates(1540, 1542);
                  else if (curChar == 123)
                  {
                     if (kind > 26)
                        kind = 26;
                  }
                  if ((0x20000000200000L & l) != 0L)
                     jjAddStates(1543, 1545);
                  else if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 22;
                  else if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 4:
                  jjCheckNAddTwoStates(4, 5);
                  break;
               case 6:
               case 7:
                  jjCheckNAddTwoStates(7, 5);
                  break;
               case 13:
                  if (curChar == 123 && kind > 26)
                     kind = 26;
                  break;
               case 17:
                  if ((0x200000002000000L & l) != 0L && kind > 52)
                     kind = 52;
                  break;
               case 18:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 19:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 21:
                  if ((0x10000000100000L & l) != 0L && kind > 52)
                     kind = 52;
                  break;
               case 22:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 23:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 26:
                  if ((0x10000000100000L & l) != 0L && kind > 65)
                     kind = 65;
                  break;
               case 27:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 28:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 27;
                  break;
               case 29:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 28;
                  break;
               case 30:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 29;
                  break;
               case 31:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 30;
                  break;
               case 32:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 33:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 32;
                  break;
               case 34:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 35:
                  if (curChar == 64)
                     jjAddStates(1540, 1542);
                  break;
               case 37:
               case 38:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddTwoStates(38, 39);
                  break;
               case 39:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(40, 41);
                  break;
               case 40:
                  if ((0xffffff81ffffffffL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddTwoStates(38, 39);
                  break;
               case 41:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(150, 154);
                  break;
               case 45:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(155, 162);
                  break;
               case 46:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(163, 166);
                  break;
               case 47:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(167, 171);
                  break;
               case 48:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(172, 177);
                  break;
               case 49:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(178, 184);
                  break;
               case 50:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(40, 51);
                  break;
               case 51:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(185, 189);
                  break;
               case 53:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(190, 197);
                  break;
               case 54:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(198, 201);
                  break;
               case 55:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(202, 206);
                  break;
               case 56:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(207, 212);
                  break;
               case 57:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(213, 219);
                  break;
               case 61:
               case 62:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(224, 229);
                  break;
               case 65:
               case 66:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(235, 237);
                  break;
               case 69:
               case 70:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(243, 248);
                  break;
               case 73:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(74, 85);
                  break;
               case 74:
                  if ((0xffffff81ffffffffL & l) != 0L)
                     jjCheckNAddStates(235, 237);
                  break;
               case 75:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(74, 76);
                  break;
               case 76:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(254, 259);
                  break;
               case 80:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(260, 268);
                  break;
               case 81:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(269, 273);
                  break;
               case 82:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(274, 279);
                  break;
               case 83:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(280, 286);
                  break;
               case 84:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(287, 294);
                  break;
               case 85:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(295, 300);
                  break;
               case 87:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(301, 309);
                  break;
               case 88:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(310, 314);
                  break;
               case 89:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(315, 320);
                  break;
               case 90:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(321, 327);
                  break;
               case 91:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(328, 335);
                  break;
               case 92:
                  if (curChar == 92)
                     jjCheckNAddStates(1546, 1549);
                  break;
               case 93:
                  if ((0xffffff81ffffffffL & l) != 0L)
                     jjCheckNAddStates(243, 248);
                  break;
               case 94:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(336, 343);
                  break;
               case 98:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(352, 362);
                  break;
               case 99:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(363, 369);
                  break;
               case 100:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(370, 377);
                  break;
               case 101:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(378, 386);
                  break;
               case 102:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(387, 396);
                  break;
               case 103:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(93, 104);
                  break;
               case 104:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(397, 404);
                  break;
               case 106:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(405, 415);
                  break;
               case 107:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(416, 422);
                  break;
               case 108:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(423, 430);
                  break;
               case 109:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(431, 439);
                  break;
               case 110:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(440, 449);
                  break;
               case 112:
                  if ((0xffffffffefffffffL & l) != 0L)
                     jjCheckNAddStates(450, 452);
                  break;
               case 114:
                  if (curChar == 92)
                     jjAddStates(1550, 1553);
                  break;
               case 118:
                  if ((0xffffff81ffffffffL & l) != 0L)
                     jjCheckNAddStates(450, 452);
                  break;
               case 119:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(458, 463);
                  break;
               case 122:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(464, 472);
                  break;
               case 123:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(473, 477);
                  break;
               case 124:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(478, 483);
                  break;
               case 125:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(484, 490);
                  break;
               case 126:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(491, 498);
                  break;
               case 128:
                  if ((0xffffffffefffffffL & l) != 0L)
                     jjCheckNAddStates(499, 501);
                  break;
               case 130:
                  if (curChar == 92)
                     jjAddStates(1554, 1557);
                  break;
               case 134:
                  if ((0xffffff81ffffffffL & l) != 0L)
                     jjCheckNAddStates(499, 501);
                  break;
               case 135:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(502, 507);
                  break;
               case 138:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(508, 516);
                  break;
               case 139:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(517, 521);
                  break;
               case 140:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(522, 527);
                  break;
               case 141:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(528, 534);
                  break;
               case 142:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(535, 542);
                  break;
               case 143:
                  if (curChar == 92)
                     jjCheckNAddStates(1558, 1561);
                  break;
               case 144:
                  if ((0xffffff81ffffffffL & l) != 0L)
                     jjCheckNAddStates(224, 229);
                  break;
               case 145:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(543, 550);
                  break;
               case 149:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(559, 569);
                  break;
               case 150:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(570, 576);
                  break;
               case 151:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(577, 584);
                  break;
               case 152:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(585, 593);
                  break;
               case 153:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(594, 603);
                  break;
               case 154:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(144, 155);
                  break;
               case 155:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(604, 611);
                  break;
               case 157:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(612, 622);
                  break;
               case 158:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(623, 629);
                  break;
               case 159:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(630, 637);
                  break;
               case 160:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(638, 646);
                  break;
               case 161:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(647, 656);
                  break;
               case 165:
               case 166:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(665, 668);
                  break;
               case 169:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(170, 171);
                  break;
               case 170:
                  if ((0xffffff81ffffffffL & l) != 0L)
                     jjCheckNAddStates(665, 668);
                  break;
               case 171:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(669, 674);
                  break;
               case 175:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(680, 688);
                  break;
               case 176:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(689, 693);
                  break;
               case 177:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(694, 699);
                  break;
               case 178:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(700, 706);
                  break;
               case 179:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(707, 714);
                  break;
               case 180:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(170, 181);
                  break;
               case 181:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(715, 720);
                  break;
               case 183:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(721, 729);
                  break;
               case 184:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(730, 734);
                  break;
               case 185:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(735, 740);
                  break;
               case 186:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(741, 747);
                  break;
               case 187:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(748, 755);
                  break;
               case 192:
                  if (curChar == 126)
                     jjCheckNAdd(193);
                  break;
               case 199:
                  if (curChar == 126 && kind > 30)
                     kind = 30;
                  break;
               case 200:
                  if (curChar != 126)
                     break;
                  if (kind > 30)
                     kind = 30;
                  jjCheckNAdd(193);
                  break;
               case 202:
                  if ((0xffffffffefffffffL & l) != 0L)
                     jjCheckNAddStates(756, 758);
                  break;
               case 204:
                  if (curChar == 92)
                     jjAddStates(1562, 1565);
                  break;
               case 208:
                  if ((0xffffff81ffffffffL & l) != 0L)
                     jjCheckNAddStates(756, 758);
                  break;
               case 209:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(759, 764);
                  break;
               case 212:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(765, 773);
                  break;
               case 213:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(774, 778);
                  break;
               case 214:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(779, 784);
                  break;
               case 215:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(785, 791);
                  break;
               case 216:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(792, 799);
                  break;
               case 217:
                  if ((0xffffffffefffffffL & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAddTwoStates(217, 218);
                  break;
               case 218:
                  if (curChar == 92)
                     jjAddStates(1566, 1569);
                  break;
               case 222:
                  if ((0xffffff81ffffffffL & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAddTwoStates(217, 218);
                  break;
               case 223:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAddStates(800, 804);
                  break;
               case 226:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAddStates(805, 812);
                  break;
               case 227:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAddStates(813, 816);
                  break;
               case 228:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAddStates(817, 821);
                  break;
               case 229:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAddStates(822, 827);
                  break;
               case 230:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAddStates(828, 834);
                  break;
               case 232:
                  if ((0xffffffffefffffffL & l) != 0L)
                     jjCheckNAddStates(835, 837);
                  break;
               case 234:
                  if (curChar == 92)
                     jjAddStates(1570, 1573);
                  break;
               case 238:
                  if ((0xffffff81ffffffffL & l) != 0L)
                     jjCheckNAddStates(835, 837);
                  break;
               case 239:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(838, 843);
                  break;
               case 242:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(844, 852);
                  break;
               case 243:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(853, 857);
                  break;
               case 244:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(858, 863);
                  break;
               case 245:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(864, 870);
                  break;
               case 246:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(871, 878);
                  break;
               case 247:
                  if ((0xffffffffefffffffL & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAddTwoStates(247, 248);
                  break;
               case 248:
                  if (curChar == 92)
                     jjAddStates(1574, 1577);
                  break;
               case 252:
                  if ((0xffffff81ffffffffL & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAddTwoStates(247, 248);
                  break;
               case 253:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAddStates(879, 883);
                  break;
               case 256:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAddStates(884, 891);
                  break;
               case 257:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAddStates(892, 895);
                  break;
               case 258:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAddStates(896, 900);
                  break;
               case 259:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAddStates(901, 906);
                  break;
               case 260:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAddStates(907, 913);
                  break;
               case 262:
               case 263:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjCheckNAddTwoStates(263, 264);
                  break;
               case 264:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(265, 266);
                  break;
               case 265:
                  if ((0xffffff81ffffffffL & l) == 0L)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjCheckNAddTwoStates(263, 264);
                  break;
               case 266:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjCheckNAddStates(914, 918);
                  break;
               case 270:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjCheckNAddStates(919, 926);
                  break;
               case 271:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjCheckNAddStates(927, 930);
                  break;
               case 272:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjCheckNAddStates(931, 935);
                  break;
               case 273:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjCheckNAddStates(936, 941);
                  break;
               case 274:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjCheckNAddStates(942, 948);
                  break;
               case 275:
               case 276:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(949, 951);
                  break;
               case 278:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(279, 280);
                  break;
               case 279:
                  if ((0xffffff81ffffffffL & l) != 0L)
                     jjCheckNAddStates(949, 951);
                  break;
               case 280:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(952, 957);
                  break;
               case 284:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(958, 966);
                  break;
               case 285:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(967, 971);
                  break;
               case 286:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(972, 977);
                  break;
               case 287:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(978, 984);
                  break;
               case 288:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(985, 992);
                  break;
               case 289:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(279, 290);
                  break;
               case 290:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(993, 998);
                  break;
               case 292:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(999, 1007);
                  break;
               case 293:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(1008, 1012);
                  break;
               case 294:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(1013, 1018);
                  break;
               case 295:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(1019, 1025);
                  break;
               case 296:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(1026, 1033);
                  break;
               case 297:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(265, 298);
                  break;
               case 298:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjCheckNAddStates(1034, 1038);
                  break;
               case 300:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjCheckNAddStates(1039, 1046);
                  break;
               case 301:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjCheckNAddStates(1047, 1050);
                  break;
               case 302:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjCheckNAddStates(1051, 1055);
                  break;
               case 303:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjCheckNAddStates(1056, 1061);
                  break;
               case 304:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjCheckNAddStates(1062, 1068);
                  break;
               case 305:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjCheckNAddStates(119, 123);
                  break;
               case 308:
               case 309:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddTwoStates(309, 310);
                  break;
               case 310:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(311, 312);
                  break;
               case 311:
                  if ((0xffffff81ffffffffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddTwoStates(309, 310);
                  break;
               case 312:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(1069, 1073);
                  break;
               case 316:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(1074, 1081);
                  break;
               case 317:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(1082, 1085);
                  break;
               case 318:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(1086, 1090);
                  break;
               case 319:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(1091, 1096);
                  break;
               case 320:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(1097, 1103);
                  break;
               case 321:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(311, 322);
                  break;
               case 322:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(1104, 1108);
                  break;
               case 324:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(1109, 1116);
                  break;
               case 325:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(1117, 1120);
                  break;
               case 326:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(1121, 1125);
                  break;
               case 327:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(1126, 1131);
                  break;
               case 328:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(1132, 1138);
                  break;
               case 329:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAddTwoStates(329, 330);
                  break;
               case 330:
                  if (curChar == 92)
                     jjAddStates(1578, 1579);
                  break;
               case 331:
                  if ((0xffffff81ffffffffL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAddTwoStates(329, 330);
                  break;
               case 332:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAddStates(1139, 1143);
                  break;
               case 336:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAddStates(1144, 1151);
                  break;
               case 337:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAddStates(1152, 1155);
                  break;
               case 338:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAddStates(1156, 1160);
                  break;
               case 339:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAddStates(1161, 1166);
                  break;
               case 340:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAddStates(1167, 1173);
                  break;
               case 341:
                  if ((0x20000000200000L & l) != 0L)
                     jjAddStates(1543, 1545);
                  break;
               case 344:
                  if ((0xffffffffefffffffL & l) != 0L)
                     jjCheckNAddStates(1180, 1182);
                  break;
               case 348:
                  if (curChar == 92)
                     jjAddStates(1580, 1583);
                  break;
               case 352:
                  if ((0xffffff81ffffffffL & l) != 0L)
                     jjCheckNAddStates(1180, 1182);
                  break;
               case 353:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(1183, 1188);
                  break;
               case 356:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(1189, 1197);
                  break;
               case 357:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(1198, 1202);
                  break;
               case 358:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(1203, 1208);
                  break;
               case 359:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(1209, 1215);
                  break;
               case 360:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(1216, 1223);
                  break;
               case 362:
                  if ((0xffffffffefffffffL & l) != 0L)
                     jjCheckNAddStates(1224, 1226);
                  break;
               case 364:
                  if (curChar == 92)
                     jjAddStates(1584, 1587);
                  break;
               case 368:
                  if ((0xffffff81ffffffffL & l) != 0L)
                     jjCheckNAddStates(1224, 1226);
                  break;
               case 369:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(1227, 1232);
                  break;
               case 372:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(1233, 1241);
                  break;
               case 373:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(1242, 1246);
                  break;
               case 374:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(1247, 1252);
                  break;
               case 375:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(1253, 1259);
                  break;
               case 376:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(1260, 1267);
                  break;
               case 377:
                  if ((0x7fffffffefffffffL & l) != 0L)
                     jjCheckNAddStates(1268, 1271);
                  break;
               case 378:
                  if (curChar == 92)
                     jjAddStates(1588, 1589);
                  break;
               case 379:
                  if ((0xffffff81ffffffffL & l) != 0L)
                     jjCheckNAddStates(1268, 1271);
                  break;
               case 380:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(1272, 1277);
                  break;
               case 384:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(1283, 1291);
                  break;
               case 385:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(1292, 1296);
                  break;
               case 386:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(1297, 1302);
                  break;
               case 387:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(1303, 1309);
                  break;
               case 388:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(1310, 1317);
                  break;
               case 390:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 342;
                  break;
               case 391:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 390;
                  break;
               case 399:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjAddStates(1334, 1339);
                  break;
               case 400:
                  if ((0x7e00000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 401;
                  break;
               case 401:
                  if ((0x7e00000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 402;
                  break;
               case 402:
                  if ((0x7e00000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 403;
                  break;
               case 403:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAdd(404);
                  break;
               case 404:
                  if ((0x7e00000000L & l) != 0L && kind > 91)
                     kind = 91;
                  break;
               case 405:
                  if ((0x7e00000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 406;
                  break;
               case 406:
                  if ((0x7e00000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 407;
                  break;
               case 407:
                  if ((0x7e00000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 408;
                  break;
               case 408:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjstateSet[jjnewStateCnt++] = 395;
                  break;
               case 409:
                  if ((0x7e00000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 410;
                  break;
               case 410:
                  if ((0x7e00000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 411;
                  break;
               case 411:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjstateSet[jjnewStateCnt++] = 412;
                  break;
               case 413:
                  if ((0x7e00000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 414;
                  break;
               case 414:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjstateSet[jjnewStateCnt++] = 415;
                  break;
               case 417:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjstateSet[jjnewStateCnt++] = 418;
                  break;
               case 426:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(427, 433);
                  break;
               case 428:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjstateSet[jjnewStateCnt++] = 429;
                  break;
               case 429:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjCheckNAddStates(1350, 1353);
                  break;
               case 430:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjCheckNAdd(404);
                  break;
               case 431:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjCheckNAddTwoStates(404, 430);
                  break;
               case 432:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjCheckNAddStates(1354, 1356);
                  break;
               case 433:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(1357, 1361);
                  break;
               case 434:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAdd(427);
                  break;
               case 435:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(434, 427);
                  break;
               case 436:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(1362, 1364);
                  break;
               case 437:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(1365, 1368);
                  break;
               case 440:
                  if ((0x10000000100000L & l) != 0L && kind > 54)
                     kind = 54;
                  break;
               case 441:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 440;
                  break;
               case 443:
                  if ((0x200000002000L & l) != 0L && kind > 54)
                     kind = 54;
                  break;
               case 444:
                  if ((0x200000002000L & l) != 0L)
                     jjCheckNAdd(443);
                  break;
               case 446:
                  if ((0x800000008L & l) != 0L)
                     jjCheckNAdd(443);
                  break;
               case 448:
                  if ((0x800000008L & l) != 0L && kind > 54)
                     kind = 54;
                  break;
               case 449:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 448;
                  break;
               case 451:
                  if ((0x400000004000L & l) != 0L && kind > 54)
                     kind = 54;
                  break;
               case 452:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 451;
                  break;
               case 454:
                  if ((0x1000000010L & l) != 0L && kind > 54)
                     kind = 54;
                  break;
               case 455:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 454;
                  break;
               case 457:
                  if ((0x100000001000000L & l) != 0L && kind > 54)
                     kind = 54;
                  break;
               case 458:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 457;
                  break;
               case 460:
                  if ((0x200000002000L & l) != 0L && kind > 55)
                     kind = 55;
                  break;
               case 461:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 460;
                  break;
               case 463:
                  if ((0x100000001000000L & l) != 0L && kind > 56)
                     kind = 56;
                  break;
               case 464:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 463;
                  break;
               case 466:
                  if ((0x8000000080L & l) != 0L && kind > 57)
                     kind = 57;
                  break;
               case 467:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 466;
                  break;
               case 468:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 467;
                  break;
               case 469:
                  if ((0x1000000010L & l) != 0L && kind > 57)
                     kind = 57;
                  break;
               case 470:
               case 473:
                  if ((0x200000002L & l) != 0L)
                     jjCheckNAdd(469);
                  break;
               case 471:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 470;
                  break;
               case 472:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 471;
                  break;
               case 474:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 473;
                  break;
               case 476:
               case 478:
                  if ((0x8000000080000L & l) != 0L && kind > 58)
                     kind = 58;
                  break;
               case 477:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 476;
                  break;
               case 480:
                  if ((0x400000004000000L & l) != 0L && kind > 59)
                     kind = 59;
                  break;
               case 481:
               case 483:
                  if ((0x10000000100L & l) != 0L)
                     jjCheckNAdd(480);
                  break;
               case 484:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 483;
                  break;
               case 486:
                  if ((0x20000000200L & l) != 0L && kind > 60)
                     kind = 60;
                  break;
               case 487:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 486;
                  break;
               case 488:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 487;
                  break;
               case 490:
                  if ((0x200000002000L & l) != 0L && kind > 60)
                     kind = 60;
                  break;
               case 491:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 490;
                  break;
               case 492:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 491;
                  break;
               case 493:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 492;
                  break;
               case 508:
               case 509:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddTwoStates(509, 510);
                  break;
               case 510:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(511, 512);
                  break;
               case 511:
                  if ((0xffffff81ffffffffL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddTwoStates(509, 510);
                  break;
               case 512:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(1386, 1390);
                  break;
               case 516:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(1391, 1398);
                  break;
               case 517:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(1399, 1402);
                  break;
               case 518:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(1403, 1407);
                  break;
               case 519:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(1408, 1413);
                  break;
               case 520:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(1414, 1420);
                  break;
               case 521:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(511, 522);
                  break;
               case 522:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(1421, 1425);
                  break;
               case 524:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(1426, 1433);
                  break;
               case 525:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(1434, 1437);
                  break;
               case 526:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(1438, 1442);
                  break;
               case 527:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(1443, 1448);
                  break;
               case 528:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(1449, 1455);
                  break;
               case 533:
               case 534:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddTwoStates(534, 535);
                  break;
               case 535:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(536, 537);
                  break;
               case 536:
                  if ((0xffffff81ffffffffL & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddTwoStates(534, 535);
                  break;
               case 537:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(1456, 1460);
                  break;
               case 541:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(1461, 1468);
                  break;
               case 542:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(1469, 1472);
                  break;
               case 543:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(1473, 1477);
                  break;
               case 544:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(1478, 1483);
                  break;
               case 545:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(1484, 1490);
                  break;
               case 546:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(536, 547);
                  break;
               case 547:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(1491, 1495);
                  break;
               case 549:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(1496, 1503);
                  break;
               case 550:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(1504, 1507);
                  break;
               case 551:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(1508, 1512);
                  break;
               case 552:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(1513, 1518);
                  break;
               case 553:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(1519, 1525);
                  break;
               case 554:
                  if (curChar == 92)
                     jjCheckNAddStates(1536, 1539);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 20:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjCheckNAddStates(119, 123);
                  break;
               case 4:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddTwoStates(4, 5);
                  break;
               case 6:
               case 7:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddTwoStates(7, 5);
                  break;
               case 37:
               case 38:
               case 40:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddTwoStates(38, 39);
                  break;
               case 61:
               case 62:
               case 144:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(224, 229);
                  break;
               case 65:
               case 66:
               case 74:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(235, 237);
                  break;
               case 69:
               case 70:
               case 93:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(243, 248);
                  break;
               case 112:
               case 118:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(450, 452);
                  break;
               case 128:
               case 134:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(499, 501);
                  break;
               case 165:
               case 166:
               case 170:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(665, 668);
                  break;
               case 202:
               case 208:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(756, 758);
                  break;
               case 217:
               case 222:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAddTwoStates(217, 218);
                  break;
               case 232:
               case 238:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(835, 837);
                  break;
               case 247:
               case 252:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAddTwoStates(247, 248);
                  break;
               case 262:
               case 263:
               case 265:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjCheckNAddTwoStates(263, 264);
                  break;
               case 275:
               case 276:
               case 279:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(949, 951);
                  break;
               case 308:
               case 309:
               case 311:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddTwoStates(309, 310);
                  break;
               case 329:
               case 331:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAddTwoStates(329, 330);
                  break;
               case 344:
               case 352:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(1180, 1182);
                  break;
               case 362:
               case 368:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(1224, 1226);
                  break;
               case 377:
               case 379:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(1268, 1271);
                  break;
               case 508:
               case 509:
               case 511:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddTwoStates(509, 510);
                  break;
               case 533:
               case 534:
               case 536:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddTwoStates(534, 535);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 613 - (jjnewStateCnt = startsAt)))
         break;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { break; }
   }
   if (jjmatchedPos > strPos)
      return curPos;

   int toRet = Math.max(curPos, seenUpto);

   if (curPos < toRet)
      for (i = toRet - Math.min(curPos, seenUpto); i-- > 0; )
         try { curChar = input_stream.readChar(); }
         catch(java.io.IOException e) { throw new Error("Internal Error : Please send a bug report."); }

   if (jjmatchedPos < strPos)
   {
      jjmatchedKind = strKind;
      jjmatchedPos = strPos;
   }
   else if (jjmatchedPos == strPos && jjmatchedKind > strKind)
      jjmatchedKind = strKind;

   return toRet;
}
static final int[] jjnextStates = {
   556, 557, 558, 441, 559, 560, 561, 444, 562, 563, 564, 446, 565, 566, 567, 449, 
   568, 569, 570, 452, 571, 572, 573, 455, 574, 575, 576, 458, 577, 578, 579, 461, 
   580, 581, 582, 464, 583, 584, 585, 468, 472, 474, 586, 587, 588, 477, 478, 589, 
   590, 591, 481, 592, 593, 594, 484, 595, 596, 597, 488, 598, 599, 600, 493, 601, 
   602, 603, 495, 604, 605, 606, 508, 607, 608, 609, 530, 610, 611, 612, 521, 190, 
   191, 192, 194, 13, 195, 14, 196, 15, 197, 16, 198, 199, 439, 442, 445, 447, 
   450, 453, 456, 459, 462, 465, 475, 479, 482, 485, 489, 494, 507, 529, 531, 532, 
   533, 546, 307, 308, 329, 330, 321, 263, 276, 277, 278, 264, 232, 233, 247, 248, 
   234, 202, 203, 217, 218, 204, 0, 2, 12, 262, 275, 289, 297, 59, 60, 61, 
   154, 5, 6, 8, 37, 50, 38, 43, 44, 39, 45, 38, 46, 43, 44, 39, 
   47, 48, 49, 38, 43, 44, 39, 38, 46, 43, 44, 39, 38, 46, 43, 44, 
   39, 47, 38, 46, 43, 44, 39, 47, 48, 52, 44, 38, 39, 53, 54, 52, 
   44, 38, 39, 55, 56, 57, 52, 44, 38, 39, 54, 52, 44, 38, 39, 54, 
   52, 44, 38, 39, 55, 54, 52, 44, 38, 39, 55, 56, 60, 61, 154, 59, 
   62, 63, 64, 65, 72, 143, 64, 65, 72, 73, 63, 66, 67, 75, 68, 69, 
   111, 127, 103, 64, 65, 70, 71, 72, 92, 64, 65, 72, 73, 71, 66, 78, 
   79, 67, 75, 80, 66, 81, 78, 79, 67, 75, 82, 83, 84, 66, 78, 79, 
   67, 75, 66, 81, 78, 79, 67, 75, 66, 81, 78, 79, 67, 75, 82, 66, 
   81, 78, 79, 67, 75, 82, 83, 86, 79, 66, 67, 75, 87, 88, 86, 79, 
   66, 67, 75, 89, 90, 91, 86, 79, 66, 67, 75, 88, 86, 79, 66, 67, 
   75, 88, 86, 79, 66, 67, 75, 89, 88, 86, 79, 66, 67, 75, 89, 90, 
   64, 65, 70, 96, 72, 92, 97, 98, 64, 65, 70, 71, 72, 73, 71, 92, 
   64, 65, 70, 99, 96, 72, 92, 97, 100, 101, 102, 64, 65, 70, 96, 72, 
   92, 97, 64, 65, 70, 99, 96, 72, 92, 97, 64, 65, 70, 99, 96, 72, 
   92, 97, 100, 64, 65, 70, 99, 96, 72, 92, 97, 100, 101, 64, 65, 105, 
   70, 72, 92, 97, 106, 64, 65, 107, 105, 70, 72, 92, 97, 108, 109, 110, 
   64, 65, 105, 70, 72, 92, 97, 64, 65, 107, 105, 70, 72, 92, 97, 64, 
   65, 107, 105, 70, 72, 92, 97, 108, 64, 65, 107, 105, 70, 72, 92, 97, 
   108, 109, 112, 113, 114, 64, 65, 71, 72, 73, 112, 120, 121, 113, 114, 122, 
   112, 123, 120, 121, 113, 114, 124, 125, 126, 112, 120, 121, 113, 114, 112, 123, 
   120, 121, 113, 114, 112, 123, 120, 121, 113, 114, 124, 112, 123, 120, 121, 113, 
   114, 124, 125, 128, 129, 130, 128, 136, 137, 129, 130, 138, 128, 139, 136, 137, 
   129, 130, 140, 141, 142, 128, 136, 137, 129, 130, 128, 139, 136, 137, 129, 130, 
   128, 139, 136, 137, 129, 130, 140, 128, 139, 136, 137, 129, 130, 140, 141, 62, 
   147, 64, 65, 72, 143, 148, 149, 62, 63, 64, 65, 72, 73, 63, 143, 62, 
   150, 147, 64, 65, 72, 143, 148, 151, 152, 153, 62, 147, 64, 65, 72, 143, 
   148, 62, 150, 147, 64, 65, 72, 143, 148, 62, 150, 147, 64, 65, 72, 143, 
   148, 151, 62, 150, 147, 64, 65, 72, 143, 148, 151, 152, 156, 62, 64, 65, 
   72, 143, 148, 157, 158, 156, 62, 64, 65, 72, 143, 148, 159, 160, 161, 156, 
   62, 64, 65, 72, 143, 148, 158, 156, 62, 64, 65, 72, 143, 148, 158, 156, 
   62, 64, 65, 72, 143, 148, 159, 158, 156, 62, 64, 65, 72, 143, 148, 159, 
   160, 163, 164, 165, 180, 164, 165, 180, 163, 166, 167, 168, 169, 166, 173, 168, 
   169, 174, 175, 166, 167, 168, 167, 169, 166, 176, 173, 168, 169, 174, 177, 178, 
   179, 166, 173, 168, 169, 174, 166, 176, 173, 168, 169, 174, 166, 176, 173, 168, 
   169, 174, 177, 166, 176, 173, 168, 169, 174, 177, 178, 182, 166, 168, 169, 174, 
   183, 184, 182, 166, 168, 169, 174, 185, 186, 187, 182, 166, 168, 169, 174, 184, 
   182, 166, 168, 169, 174, 184, 182, 166, 168, 169, 174, 185, 184, 182, 166, 168, 
   169, 174, 185, 186, 202, 203, 204, 202, 210, 211, 203, 204, 212, 202, 213, 210, 
   211, 203, 204, 214, 215, 216, 202, 210, 211, 203, 204, 202, 213, 210, 211, 203, 
   204, 202, 213, 210, 211, 203, 204, 214, 202, 213, 210, 211, 203, 204, 214, 215, 
   217, 224, 225, 218, 226, 217, 227, 224, 225, 218, 228, 229, 230, 217, 224, 225, 
   218, 217, 227, 224, 225, 218, 217, 227, 224, 225, 218, 228, 217, 227, 224, 225, 
   218, 228, 229, 232, 233, 234, 232, 240, 241, 233, 234, 242, 232, 243, 240, 241, 
   233, 234, 244, 245, 246, 232, 240, 241, 233, 234, 232, 243, 240, 241, 233, 234, 
   232, 243, 240, 241, 233, 234, 244, 232, 243, 240, 241, 233, 234, 244, 245, 247, 
   254, 255, 248, 256, 247, 257, 254, 255, 248, 258, 259, 260, 247, 254, 255, 248, 
   247, 257, 254, 255, 248, 247, 257, 254, 255, 248, 258, 247, 257, 254, 255, 248, 
   258, 259, 263, 268, 269, 264, 270, 263, 271, 268, 269, 264, 272, 273, 274, 263, 
   268, 269, 264, 263, 271, 268, 269, 264, 263, 271, 268, 269, 264, 272, 263, 271, 
   268, 269, 264, 272, 273, 276, 277, 278, 276, 282, 283, 277, 278, 284, 276, 285, 
   282, 283, 277, 278, 286, 287, 288, 276, 282, 283, 277, 278, 276, 285, 282, 283, 
   277, 278, 276, 285, 282, 283, 277, 278, 286, 276, 285, 282, 283, 277, 278, 286, 
   287, 291, 283, 276, 277, 278, 292, 293, 291, 283, 276, 277, 278, 294, 295, 296, 
   291, 283, 276, 277, 278, 293, 291, 283, 276, 277, 278, 293, 291, 283, 276, 277, 
   278, 294, 293, 291, 283, 276, 277, 278, 294, 295, 299, 269, 263, 264, 300, 301, 
   299, 269, 263, 264, 302, 303, 304, 299, 269, 263, 264, 301, 299, 269, 263, 264, 
   301, 299, 269, 263, 264, 302, 301, 299, 269, 263, 264, 302, 303, 309, 314, 315, 
   310, 316, 309, 317, 314, 315, 310, 318, 319, 320, 309, 314, 315, 310, 309, 317, 
   314, 315, 310, 309, 317, 314, 315, 310, 318, 309, 317, 314, 315, 310, 318, 319, 
   323, 315, 309, 310, 324, 325, 323, 315, 309, 310, 326, 327, 328, 323, 315, 309, 
   310, 325, 323, 315, 309, 310, 325, 323, 315, 309, 310, 326, 325, 323, 315, 309, 
   310, 326, 327, 329, 334, 335, 330, 336, 329, 337, 334, 335, 330, 338, 339, 340, 
   329, 334, 335, 330, 329, 337, 334, 335, 330, 329, 337, 334, 335, 330, 338, 329, 
   337, 334, 335, 330, 338, 339, 343, 361, 377, 347, 378, 389, 344, 345, 348, 344, 
   354, 355, 345, 348, 356, 344, 357, 354, 355, 345, 348, 358, 359, 360, 344, 354, 
   355, 345, 348, 344, 357, 354, 355, 345, 348, 344, 357, 354, 355, 345, 348, 358, 
   344, 357, 354, 355, 345, 348, 358, 359, 362, 363, 364, 362, 370, 371, 363, 364, 
   372, 362, 373, 370, 371, 363, 364, 374, 375, 376, 362, 370, 371, 363, 364, 362, 
   373, 370, 371, 363, 364, 362, 373, 370, 371, 363, 364, 374, 362, 373, 370, 371, 
   363, 364, 374, 375, 377, 346, 347, 378, 377, 382, 347, 378, 383, 384, 377, 346, 
   347, 346, 378, 377, 385, 382, 347, 378, 383, 386, 387, 388, 377, 382, 347, 378, 
   383, 377, 385, 382, 347, 378, 383, 377, 385, 382, 347, 378, 383, 386, 377, 385, 
   382, 347, 378, 383, 386, 387, 343, 361, 377, 347, 346, 378, 389, 393, 399, 395, 
   396, 397, 398, 395, 396, 397, 400, 405, 409, 413, 417, 421, 395, 419, 420, 395, 
   422, 423, 424, 395, 422, 423, 404, 430, 431, 432, 404, 430, 431, 434, 427, 435, 
   436, 437, 434, 427, 435, 434, 427, 435, 436, 465, 468, 472, 474, 475, 477, 478, 
   502, 503, 499, 505, 506, 496, 498, 507, 508, 521, 509, 514, 515, 510, 516, 509, 
   517, 514, 515, 510, 518, 519, 520, 509, 514, 515, 510, 509, 517, 514, 515, 510, 
   509, 517, 514, 515, 510, 518, 509, 517, 514, 515, 510, 518, 519, 523, 515, 509, 
   510, 524, 525, 523, 515, 509, 510, 526, 527, 528, 523, 515, 509, 510, 525, 523, 
   515, 509, 510, 525, 523, 515, 509, 510, 526, 525, 523, 515, 509, 510, 526, 527, 
   534, 539, 540, 535, 541, 534, 542, 539, 540, 535, 543, 544, 545, 534, 539, 540, 
   535, 534, 542, 539, 540, 535, 534, 542, 539, 540, 535, 543, 534, 542, 539, 540, 
   535, 543, 544, 548, 540, 534, 535, 549, 550, 548, 540, 534, 535, 551, 552, 553, 
   548, 540, 534, 535, 550, 548, 540, 534, 535, 550, 548, 540, 534, 535, 551, 550, 
   548, 540, 534, 535, 551, 552, 583, 468, 472, 474, 586, 477, 478, 604, 508, 521, 
   265, 298, 279, 290, 36, 37, 50, 391, 392, 425, 74, 85, 93, 94, 115, 117, 
   118, 119, 131, 133, 134, 135, 144, 145, 74, 85, 205, 207, 208, 209, 219, 221, 
   222, 223, 235, 237, 238, 239, 249, 251, 252, 253, 331, 332, 349, 351, 352, 353, 
   365, 367, 368, 369, 379, 380, 
};

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, "\74\41\55\55", "\55\55\76", 
null, "\174\75", null, null, null, null, null, null, null, null, null, null, null, 
"\175", "\136\75", "\44\75", "\52\75", "\75", "\55", "\73", "\57", "\133", "\135", 
"\52", "\56", "\50", "\51", "\72", null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, "\72\72", "\100\143\150\141\162\163\145\164", 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, "\174", };

/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
};
protected SimpleCharStream input_stream;
private final int[] jjrounds = new int[613];
private final int[] jjstateSet = new int[1226];
protected char curChar;
/** Constructor. */
public CSS3ParserTokenManager(SimpleCharStream stream){
   if (SimpleCharStream.staticFlag)
      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");
   input_stream = stream;
}

/** Constructor. */
public CSS3ParserTokenManager(SimpleCharStream stream, int lexState){
   this(stream);
   SwitchTo(lexState);
}

/** Reinitialise parser. */
public void ReInit(SimpleCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 613; i-- > 0;)
      jjrounds[i] = 0x80000000;
}

/** Reinitialise parser. */
public void ReInit(SimpleCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}

/** Switch to specified lex state. */
public void SwitchTo(int lexState)
{
   if (lexState >= 1 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(java.io.IOException e)
   {
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      return matchedToken;
   }

   jjmatchedKind = 0x7fffffff;
   jjmatchedPos = 0;
   curPos = jjMoveStringLiteralDfa0_0();
   if (jjmatchedKind != 0x7fffffff)
   {
      if (jjmatchedPos + 1 < curPos)
         input_stream.backup(curPos - jjmatchedPos - 1);
         matchedToken = jjFillToken();
         return matchedToken;
   }
   int error_line = input_stream.getEndLine();
   int error_column = input_stream.getEndColumn();
   String error_after = null;
   boolean EOFSeen = false;
   try { input_stream.readChar(); input_stream.backup(1); }
   catch (java.io.IOException e1) {
      EOFSeen = true;
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
      if (curChar == '\n' || curChar == '\r') {
         error_line++;
         error_column = 0;
      }
      else
         error_column++;
   }
   if (!EOFSeen) {
      input_stream.backup(1);
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
   }
   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

}
