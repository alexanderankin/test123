<project name="java_test" default="test" basedir="." xmlns:if="ant:if" xmlns:unless="ant:unless">

    <echo>
================================================================================
    Java Tests
================================================================================    
    </echo>
    
   <!-- ========================================================================
      Target: set classpath
   ========================================================================= -->
    <target name="setClasspath">
        <path id="classpathref">
         <!-- required locations/jars -->
            <pathelement location="${classes.dir}" />
            <pathelement path="${java.class.path}"/>

         <!-- required for jEdit plugin -->
            <pathelement location="${jedit.install.dir}/jedit.jar" />

         <!-- dependencies -->
         <pathelement location="${jedit.plugins.dir}/kappalayout.jar"/>
		 <pathelement location="${jedit.plugins.dir}/antlr-4.10.1-complete.jar"/>
        </path>
    </target>

    <!-- =======================================================================
        The tests use the default settings of JavaParserBeautyListener, that is,
            softTabs = true
            tabWidth = 4
            bracketStyle = ATTACHED        
            brokenBracket = false
            breakElse = true
            padParens = false
            padOperators = true
            blankLinesBeforePackage = 0            
            blankLinesAfterPackage = 1             
            blankLinesAfterImports = 2             
            sortImports = true                 
            groupImports = true                
            blankLinesBetweenImportGroups = 1      
            blankLinesAfterClassBody = 1
            blankLinesBeforeMethods = 0  
            blankLinesAfterMethods = 1
            sortModifiers = true               
            collapseMultipleBlankLinesTo = 1 
            wrapLineLength = 120
            
    ======================================================================== -->
    <target name="test" depends="IF_PERMITS,AllInOne11,AllInOne17,AllInOne8,BasicClass,BasicClass3,BlockTest,Comments,
        Comments2,Element1,EnumTest,Ids,ImportsAndAnnos,ManyStringsConcat,module-info,outer,PatternMatching4instanceof,
        PatternMatching4switchExp,Pizza,Records,SealedClasses,SwitchExpressions,TextBlocks,Yield">
    </target>

    <target name="Yield" depends="setClasspath">
        <java classname="beauty.parsers.java.java.JavaParserBeautyListener" fork="true">
            <classpath refid="classpathref"/>
            <arg file="./test/test_files/java/before/Yield.java"/>
          <redirector 
             binaryOutput="true"
             input="./test/test_files/java/before/Yield.java" 
             output="./test/test_files/java/after/Yield.java" />
        </java>
        <condition property="Yield" value="true">
            <filesmatch file1="./test/test_files/java/after/Yield.java" 
                file2="./test/test_files/java/expected/Yield.java" />
        </condition>
       <echo if:set="Yield">Yield passed</echo>
       <fail unless:set="Yield">Yield failed: ${Yielddiff}</fail>
    </target>

    <target name="TextBlocks" depends="setClasspath">
        <java classname="beauty.parsers.java.java.JavaParserBeautyListener" fork="true">
            <classpath refid="classpathref"/>
            <arg file="./test/test_files/java/before/TextBlocks.java"/>
          <redirector 
             binaryOutput="true"
             input="./test/test_files/java/before/TextBlocks.java" 
             output="./test/test_files/java/after/TextBlocks.java" />
        </java>
        <condition property="TextBlocks" value="true">
            <filesmatch file1="./test/test_files/java/after/TextBlocks.java" 
                file2="./test/test_files/java/expected/TextBlocks.java" />
        </condition>
       <echo if:set="TextBlocks">TextBlocks passed</echo>
       <fail unless:set="TextBlocks">TextBlocks failed: ${TextBlocksdiff}</fail>
    </target>

    <target name="SwitchExpressions" depends="setClasspath">
        <java classname="beauty.parsers.java.java.JavaParserBeautyListener" fork="true">
            <classpath refid="classpathref"/>
            <arg file="./test/test_files/java/before/SwitchExpressions.java"/>
          <redirector 
             binaryOutput="true"
             input="./test/test_files/java/before/SwitchExpressions.java" 
             output="./test/test_files/java/after/SwitchExpressions.java" />
        </java>
        <condition property="SwitchExpressions" value="true">
            <filesmatch file1="./test/test_files/java/after/SwitchExpressions.java" 
                file2="./test/test_files/java/expected/SwitchExpressions.java" />
        </condition>
       <echo if:set="SwitchExpressions">SwitchExpressions passed</echo>
       <fail unless:set="SwitchExpressions">SwitchExpressions failed: ${SwitchExpressionsdiff}</fail>
    </target>

    <target name="SealedClasses" depends="setClasspath">
        <java classname="beauty.parsers.java.java.JavaParserBeautyListener" fork="true">
            <classpath refid="classpathref"/>
            <arg file="./test/test_files/java/before/SealedClasses.java"/>
          <redirector 
             binaryOutput="true"
             input="./test/test_files/java/before/SealedClasses.java" 
             output="./test/test_files/java/after/SealedClasses.java" />
        </java>
        <condition property="SealedClasses" value="true">
            <filesmatch file1="./test/test_files/java/after/SealedClasses.java" 
                file2="./test/test_files/java/expected/SealedClasses.java" />
        </condition>
       <echo if:set="SealedClasses">SealedClasses passed</echo>
       <fail unless:set="SealedClasses">SealedClasses failed: ${SealedClassesdiff}</fail>
    </target>

    <target name="Records" depends="setClasspath">
        <java classname="beauty.parsers.java.java.JavaParserBeautyListener" fork="true">
            <classpath refid="classpathref"/>
            <arg file="./test/test_files/java/before/Records.java"/>
          <redirector 
             binaryOutput="true"
             input="./test/test_files/java/before/Records.java" 
             output="./test/test_files/java/after/Records.java" />
        </java>
        <condition property="Records" value="true">
            <filesmatch file1="./test/test_files/java/after/Records.java" 
                file2="./test/test_files/java/expected/Records.java" />
        </condition>
       <echo if:set="Records">Records passed</echo>
       <fail unless:set="Records">Records failed: ${Recordsdiff}</fail>
    </target>

    <target name="Pizza" depends="setClasspath">
        <java classname="beauty.parsers.java.java.JavaParserBeautyListener" fork="true">
            <classpath refid="classpathref"/>
            <arg file="./test/test_files/java/before/Pizza.java"/>
          <redirector 
             binaryOutput="true"
             input="./test/test_files/java/before/Pizza.java" 
             output="./test/test_files/java/after/Pizza.java" />
        </java>
        <condition property="Pizza" value="true">
            <filesmatch file1="./test/test_files/java/after/Pizza.java" 
                file2="./test/test_files/java/expected/Pizza.java" />
        </condition>
       <echo if:set="Pizza">Pizza passed</echo>
       <fail unless:set="Pizza">Pizza failed: ${Pizzadiff}</fail>
    </target>

    <target name="PatternMatching4switchExp" depends="setClasspath">
        <java classname="beauty.parsers.java.java.JavaParserBeautyListener" fork="true">
            <classpath refid="classpathref"/>
            <arg file="./test/test_files/java/before/PatternMatching4switchExp.java"/>
          <redirector 
             binaryOutput="true"
             input="./test/test_files/java/before/PatternMatching4switchExp.java" 
             output="./test/test_files/java/after/PatternMatching4switchExp.java" />
        </java>
        <condition property="PatternMatching4switchExp" value="true">
            <filesmatch file1="./test/test_files/java/after/PatternMatching4switchExp.java" 
                file2="./test/test_files/java/expected/PatternMatching4switchExp.java" />
        </condition>
       <echo if:set="PatternMatching4switchExp">PatternMatching4switchExp passed</echo>
       <fail unless:set="PatternMatching4switchExp">PatternMatching4switchExp failed: ${PatternMatching4switchExpdiff}</fail>
    </target>

    <target name="PatternMatching4instanceof" depends="setClasspath">
        <java classname="beauty.parsers.java.java.JavaParserBeautyListener" fork="true">
            <classpath refid="classpathref"/>
            <arg file="./test/test_files/java/before/PatternMatching4instanceof.java"/>
          <redirector 
             binaryOutput="true"
             input="./test/test_files/java/before/PatternMatching4instanceof.java" 
             output="./test/test_files/java/after/PatternMatching4instanceof.java" />
        </java>
        <condition property="PatternMatching4instanceof" value="true">
            <filesmatch file1="./test/test_files/java/after/PatternMatching4instanceof.java" 
                file2="./test/test_files/java/expected/PatternMatching4instanceof.java" />
        </condition>
       <echo if:set="PatternMatching4instanceof">PatternMatching4instanceof passed</echo>
       <fail unless:set="PatternMatching4instanceof">PatternMatching4instanceof failed: ${PatternMatching4instanceofdiff}</fail>
    </target>

    <target name="outer" depends="setClasspath">
        <java classname="beauty.parsers.java.java.JavaParserBeautyListener" fork="true">
            <classpath refid="classpathref"/>
            <arg file="./test/test_files/java/before/outer.java"/>
          <redirector 
             binaryOutput="true"
             input="./test/test_files/java/before/outer.java" 
             output="./test/test_files/java/after/outer.java" />
        </java>
        <condition property="outer" value="true">
            <filesmatch file1="./test/test_files/java/after/outer.java" 
                file2="./test/test_files/java/expected/outer.java" />
        </condition>
       <echo if:set="outer">outer passed</echo>
       <fail unless:set="outer">outer failed: ${outerdiff}</fail>
    </target>

    <target name="module-info" depends="setClasspath">
        <java classname="beauty.parsers.java.java.JavaParserBeautyListener" fork="true">
            <classpath refid="classpathref"/>
            <arg file="./test/test_files/java/before/module-info.java"/>
          <redirector 
             binaryOutput="true"
             input="./test/test_files/java/before/module-info.java" 
             output="./test/test_files/java/after/module-info.java" />
        </java>
        <condition property="module-info" value="true">
            <filesmatch file1="./test/test_files/java/after/module-info.java" 
                file2="./test/test_files/java/expected/module-info.java" />
        </condition>
       <echo if:set="module-info">module-info passed</echo>
       <fail unless:set="module-info">module-info failed: ${module-infodiff}</fail>
    </target>

    <target name="ManyStringsConcat" depends="setClasspath">
        <java classname="beauty.parsers.java.java.JavaParserBeautyListener" fork="true">
            <classpath refid="classpathref"/>
            <arg file="./test/test_files/java/before/ManyStringsConcat.java"/>
          <redirector 
             binaryOutput="true"
             input="./test/test_files/java/before/ManyStringsConcat.java" 
             output="./test/test_files/java/after/ManyStringsConcat.java" />
        </java>
        <condition property="ManyStringsConcat" value="true">
            <filesmatch file1="./test/test_files/java/after/ManyStringsConcat.java" 
                file2="./test/test_files/java/expected/ManyStringsConcat.java" />
        </condition>
       <echo if:set="ManyStringsConcat">ManyStringsConcat passed</echo>
       <fail unless:set="ManyStringsConcat">ManyStringsConcat failed: ${ManyStringsConcatdiff}</fail>
    </target>

    <target name="ImportsAndAnnos" depends="setClasspath">
        <java classname="beauty.parsers.java.java.JavaParserBeautyListener" fork="true">
            <classpath refid="classpathref"/>
            <arg file="./test/test_files/java/before/ImportsAndAnnos.java"/>
          <redirector 
             binaryOutput="true"
             input="./test/test_files/java/before/ImportsAndAnnos.java" 
             output="./test/test_files/java/after/ImportsAndAnnos.java" />
        </java>
        <condition property="ImportsAndAnnos" value="true">
            <filesmatch file1="./test/test_files/java/after/ImportsAndAnnos.java" 
                file2="./test/test_files/java/expected/ImportsAndAnnos.java" />
        </condition>
       <echo if:set="ImportsAndAnnos">ImportsAndAnnos passed</echo>
       <fail unless:set="ImportsAndAnnos">ImportsAndAnnos failed: ${ImportsAndAnnosdiff}</fail>
    </target>

    <target name="Ids" depends="setClasspath">
        <java classname="beauty.parsers.java.java.JavaParserBeautyListener" fork="true">
            <classpath refid="classpathref"/>
            <arg file="./test/test_files/java/before/Ids.java"/>
          <redirector 
             binaryOutput="true"
             input="./test/test_files/java/before/Ids.java" 
             output="./test/test_files/java/after/Ids.java" />
        </java>
        <condition property="Ids" value="true">
            <filesmatch file1="./test/test_files/java/after/Ids.java" 
                file2="./test/test_files/java/expected/Ids.java" />
        </condition>
       <echo if:set="Ids">Ids passed</echo>
       <fail unless:set="Ids">Ids failed: ${Idsdiff}</fail>
    </target>

    <target name="EnumTest" depends="setClasspath">
        <java classname="beauty.parsers.java.java.JavaParserBeautyListener" fork="true">
            <classpath refid="classpathref"/>
            <arg file="./test/test_files/java/before/EnumTest.java"/>
          <redirector 
             binaryOutput="true"
             input="./test/test_files/java/before/EnumTest.java" 
             output="./test/test_files/java/after/EnumTest.java" />
        </java>
        <condition property="EnumTest" value="true">
            <filesmatch file1="./test/test_files/java/after/EnumTest.java" 
                file2="./test/test_files/java/expected/EnumTest.java" />
        </condition>
       <echo if:set="EnumTest">EnumTest passed</echo>
       <fail unless:set="EnumTest">EnumTest failed: ${EnumTestdiff}</fail>
    </target>

    <target name="Element1" depends="setClasspath">
        <java classname="beauty.parsers.java.java.JavaParserBeautyListener" fork="true">
            <classpath refid="classpathref"/>
            <arg file="./test/test_files/java/before/Element1.java"/>
          <redirector 
             binaryOutput="true"
             input="./test/test_files/java/before/Element1.java" 
             output="./test/test_files/java/after/Element1.java" />
        </java>
        <condition property="Element1" value="true">
            <filesmatch file1="./test/test_files/java/after/Element1.java" 
                file2="./test/test_files/java/expected/Element1.java" />
        </condition>
       <echo if:set="Element1">Element1 passed</echo>
       <fail unless:set="Element1">Element1 failed: ${Element1diff}</fail>
    </target>

    <target name="Comments2" depends="setClasspath">
        <java classname="beauty.parsers.java.java.JavaParserBeautyListener" fork="true">
            <classpath refid="classpathref"/>
            <arg file="./test/test_files/java/before/Comments2.java"/>
          <redirector 
             binaryOutput="true"
             input="./test/test_files/java/before/Comments2.java" 
             output="./test/test_files/java/after/Comments2.java" />
        </java>
        <condition property="Comments2" value="true">
            <filesmatch file1="./test/test_files/java/after/Comments2.java" 
                file2="./test/test_files/java/expected/Comments2.java" />
        </condition>
       <echo if:set="Comments2">Comments2 passed</echo>
       <fail unless:set="Comments2">Comments2 failed: ${Comments2diff}</fail>
    </target>

    <target name="Comments" depends="setClasspath">
        <java classname="beauty.parsers.java.java.JavaParserBeautyListener" fork="true">
            <classpath refid="classpathref"/>
            <arg file="./test/test_files/java/before/Comments.java"/>
          <redirector 
             binaryOutput="true"
             input="./test/test_files/java/before/Comments.java" 
             output="./test/test_files/java/after/Comments.java" />
        </java>
        <condition property="Comments" value="true">
            <filesmatch file1="./test/test_files/java/after/Comments.java" 
                file2="./test/test_files/java/expected/Comments.java" />
        </condition>
       <echo if:set="Comments">Comments passed</echo>
       <fail unless:set="Comments">Comments failed: ${Commentsdiff}</fail>
    </target>

    <target name="BlockTest" depends="setClasspath">
        <java classname="beauty.parsers.java.java.JavaParserBeautyListener" fork="true">
            <classpath refid="classpathref"/>
            <arg file="./test/test_files/java/before/BlockTest.java"/>
          <redirector 
             binaryOutput="true"
             input="./test/test_files/java/before/BlockTest.java" 
             output="./test/test_files/java/after/BlockTest.java" />
        </java>
        <condition property="BlockTest" value="true">
            <filesmatch file1="./test/test_files/java/after/BlockTest.java" 
                file2="./test/test_files/java/expected/BlockTest.java" />
        </condition>
       <echo if:set="BlockTest">BlockTest passed</echo>
       <fail unless:set="BlockTest">BlockTest failed: ${BlockTestdiff}</fail>
    </target>

    <target name="IF_PERMITS" depends="setClasspath">
        <java classname="beauty.parsers.java.java.JavaParserBeautyListener" fork="true">
            <classpath refid="classpathref"/>
            <arg file="./test/test_files/java/before/IF_PERMITS.java"/>
          <redirector 
             binaryOutput="true"
             input="./test/test_files/java/before/IF_PERMITS.java" 
             output="./test/test_files/java/after/IF_PERMITS.java" />
        </java>
        <condition property="IF_PERMITS" value="true">
            <filesmatch file1="./test/test_files/java/after/IF_PERMITS.java" 
                file2="./test/test_files/java/expected/IF_PERMITS.java" />
        </condition>
       <echo if:set="IF_PERMITS">IF_PERMITS passed</echo>
       <fail unless:set="IF_PERMITS">IF_PERMITS failed: ${diff}</fail>
    </target>

    <target name="AllInOne11" depends="setClasspath">
        <java classname="beauty.parsers.java.java.JavaParserBeautyListener" fork="true">
            <classpath refid="classpathref"/>
            <arg file="./test/test_files/java/before/AllInOne11.java"/>
          <redirector 
             binaryOutput="true"
             input="./test/test_files/java/before/AllInOne11.java" 
             output="./test/test_files/java/after/AllInOne11.java" />
        </java>
        <condition property="AllInOne11" value="true">
            <filesmatch file1="./test/test_files/java/after/AllInOne11.java" 
                file2="./test/test_files/java/expected/AllInOne11.java" />
        </condition>
       <echo if:set="AllInOne11">AllInOne11 passed</echo>
       <fail unless:set="AllInOne11">AllInOne11 failed: ${AllInOne11diff}</fail>
    </target>

    <target name="AllInOne17" depends="setClasspath">
        <java classname="beauty.parsers.java.java.JavaParserBeautyListener" fork="true">
            <classpath refid="classpathref"/>
            <arg file="./test/test_files/java/before/AllInOne17.java"/>
          <redirector 
             binaryOutput="true"
             input="./test/test_files/java/before/AllInOne17.java" 
             output="./test/test_files/java/after/AllInOne17.java" />
        </java>
        <condition property="AllInOne17" value="true">
            <filesmatch file1="./test/test_files/java/after/AllInOne17.java" 
                file2="./test/test_files/java/expected/AllInOne17.java" />
        </condition>
       <echo if:set="AllInOne17">AllInOne17 passed</echo>
       <fail unless:set="AllInOne17">AllInOne17 failed: ${AllInOne17diff}</fail>
    </target>

    <target name="AllInOne8" depends="setClasspath">
        <java classname="beauty.parsers.java.java.JavaParserBeautyListener" fork="true">
            <classpath refid="classpathref"/>
            <arg file="./test/test_files/java/before/AllInOne8.java"/>
          <redirector 
             binaryOutput="true"
             input="./test/test_files/java/before/AllInOne8.java" 
             output="./test/test_files/java/after/AllInOne8.java" />
        </java>
        <condition property="AllInOne8" value="true">
            <filesmatch file1="./test/test_files/java/after/AllInOne8.java" 
                file2="./test/test_files/java/expected/AllInOne8.java" />
        </condition>
       <echo if:set="AllInOne8">AllInOne8 passed</echo>
       <fail unless:set="AllInOne8">AllInOne8 failed: ${AllInOne8diff}</fail>
    </target>

    <target name="BasicClass" depends="setClasspath">
        <java classname="beauty.parsers.java.java.JavaParserBeautyListener" fork="true">
            <classpath refid="classpathref"/>
            <arg file="./test/test_files/java/before/BasicClass.java"/>
          <redirector 
             binaryOutput="true"
             input="./test/test_files/java/before/BasicClass.java" 
             output="./test/test_files/java/after/BasicClass.java" />
        </java>
        <condition property="BasicClass" value="true">
            <filesmatch file1="./test/test_files/java/after/BasicClass.java" 
                file2="./test/test_files/java/expected/BasicClass.java" />
        </condition>
       <echo if:set="BasicClass">BasicClass passed</echo>
       <fail unless:set="BasicClass">BasicClass failed: ${BasicClassdiff}</fail>
    </target>

    <target name="BasicClass3" depends="setClasspath">
        <java classname="beauty.parsers.java.java.JavaParserBeautyListener" fork="true">
            <classpath refid="classpathref"/>
            <arg file="./test/test_files/java/before/BasicClass3.java"/>
          <redirector 
             binaryOutput="true"
             input="./test/test_files/java/before/BasicClass3.java" 
             output="./test/test_files/java/after/BasicClass3.java" />
        </java>
        <condition property="BasicClass3" value="true">
            <filesmatch file1="./test/test_files/java/after/BasicClass3.java" 
                file2="./test/test_files/java/expected/BasicClass3.java" />
        </condition>
       <echo if:set="BasicClass3">BasicClass3 passed</echo>
       <fail unless:set="BasicClass3">BasicClass3 failed: ${BasicClass3diff}</fail>
    </target>

</project>