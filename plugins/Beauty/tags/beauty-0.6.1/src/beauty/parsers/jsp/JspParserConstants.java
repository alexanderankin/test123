/* Generated By:JavaCC: Do not edit this line. JspParserConstants.java */
package beauty.parsers.jsp;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface JspParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int ALPHA_CHAR = 1;
  /** RegularExpression Id. */
  int NUM_CHAR = 2;
  /** RegularExpression Id. */
  int ALPHANUM_CHAR = 3;
  /** RegularExpression Id. */
  int IDENTIFIER_CHAR = 4;
  /** RegularExpression Id. */
  int IDENTIFIER = 5;
  /** RegularExpression Id. */
  int XMLNAME = 6;
  /** RegularExpression Id. */
  int QUOTED_STRING_NO_BREAKS = 7;
  /** RegularExpression Id. */
  int QUOTED_STRING = 8;
  /** RegularExpression Id. */
  int WHITESPACE = 9;
  /** RegularExpression Id. */
  int NEWLINE = 10;
  /** RegularExpression Id. */
  int QUOTE = 11;
  /** RegularExpression Id. */
  int NO_WHITESPACE_OR_LT_OR_DOLLAR = 12;
  /** RegularExpression Id. */
  int NO_LT_OR_DOLLAR = 13;
  /** RegularExpression Id. */
  int DOLLAR = 14;
  /** RegularExpression Id. */
  int NO_OPENBRACE_OR_LT = 15;
  /** RegularExpression Id. */
  int TEXT_IN_EL = 16;
  /** RegularExpression Id. */
  int EL_ESCAPE = 17;
  /** RegularExpression Id. */
  int NO_JSP_COMMENT_END = 18;
  /** RegularExpression Id. */
  int NO_HTML_COMMENT_END = 19;
  /** RegularExpression Id. */
  int NO_JSP_TAG_END = 20;
  /** RegularExpression Id. */
  int TAG_START = 25;
  /** RegularExpression Id. */
  int ENDTAG_START = 26;
  /** RegularExpression Id. */
  int COMMENT_START = 27;
  /** RegularExpression Id. */
  int DECL_START = 28;
  /** RegularExpression Id. */
  int DOCTYPE_DECL_START = 29;
  /** RegularExpression Id. */
  int CDATA_START = 30;
  /** RegularExpression Id. */
  int JSP_COMMENT_START = 31;
  /** RegularExpression Id. */
  int JSP_DECLARATION_START = 32;
  /** RegularExpression Id. */
  int JSP_EXPRESSION_START = 33;
  /** RegularExpression Id. */
  int JSP_SCRIPTLET_START = 34;
  /** RegularExpression Id. */
  int JSP_DIRECTIVE_START = 35;
  /** RegularExpression Id. */
  int EL_EXPRESSION = 36;
  /** RegularExpression Id. */
  int UNPARSED_TEXT = 37;
  /** RegularExpression Id. */
  int JSP_DIRECTIVE_NAME = 38;
  /** RegularExpression Id. */
  int JSP_DIRECTIVE_ATTRIBUTE_NAME = 39;
  /** RegularExpression Id. */
  int JSP_DIRECTIVE_ATTRIBUTE_EQUALS = 40;
  /** RegularExpression Id. */
  int JSP_DIRECTIVE_ATTRIBUTE_VALUE = 41;
  /** RegularExpression Id. */
  int JSP_DIRECTIVE_END = 42;
  /** RegularExpression Id. */
  int JSP_SCRIPTLET_END = 43;
  /** RegularExpression Id. */
  int JSP_SCRIPTLET = 44;
  /** RegularExpression Id. */
  int JSP_EXPRESSION_END = 45;
  /** RegularExpression Id. */
  int JSP_EXPRESSION = 46;
  /** RegularExpression Id. */
  int JSP_DECLARATION_END = 47;
  /** RegularExpression Id. */
  int JSP_DECLARATION = 48;
  /** RegularExpression Id. */
  int JSP_COMMENT_END = 49;
  /** RegularExpression Id. */
  int JSP_COMMENT_CONTENT = 50;
  /** RegularExpression Id. */
  int WHITESPACES = 51;
  /** RegularExpression Id. */
  int NAME = 52;
  /** RegularExpression Id. */
  int PUBLIC = 53;
  /** RegularExpression Id. */
  int SYSTEM = 54;
  /** RegularExpression Id. */
  int DOCTYPE_DECL_END = 55;
  /** RegularExpression Id. */
  int QUOTED_LITERAL = 56;
  /** RegularExpression Id. */
  int UNPARSED = 57;
  /** RegularExpression Id. */
  int CDATA_END = 58;
  /** RegularExpression Id. */
  int TAG_NAME = 59;
  /** RegularExpression Id. */
  int LST_ERROR = 60;
  /** RegularExpression Id. */
  int ATTR_NAME = 61;
  /** RegularExpression Id. */
  int TAG_END = 62;
  /** RegularExpression Id. */
  int DECL_END = 63;
  /** RegularExpression Id. */
  int TAG_SLASHEND = 64;
  /** RegularExpression Id. */
  int ATTR_EQ = 65;
  /** RegularExpression Id. */
  int IN_TAG_ERROR = 66;
  /** RegularExpression Id. */
  int SINGLE_QUOTE = 67;
  /** RegularExpression Id. */
  int DOUBLE_QUOTE = 68;
  /** RegularExpression Id. */
  int EL_EXPRESSION_IN_ATTRIBUTE = 69;
  /** RegularExpression Id. */
  int VALUE_BINDING_IN_ATTRIBUTE = 70;
  /** RegularExpression Id. */
  int JSP_EXPRESSION_IN_ATTRIBUTE = 71;
  /** RegularExpression Id. */
  int ENDING_SINGLE_QUOTE = 72;
  /** RegularExpression Id. */
  int UNPARSED_TEXT_NO_SINGLE_QUOTES = 73;
  /** RegularExpression Id. */
  int DOLLAR_OR_HASH_SINGLE_QUOTE = 74;
  /** RegularExpression Id. */
  int ENDING_DOUBLE_QUOTE = 75;
  /** RegularExpression Id. */
  int UNPARSED_TEXT_NO_DOUBLE_QUOTES = 76;
  /** RegularExpression Id. */
  int DOLLAR_OR_HASH_DOUBLE_QUOTE = 77;
  /** RegularExpression Id. */
  int COMMENT_END = 78;
  /** RegularExpression Id. */
  int COMMENT_TEXT = 79;
  /** RegularExpression Id. */
  int HTML_SCRIPT_CONTENT = 80;
  /** RegularExpression Id. */
  int HTML_SCRIPT_END_TAG = 81;
  /** RegularExpression Id. */
  int HTML_STYLE_CONTENT = 82;
  /** RegularExpression Id. */
  int HTML_STYLE_END_TAG = 83;
  /** RegularExpression Id. */
  int PRE_TAG_CONTENT = 84;
  /** RegularExpression Id. */
  int PRE_TAG_END_TAG = 85;

  /** Lexical state. */
  int PreTagContentState = 0;
  /** Lexical state. */
  int HtmlStyleContentState = 1;
  /** Lexical state. */
  int HtmlScriptContentState = 2;
  /** Lexical state. */
  int CommentState = 3;
  /** Lexical state. */
  int AttrValueBetweenDoubleQuotesState = 4;
  /** Lexical state. */
  int AttrValueBetweenSingleQuotesState = 5;
  /** Lexical state. */
  int StartTagState = 6;
  /** Lexical state. */
  int CDataState = 7;
  /** Lexical state. */
  int DocTypeExternalIdState = 8;
  /** Lexical state. */
  int DocTypeState = 9;
  /** Lexical state. */
  int JspCommentState = 10;
  /** Lexical state. */
  int JspDeclarationState = 11;
  /** Lexical state. */
  int JspExpressionState = 12;
  /** Lexical state. */
  int JspScriptletState = 13;
  /** Lexical state. */
  int AfterTagState = 14;
  /** Lexical state. */
  int InTagState = 15;
  /** Lexical state. */
  int AttrValueState = 16;
  /** Lexical state. */
  int JspDirectiveAttributesState = 17;
  /** Lexical state. */
  int JspDirectiveState = 18;
  /** Lexical state. */
  int DEFAULT = 19;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<ALPHA_CHAR>",
    "<NUM_CHAR>",
    "<ALPHANUM_CHAR>",
    "<IDENTIFIER_CHAR>",
    "<IDENTIFIER>",
    "<XMLNAME>",
    "<QUOTED_STRING_NO_BREAKS>",
    "<QUOTED_STRING>",
    "<WHITESPACE>",
    "<NEWLINE>",
    "<QUOTE>",
    "<NO_WHITESPACE_OR_LT_OR_DOLLAR>",
    "<NO_LT_OR_DOLLAR>",
    "\"$\"",
    "<NO_OPENBRACE_OR_LT>",
    "<TEXT_IN_EL>",
    "<EL_ESCAPE>",
    "<NO_JSP_COMMENT_END>",
    "<NO_HTML_COMMENT_END>",
    "<NO_JSP_TAG_END>",
    "<token of kind 21>",
    "<token of kind 22>",
    "<token of kind 23>",
    "<token of kind 24>",
    "\"<\"",
    "\"</\"",
    "\"<!--\"",
    "\"<?\"",
    "\"<!DOCTYPE\"",
    "\"<![CDATA[\"",
    "\"<%--\"",
    "\"<%!\"",
    "\"<%=\"",
    "\"<%\"",
    "\"<%@\"",
    "<EL_EXPRESSION>",
    "<UNPARSED_TEXT>",
    "<JSP_DIRECTIVE_NAME>",
    "<JSP_DIRECTIVE_ATTRIBUTE_NAME>",
    "\"=\"",
    "<JSP_DIRECTIVE_ATTRIBUTE_VALUE>",
    "\"%>\"",
    "\"%>\"",
    "<JSP_SCRIPTLET>",
    "\"%>\"",
    "<JSP_EXPRESSION>",
    "\"%>\"",
    "<JSP_DECLARATION>",
    "\"--%>\"",
    "<JSP_COMMENT_CONTENT>",
    "<WHITESPACES>",
    "<NAME>",
    "\"PUBLIC\"",
    "\"SYSTEM\"",
    "\">\"",
    "<QUOTED_LITERAL>",
    "<UNPARSED>",
    "\"]]>\"",
    "<TAG_NAME>",
    "<LST_ERROR>",
    "<ATTR_NAME>",
    "\">\"",
    "<DECL_END>",
    "\"/>\"",
    "\"=\"",
    "<IN_TAG_ERROR>",
    "\"\\\'\"",
    "\"\\\"\"",
    "<EL_EXPRESSION_IN_ATTRIBUTE>",
    "<VALUE_BINDING_IN_ATTRIBUTE>",
    "<JSP_EXPRESSION_IN_ATTRIBUTE>",
    "\"\\\'\"",
    "<UNPARSED_TEXT_NO_SINGLE_QUOTES>",
    "<DOLLAR_OR_HASH_SINGLE_QUOTE>",
    "\"\\\"\"",
    "<UNPARSED_TEXT_NO_DOUBLE_QUOTES>",
    "<DOLLAR_OR_HASH_DOUBLE_QUOTE>",
    "<COMMENT_END>",
    "<COMMENT_TEXT>",
    "<HTML_SCRIPT_CONTENT>",
    "<HTML_SCRIPT_END_TAG>",
    "<HTML_STYLE_CONTENT>",
    "<HTML_STYLE_END_TAG>",
    "<PRE_TAG_CONTENT>",
    "<PRE_TAG_END_TAG>",
  };

}
