<project name="BufferLocal" default="dist" basedir=".">
    <!-- $Id$ -->

    <property file="../build.properties"/>
    
    <!-- read build.props to override properties set below -->
    <property file="build.props"/>
    <property file="config/BufferLocalPlugin.props"/>

    <!-- default location of jedit.jar -->
    <property name="jedit.install.dir"  value="../.."/>

    <!-- jar name -->
    <property name="jar.name" value="BufferLocal.jar"/>

    <!-- version number -->
    <property name="build.num" value="${plugin.ise.plugin.bmp.BufferLocalPlugin.version}"/>

    <!-- where to put the finished plugin -->
    <property name="install.dir" value=".." />

    <!-- source code directory, this is where the .java files live -->
    <property name="src.dir" location="src" />

    <!-- configuration directory, this is where the configuration files for the
      plugin are placed for additional processing prior to getting jarred. -->
    <property name="config.dir" location="config" />

    <!-- documentation directory, this is where the plugin documentation
      files live. Files in this directory will be distributed with the plugin -->
    <property name="doc.dir" location="docs" />

    <!-- the directory for the compiled classes. Files in this directory will be
      included in the finished jar file. -->
    <property name="classes.dir" location="classes" />

    <condition property="can.reload.plugins">
        <and>
            <available classname="org.gjt.sp.jedit.jEdit"/>
            <available classname="ReloadPluginTask"/>
        </and>
    </condition>


   <!-- ========================================================================
      Target: set classpath
   ========================================================================= -->
   <target name="setClasspath">
      <path id="classpathref">
         <!-- required locations/jars -->
         <pathelement location="${classes.dir}" />
         <pathelement path="${java.class.path}"/>

         <!-- required for jEdit plugin -->
         <pathelement location="${jedit.install.dir}/jedit.jar" />
      </path>
   </target>

   <!-- ========================================================================
      Target: compile
   ========================================================================= -->
    <target name="compile"
            description="Compile"
            depends="init,setClasspath">
        <javac deprecation="on"
               debug="on"
               nowarn="on"
               destdir="${classes.dir}"
               srcdir="${src.dir}"
               source="1.5"
               target="1.5">
            <classpath refid="classpathref" />
        </javac>
    </target>

   <!-- ========================================================================
      Target: dist
      creates jar file suitable for dropping into jEdit, and puts it up one
      directory level
   ========================================================================= -->
    <target name="dist"
            description="Compiles, jars, puts the jar in the jEdit jars directory."
            depends="init,clean,compile,prep_files">


        <!-- make the plugin jar file -->
        <tstamp/>
        <jar jarfile="${install.dir}/${jar.name}">
            <manifest>
                <attribute name="AppName" value="BufferLocal" />
                <attribute name="AppVersion" value="${build.num}" />
                <attribute name="Author" value="Dale Anson" />
                <attribute name="Created-By" value="${user.name}" />
                <attribute name="Created-On" value="${TODAY}"/>
            </manifest>

            <!-- include everything in the build directory -->
            <fileset dir="${classes.dir}">
                <include name="**/*" />
            </fileset>

            <!-- include everything in the config directory -->
            <fileset dir="${config.dir}">
                <include name="**/*" />
            </fileset>

            <!-- include everything in the doc directory -->
            <fileset dir="${doc.dir}">
                <include name="**/*" />
            </fileset>
        </jar>

        <antcall target="reload"/>

    </target>

    <target name="reload" if="can.reload.plugins">
        <echo>Reloading ${install.dir}/${ant.project.name}.jar</echo>
        <taskdef name="reloadPlugin" classname="ReloadPluginTask"/>
        <reloadPlugin jarfile="${install.dir}/${jar.name}"/>
    </target>

   <!-- ========================================================================
      Target: prep_files
      prepares certain files for distribution by doing string replacement.
      Assumes that the configuration files and documentation files are ready.
   ========================================================================= -->
    <target name="prep_files">
        <echo>preparing files</echo>
        <!-- clean out the config and doc deployment directories -->
        <delete>
            <fileset dir="${config.dir}" includes="**/*"/>
            <fileset dir="${doc.dir}" includes="**/*"/>
        </delete>

        <!-- copy the config  files to deployment directory -->
        <copy todir="${config.dir}">
            <fileset dir="${src.dir}/config" />
        </copy>

        <!-- copy the docs -->
        <copy todir="${doc.dir}" overwrite="yes">
            <fileset dir="${src.dir}/docs">
               <include name="**/*"/>
            </fileset>
        </copy>

        <!-- insert the build number into the documentation and configuration
        files -->
        <replace dir="${config.dir}" token="@@build.num@@"
            value="${build.num}" />
        <replace dir="${doc.dir}" token="@@build.num@@"
            value="${build.num}" />
        <tstamp/>
        <replace dir="${doc.dir}" token="@@tstamp@@"
            value="${TODAY}" />
    </target>

   <!-- ========================================================================
      Target: clean
      deletes all files from the build directory
   ========================================================================= -->
   <target name="clean" description="Delete all files from the classes directory.">
      <delete>
         <fileset dir="${classes.dir}" includes="**/*" />
      </delete>
   </target>

   <!-- ========================================================================
      Target: init
      this target creates the directories needed for this project and
      only needs to be done once.
   ========================================================================= -->
    <target name="init"
            description="Create directory structure.">
        <fail unless="jedit.install.dir" message="Please set jedit.install.dir property."/>
        <mkdir dir="${src.dir}" />
        <mkdir dir="${classes.dir}" />
        <mkdir dir="${doc.dir}" />
        <mkdir dir="${config.dir}" />
    </target>

</project>
