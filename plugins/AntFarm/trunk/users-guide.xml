<?xml version="1.0"?>

<!-- AntFarm user's guide -->
<!-- (C) 2001 Brian Knowles -->

<!-- jEdit buffer-local properties: -->
<!-- :tabSize=1:indentSize=1:noTabs=true: -->



<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
  "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">

<book>

<bookinfo><title>AntFarm plugin user's guide</title>

 <copyright>
  <year>2001</year>
  <holder>Brian Knowles</holder>
 </copyright>
 <othercredit><contrib>Maintainer</contrib>
  <firstname>Brian</firstname><surname>Knowles</surname>
 </othercredit>
 <othercredit><contrib>Co-authors</contrib>
  <firstname>Fernando</firstname><surname>Aranguiz</surname>
 </othercredit>
 <othercredit><contrib>Co-authors</contrib>
  <firstname>Todd</firstname><surname>Papaioannou</surname>
 </othercredit>
 <othercredit><contrib>Co-authors</contrib>
  <firstname>Calvin</firstname><surname>Yu</surname>
 </othercredit>
 <othercredit><contrib>Co-authors</contrib>
  <firstname>Chris</firstname><surname>Steinbeck</surname>
 </othercredit>
 <othercredit><contrib>Initial AntFarm authors</contrib>
  <firstname>Chris</firstname><surname>Scott</surname>
 </othercredit>
 <othercredit><contrib>Initial AntFarm authors</contrib>
  <firstname>Rick</firstname><surname>Gibbs</surname>
 </othercredit>
 <legalnotice><title>Legal Notice</title>
  <para>
   Permission is granted to copy, distribute and/or modify this document
   under the terms of the GNU Free Documentation License, Version 1.1 or
   any later version published by the Free Software Foundation; with no
   <quote>Invariant Sections</quote>, <quote>Front-Cover Texts</quote> or
   <quote>Back-Cover Texts</quote>, each as defined in the license. A copy of
   the license can be found in the file <filename>COPYING.DOC.txt</filename>
   included with jEdit.
  </para>
 </legalnotice>
</bookinfo>

<chapter id="intro"><title>Introduction</title>

<para>
 The <application>AntFarm</application> plugin provides quick access to Ant
 build files from within jEdit. It has five main features:
</para>

<itemizedlist>
 <listitem><para>View the structure of an <application>Ant</application> build
 file.</para></listitem>
 <listitem><para>Dynamically parse <application>Ant</application> build files
 and display errors.</para></listitem>
 <listitem><para>Run <application>Ant</application> targets from within jEdit.
 </para></listitem>
 <listitem><para>Integration with the <application>Console</application> plugin.</para></listitem>
 <listitem><para>Access to the <application>Ant</application> build
 file's assets.</para></listitem>
</itemizedlist>

<para>
 <application>Ant</application> is a Java based make tool developed by the
 Apache Jakarta project. <link>http://jakarta.apache.org/ant</link>
</para>
<para>
 For help writing <application>Ant</application> build files, please refer to the
 <application>Ant</application> project's online help.
 <link>http://jakarta.apache.org/ant/manual/index.html</link>
</para>
<para>
 AntFarm includes version 1.4 of <application>Ant</application>.
</para>

</chapter>

<chapter id="structure"><title>View the structure of an <application>Ant</application> build
 file.</title>

<para>
 <guimenu>Plugins</guimenu>&gt;<guisubmenu>AntFarm</guisubmenu>
 displays the AntFarm window. This window is floating by default, but can be
 made to dock into the view in the <guilabel>Docking</guilabel> pane of the
 <guimenuitem>Global Options</guimenuitem> dialog box.
</para>

<para>
 The AntFarm window consists of a toolbar which manages the different
 build files you work with and a tree which displays the structure of the build
 files you have added. The tree displays the name attribute of the <application>
 Ant</application> project, if provided, and all defined targets of the project.
</para>

<para>
 In addition to the toolbar buttons, different functions can be accessed by
 right clicking on each item in the tree.
</para>

<sect1 id="toolbar"><title>The AntFarm tool bar</title>

<para>
 Each button on the toolbar shows a tooltip if the mouse pointer is held over it long enough.
 Here is a description of each button:
</para>

<itemizedlist>
 <listitem><para><guibutton>Add</guibutton> - provides a file chooser dialog box
 which allows you to chose the <application>Ant</application> build file you
 want to work with. Multiple build files can be added to the tree.
</para>
<para>
 The traditional name for an <application>Ant</application> build file is
 "build.xml". In addition to the Add button, AntFarm is setup to automatically load any file named
 "build.xml" into the tree.
 </para>
 <para>
 In addition, AntFarm contains the option to load "build.xml" files from any
 project you may manage using the <application>Project Viewer</application> plugin.
 To activate this feature, check <guimenu>Global Options</guimenu> -&gt;
 <guilabel>Plugin Options</guilabel> -&gt; <guilabel>Ant Farm</guilabel>
 -&gt; <guilabel>Load build files from the Project Viewer plugin</guilabel>.
 </para>
 </listitem>

 <listitem><para><guibutton>Remove</guibutton> - removes the currently selected build
 file from the tree. This does not affect the build file itself in any way.
 </para></listitem>

 <listitem><para><guibutton>Run</guibutton> - runs the current target that is
 selected in the tree. If the currently selected item is a project, AntFarm
 will run the default target for that build file.
 </para></listitem>
</itemizedlist>
</sect1>

</chapter>

<chapter id="errors"><title>Dynamically parse <application>Ant</application> build files
 and display errors.</title>

<para>
 <application>Ant</application> build files are defined using XML. When a build
 file is added to the AntFarm, it's structure is parsed and the targets are
 displayed in the tree. If an error is encountered while parsing, a message will
 be displayed in the tree and an entry will be sent to the
 <application>ErrorList</application> plugin. The <application>ErrorList</application>
  entry provides quick access to the line that caused the problem in the
  build file when a line number is available.
</para>
<para>
 When changes are made and saved to a build file that is loaded in AntFarm,
 the tree will be reparsed and updated to display the current status of the
 file. Just as in loading, any errors will be caught and displayed via the tree
 and the <application>ErrorList</application>. This feature provides quick
 validation while you are writing your build files.
</para>

</chapter>

<chapter id="run"><title>Run <application>Ant</application> targets from within jEdit.
</title>

 <para>
 There are two ways to run targets from the AntFarm tree.
 <itemizedlist>
  <listitem><para>
  Select the target in the tree and click the <guibutton>Run</guibutton>. If a
  project is selected the default target will be run.
  </para></listitem>
  <listitem><para>
  Select the target in the tree, right click and select the
  <guimenu>Run</guimenu> menu item.
  </para></listitem>
  </itemizedlist></para>
  <para>The next section explains how to run targets from the
  <application>Console</application> plugin.
  </para>
</chapter>

<chapter id="console-integration"><title>Integration with the <application>Console</application> plugin.</title>
 <para>
 AntFarm is closley tied to the <application>Console</application> plugin.
 The <application>Console</application> provides a convienent way to display
 streamed output within jEdit. <application>Console</application> also provides
 error parsing through a pattern matching scheme that is very powerful. If you
 would like to add custom pattern matchers to use with AntFarm, refer to the
 Console documentation. Additionally, <application>Console</application>
 provides a mechanism for adding custom command interpreters called
 <quote>shells</quote>. AntFarm uses the <quote>Ant</quote> shell to allow
 quick command line access to some of the features of AntFarm.
 </para>

 <sect1 id="build-output"><title>Displaying build output.</title>
 <para>
 When running a target from AntFarm all output will be sent to the Console's
 output window. Any errors that match the built-in patterns will be sent to the
 <application>ErrorList</application>.
 </para>
 <para>
 To stop a target while running, use the <guibutton>Stop</guibutton> button on
 the <application>Console</application> toolbar.
 </para>
 </sect1>

 <sect1 id="ant-shell"><title>The Ant Shell</title>
 <para>
 You can use the Ant Shell indepentently of the AntFarm tree.
 The Ant shell provides for the following commands:
 </para>
 <itemizedlist>
 <listitem><para>
 <command>!</command>	-- runs the default target for the current build file
 </para></listitem>
 <listitem><para>
 <command>!<literal>[target_name]</literal></command>		-- runs the specified target for the current build file
 </para></listitem>
 <listitem><para>
 <command>?</command>			-- lists the available build files and usage
 </para></listitem>
 <listitem><para>
 <command>=<literal>build_file_number</literal></command>	-- changes the current build file to the number identified by "?"
 </para></listitem>
 <listitem><para>
 <command>+<literal>full_path_to_file</literal></command>	-- load this build file into Ant Farm
 </para></listitem>
 </itemizedlist>
 </sect1>
 </chapter>

 <chapter id="asset-access"><title>Access to the <application>Ant</application> build
 file's assets.</title>

 <para>AntFarm provides a couple quick short cuts to the different assests
 associated with a build file.
 </para>

 <itemizedlist>
 <listitem><para>
 To edit the underlying build file, right click on the project in the tree and
 select the <guimenu>Edit build file</guimenu> item. This will open the build
 file in jEdit and allow you to make changes. The tree will be automatically
 updated when ever the file is saved.
 </para>
 </listitem>
 <listitem><para>
 To browse the base directory of the project, right click on the project in the
 tree and select the <guimenu>Browse project files</guimenu> item. Each
 <application>Ant</application> project has a base directory. This command opens
 that directory in the <application>File System Browser</application>.
 </para></listitem>
 </itemizedlist>

 </chapter>
</book>
