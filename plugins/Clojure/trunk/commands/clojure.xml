<?xml version="1.0" ?>
<!DOCTYPE COMMANDO SYSTEM "commando.dtd">

<COMMANDO>
	<UI>
		<CAPTION LABEL="Script settings">

		<ENTRY LABEL="Script location" VARNAME="script"
			EVAL="buffer.getPath()"
			/>
		<ENTRY LABEL="Script parameters" VARNAME="args" />

		</CAPTION>

		<CAPTION LABEL="VM settings">

		<!-- <CHOICE LABEL="Virtual machine" VARNAME="vm" DEFAULT="client">
			<OPTION LABEL="Client HotSpot" VALUE="client" />
			<OPTION LABEL="Server HotSpot" VALUE="server" />
			<OPTION LABEL="Classic" VALUE="classic" />
		</CHOICE> -->

		<ENTRY LABEL="Class path" VARNAME="classpath"
			EVAL='"$CLOJURE"+File.pathSeparator+getBufferClassPath(buffer)' />

		<!-- <TOGGLE LABEL="Verbose class loading" VARNAME="verbose_class" />
		<TOGGLE LABEL="Verbose garbage collection" VARNAME="verbose_gc" />
		<TOGGLE LABEL="Verbose JNI calls" VARNAME="verbose_jni" /> -->

		<!-- <CHOICE LABEL="Virtual machine type" VARNAME="vm_X" DEFAULT="mixed">
			<OPTION LABEL="Mixed mode" VALUE="mixed" />
			<OPTION LABEL="Interpreter only" VALUE="interp" />
		</CHOICE>

		<CHOICE LABEL="Boot class path mode" VARNAME="bootclasspath_mode">
			<OPTION LABEL="Set" VALUE="set" />
			<OPTION LABEL="Append" VALUE="append" />
			<OPTION LABEL="Prepend" VALUE="prepend" />
		</CHOICE>

		<ENTRY LABEL="Boot class path" VARNAME="bootclasspath" />

		<TOGGLE LABEL="Class garbage collection" VARNAME="classgc" />
		<TOGGLE LABEL="Incremental garbage collection" VARNAME="incgc" />
		<TOGGLE LABEL="Background compilation" VARNAME="nobatch"
			DEFAULT="TRUE" />
		<TOGGLE LABEL="Output profiling data" VARNAME="prof" />
		<TOGGLE LABEL="Strict class format checks (-Xfuture)"
			VARNAME="future" />
		<TOGGLE LABEL="Reduce OS signal use (-Xrs)" VARNAME="rs" /> -->

		<ENTRY LABEL="Initial heap size (Mb)" VARNAME="ms" DEFAULT="32" />
		<ENTRY LABEL="Maximum heap size (Mb)" VARNAME="mx" DEFAULT="32" />
		<ENTRY LABEL="Thread stack size (Kb)" VARNAME="ss" />

		<ENTRY LABEL="Additional VM parameters" VARNAME="extra" />

		</CAPTION>
	</UI>

	<COMMANDS>
		<COMMAND SHELL="System" CONFIRM="FALSE">
			buf = new StringBuffer();
			buf.append("java");

			if(!classpath.equals(""))
			{
				buf.append(" -classpath \"");
				buf.append(classpath);
				buf.append('"');
			}

			if(!ms.equals(""))
			{
				buf.append(" -ms");
				buf.append(ms);
				buf.append('m');
			}

			if(!mx.equals(""))
			{
				buf.append(" -mx");
				buf.append(mx);
				buf.append('m');
			}

			if(!ss.equals(""))
			{
				buf.append(" -ss");
				buf.append(ss);
				buf.append('k');
			}

			if(!extra.equals(""))
			{
				buf.append(' ');
				buf.append(extra);
			}

			buf.append(' clojure.main ');
			buf.append(script);

			if(!args.equals(""))
			{
				buf.append(' ');
				buf.append(args);
			}

			// return value
			buf.toString();
		</COMMAND>
	</COMMANDS>
</COMMANDO>
