<?xml version="1.0" encoding="UTF-8"?>
<article xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:noNamespaceSchemaLocation='http://www.docbook.org/xsd/4.4/docbook.xsd' >
  <title>CLangBeauty plugin user's guide</title>

 <articleinfo>
 <authorgroup>
  <author><firstname>Dale</firstname><surname>Anson</surname></author>
 </authorgroup>

 <legalnotice><title>Legal Notice</title>
  <para>
   Permission is granted to copy, distribute and/or modify this document
   under the terms of the GNU Free Documentation License, Version 1.1 or
   any later version published by the Free Software Foundation; with no
   <quote>Invariant Sections</quote>, <quote>Front-Cover Texts</quote> or
   <quote>Back-Cover Texts</quote>, each as defined in the license. A copy of
   the license can be found in the file <filename>COPYING.DOC.txt</filename>
   included with jEdit.
  </para>
  <para>
   The CLangBeauty plugin itself is released under the GNU General Public License.
   A copy of the GPL can be found in the jEdit online help.
  </para>
 </legalnotice>
</articleinfo>

<section id="intro"><title>Introduction</title>
<para>This plugin provides the <command>clang-format</command> source code formatter 
as a Beauty plugin beautifier by running the external <command>clang-format</command>
tool.
</para>
<para><command>clang-format</command> supports C, C++, and Objective-C, and with the right settings
can also format Java and Javascript.
</para>
</section>


<section id="setup"><title>Set Up</title>
<para><emphasis>The clang-format tool must be installed before using this plugin!</emphasis>
Details for downloading and installing this tool can be found at 
<ulink url="http://llvm.org/releases/download.html">http://llvm.org/releases/download.html</ulink>.
The clang tools are available for Windows, Mac, Linux, and BSD</para>
</section>

<section id="configuration">
<title>Configuration</title>

<para>The plugin is configured via the CLangBeauty option pane. Go to Plugins - Plugin Options - CLangBeauty 
to select the <command>clang-format</command> executable.</para>
<para>Next, configure the Beauty plugin to use the CLangBeauty plugin to format the appropriate
file types:
<orderedlist>
	<listitem><para>
	open the plugin options (<guimenu>Plugins</guimenu> / <guimenuitem>Plugin Options</guimenuitem>),
	</para></listitem>
	<listitem><para>
	go to the <guimenuitem>Beauty</guimenuitem> > <guimenuitem>Modes</guimenuitem> pane,
	</para></listitem>
	<listitem><para>
	choose <guilabel>clang-format</guilabel> for C, C++, and Objective-C modes.
	</para></listitem>
</orderedlist>
</para>
<para>
Additionally, CLangBeauty provides a dockable to allow viewing and setting formatting
options. Due to the size of the dockable, it is best used as either a floating window or
docked at the bottom.
</para>
</section>

<section id="usage"><title>Usage</title>

<para>
To format the current buffer, go to <guimenu>Plugins</guimenu> > <guisubmenu>Beauty</guisubmenu> > <guimenuitem>Beautify Buffer</guimenuitem>.
</para>

<para>See the Beauty plugin documentation for addtional details for setting keyboard shortcuts.</para>

<para>
The dockable displays all the options supported by clang-format. 
</para>
<para>
The "Open" button allows choosing and loading a .clang-format file into the dockable window.
All of the available settings are shown and can be edited and saved. The saved file is always
named ".clang-format" and should be saved in a parent directory containg the files to format.
</para>
<para>
The "Save" button allows saving the current formatting settings to a ".clang-format" file.
You can choose the directory in which to save the file. Note that clang-format looks for 
".clang-format" files in parent directories of the files it is to format.
</para>
<para>
Using the "Open" and "Save" buttons makes it easy to open a .clang-format file for one project,
edit it, then save it in another directory for another project.
</para>
<para>
The dockable window also shows the path of the current .clang-format file in use for the
current buffer, and indicates the number of languages that have settings in the .clang-format
file. If there are multiple languages supported in the .clang-format file, there will be
a section in the formatting settings for each language.
</para>
</section>


<appendix id="changes"><title>Change log</title>
<para>
Version 0.1, initial release.
</para>

</appendix>

</article>

