<?xml version="1.0"?>

<!DOCTYPE ACTIONS SYSTEM "actions.dtd">

<ACTIONS>
    <ACTION NAME="white-space.toggle-block-highlight">
        <CODE>
            highlight = whitespace.WhiteSpaceHighlight.getHighlightFor(editPane);
            if (highlight == null) { return ; }

            model = highlight.getModel();
            if (model == null) { return; }

            model.getBlockHighlight().toggleEnabled();

            whitespace.BlockHighlight.updateTextAreas(buffer);
        </CODE>
        <IS_SELECTED>
            model = buffer.getProperty(
                whitespace.WhiteSpaceModel.MODEL_PROPERTY
            );
            if (model == null) { return false; }

            return model.getBlockHighlight().isEnabled();
        </IS_SELECTED>
    </ACTION>


    <ACTION NAME="white-space.toggle-fold-highlight">
        <CODE>
            model = buffer.getProperty(
                whitespace.WhiteSpaceModel.MODEL_PROPERTY
            );
            if (model == null) { return; }

            model.getFoldHighlight().toggleEnabled();

            whitespace.FoldHighlight.updateTextAreas(buffer);
        </CODE>
        <IS_SELECTED>
            model = buffer.getProperty(
                whitespace.WhiteSpaceModel.MODEL_PROPERTY
            );
            if (model == null) { return false; }

            return model.getFoldHighlight().isEnabled();
        </IS_SELECTED>
    </ACTION>


    <ACTION NAME="white-space.toggle-fold-tooltip">
        <CODE>
            model = buffer.getProperty(
                whitespace.WhiteSpaceModel.MODEL_PROPERTY
            );
            if (model == null) { return; }

            model.getFoldTooltip().toggleEnabled();

            whitespace.FoldHighlight.updateTextAreas(buffer);
        </CODE>
        <IS_SELECTED>
            model = buffer.getProperty(
                whitespace.WhiteSpaceModel.MODEL_PROPERTY
            );
            if (model == null) { return false; }

            return model.getFoldTooltip().isEnabled();
        </IS_SELECTED>
        -->
    </ACTION>


    <ACTION NAME="white-space.toggle-space-highlight">
        <CODE>
            highlight = whitespace.WhiteSpaceHighlight.getHighlightFor(editPane);
            if (highlight == null) { return ; }

            model = highlight.getModel();
            if (model == null) { return; }

            model.getSpaceHighlight().toggleEnabled();
            whitespace.WhiteSpaceHighlight.updateTextAreas(buffer);
        </CODE>
        <IS_SELECTED>
            model = buffer.getProperty(
                whitespace.WhiteSpaceModel.MODEL_PROPERTY
            );
            if (model == null) { return false; }

            return model.getSpaceHighlight().isEnabled();
        </IS_SELECTED>
    </ACTION>


    <ACTION NAME="white-space.toggle-leading-space-highlight">
        <CODE>
            highlight = whitespace.WhiteSpaceHighlight.getHighlightFor(editPane);
            if (highlight == null) { return ; }

            model = highlight.getModel();
            if (model == null) { return; }

            model.getLeadingSpaceHighlight().toggleEnabled();
            whitespace.WhiteSpaceHighlight.updateTextAreas(buffer);
        </CODE>
        <IS_SELECTED>
            model = buffer.getProperty(
                whitespace.WhiteSpaceModel.MODEL_PROPERTY
            );
            if (model == null) { return false; }

            return model.getLeadingSpaceHighlight().isEnabled();
        </IS_SELECTED>
    </ACTION>


    <ACTION NAME="white-space.toggle-inner-space-highlight">
        <CODE>
            highlight = whitespace.WhiteSpaceHighlight.getHighlightFor(editPane);
            if (highlight == null) { return ; }

            model = highlight.getModel();
            if (model == null) { return; }

            model.getInnerSpaceHighlight().toggleEnabled();
            whitespace.WhiteSpaceHighlight.updateTextAreas(buffer);
        </CODE>
        <IS_SELECTED>
            model = buffer.getProperty(
                whitespace.WhiteSpaceModel.MODEL_PROPERTY
            );
            if (model == null) { return false; }

            return model.getInnerSpaceHighlight().isEnabled();
        </IS_SELECTED>
    </ACTION>


    <ACTION NAME="white-space.toggle-trailing-space-highlight">
        <CODE>
            highlight = whitespace.WhiteSpaceHighlight.getHighlightFor(editPane);
            if (highlight == null) { return ; }

            model = highlight.getModel();
            if (model == null) { return; }

            model.getTrailingSpaceHighlight().toggleEnabled();
            whitespace.WhiteSpaceHighlight.updateTextAreas(buffer);
        </CODE>
        <IS_SELECTED>
            model = buffer.getProperty(
                whitespace.WhiteSpaceModel.MODEL_PROPERTY
            );
            if (model == null) { return false; }

            return model.getTrailingSpaceHighlight().isEnabled();
        </IS_SELECTED>
    </ACTION>


    <ACTION NAME="white-space.toggle-tab-highlight">
        <CODE>
            highlight = whitespace.WhiteSpaceHighlight.getHighlightFor(editPane);
            if (highlight == null) { return ; }

            model = highlight.getModel();
            if (model == null) { return; }

            model.getTabHighlight().toggleEnabled();
            whitespace.WhiteSpaceHighlight.updateTextAreas(buffer);
        </CODE>
        <IS_SELECTED>
            model = buffer.getProperty(
                whitespace.WhiteSpaceModel.MODEL_PROPERTY
            );
            if (model == null) { return false; }

            return model.getTabHighlight().isEnabled();
        </IS_SELECTED>
    </ACTION>


    <ACTION NAME="white-space.toggle-leading-tab-highlight">
        <CODE>
            highlight = whitespace.WhiteSpaceHighlight.getHighlightFor(editPane);
            if (highlight == null) { return ; }

            model = highlight.getModel();
            if (model == null) { return; }

            model.getLeadingTabHighlight().toggleEnabled();
            whitespace.WhiteSpaceHighlight.updateTextAreas(buffer);
        </CODE>
        <IS_SELECTED>
            model = buffer.getProperty(
                whitespace.WhiteSpaceModel.MODEL_PROPERTY
            );
            if (model == null) { return false; }

            return model.getLeadingTabHighlight().isEnabled();
        </IS_SELECTED>
    </ACTION>


    <ACTION NAME="white-space.toggle-inner-tab-highlight">
        <CODE>
            highlight = whitespace.WhiteSpaceHighlight.getHighlightFor(editPane);
            if (highlight == null) { return ; }

            model = highlight.getModel();
            if (model == null) { return; }

            model.getInnerTabHighlight().toggleEnabled();
            whitespace.WhiteSpaceHighlight.updateTextAreas(buffer);
        </CODE>
        <IS_SELECTED>
            model = buffer.getProperty(
                whitespace.WhiteSpaceModel.MODEL_PROPERTY
            );
            if (model == null) { return false; }

            return model.getInnerTabHighlight().isEnabled();
        </IS_SELECTED>
    </ACTION>


    <ACTION NAME="white-space.toggle-trailing-tab-highlight">
        <CODE>
            highlight = whitespace.WhiteSpaceHighlight.getHighlightFor(editPane);
            if (highlight == null) { return ; }

            model = highlight.getModel();
            if (model == null) { return; }

            model.getTrailingTabHighlight().toggleEnabled();
            whitespace.WhiteSpaceHighlight.updateTextAreas(buffer);
        </CODE>
        <IS_SELECTED>
            model = buffer.getProperty(
                whitespace.WhiteSpaceModel.MODEL_PROPERTY
            );
            if (model == null) { return false; }

            return model.getTrailingTabHighlight().isEnabled();
        </IS_SELECTED>
    </ACTION>


    <ACTION NAME="white-space.toggle-whitespace-highlight">
        <CODE>
            highlight = whitespace.WhiteSpaceHighlight.getHighlightFor(editPane);
            if (highlight == null) { return ; }

            model = highlight.getModel();
            if (model == null) { return; }

            model.getWhitespaceHighlight().toggleEnabled();
            whitespace.WhiteSpaceHighlight.updateTextAreas(buffer);
        </CODE>
        <IS_SELECTED>
            model = buffer.getProperty(
                whitespace.WhiteSpaceModel.MODEL_PROPERTY
            );
            if (model == null) { return false; }

            return model.getWhitespaceHighlight().isEnabled();
        </IS_SELECTED>
    </ACTION>


    <ACTION NAME="white-space.toggle-remove-trailing-white-space">
        <CODE>
            buffer.putBooleanProperty(
                  "white-space.remove-trailing-white-space"
                , !buffer.getBooleanProperty(
                    "white-space.remove-trailing-white-space"
                )
            );
        </CODE>
        <IS_SELECTED>
            return buffer.getBooleanProperty(
                "white-space.remove-trailing-white-space"
            );
        </IS_SELECTED>
    </ACTION>


    <ACTION NAME="white-space.toggle-soft-tabify-leading-white-space">
        <CODE>
            buffer.putBooleanProperty(
                  "white-space.soft-tabify-leading-white-space"
                , !buffer.getBooleanProperty(
                    "white-space.soft-tabify-leading-white-space"
                )
            );
        </CODE>
        <IS_SELECTED>
            return buffer.getBooleanProperty(
                "white-space.soft-tabify-leading-white-space"
            );
        </IS_SELECTED>
    </ACTION>


    <ACTION NAME="white-space.toggle-tabify-leading-white-space">
        <CODE>
            buffer.putBooleanProperty(
                  "white-space.tabify-leading-white-space"
                , !buffer.getBooleanProperty(
                    "white-space.tabify-leading-white-space"
                )
            );
        </CODE>
        <IS_SELECTED>
            return buffer.getBooleanProperty(
                "white-space.tabify-leading-white-space"
            );
        </IS_SELECTED>
    </ACTION>


    <ACTION NAME="white-space.toggle-untabify-leading-white-space">
        <CODE>
            buffer.putBooleanProperty(
                  "white-space.untabify-leading-white-space"
                , !buffer.getBooleanProperty(
                    "white-space.untabify-leading-white-space"
                )
            );
        </CODE>
        <IS_SELECTED>
            return buffer.getBooleanProperty(
                "white-space.untabify-leading-white-space"
            );
        </IS_SELECTED>
    </ACTION>
</ACTIONS>
