<!-- ================================================== -->
<!-- Build file for the TextAutocompletelugin           -->
<!-- :tabSize=2:indentSize=2:noTabs=false:              -->
<!-- :folding=explicit:collapseFolds=1:                 -->
<!-- ================================================== -->
<project name="TextAutocomplete">
    <description>
        TextAutocomplete Tools jEdit Plugin.
    </description>

    <!--
    USAGE:
        * Plugin packager will run 'install' which will create the
        plugin's jar in the parent directory.
        * Developer may use deploy-only to compile the plugin and
        copy it into ${jedit.jars.dir} so that it can be immediately
        reloaded via the PluginManager (disable & re-enable).
    -->

    <!--
     COMMON SETUP
     - leverage jEdit's build-support project and its build file as much as possible
     - the path to it is expected to be defined in the build properties
     -->
    <property file="../build.properties"/>
    <property name="jedit.jars.dir" value="${jedit.user.home}/jars" />
    <!-- Required to build JavaDoc; see packagenames of the javadoc ant task -->
    <property name="javadoc.packagenames" value="net.jakubholy.jedit.autocomplete" />
    <!-- Documentation is pre-generated: -->
    <property name="docs-proc.target" value="none" />

    <import file="${build.support}/plugin-build.xml"/>

    <!-- Extra files that should be included in the jar -->
    <selector id="packageFiles">
        <or>
            <filename name="*.html"/>
        </or>
    </selector>

    <!-- Deploy the plugin into the user's jEdit -->
    <target name="deploy" depends="build"
            description="Copy to jEdit's jars/ directory and force reloading of the plugin">
        <copy file="${install.dir}/${jar.file}" todir="${jedit.jars.dir}"/>
        <condition property="can.reload.plugins">
            <and>
                <available classname="org.gjt.sp.jedit.jEdit"/>
                <available classname="ReloadPluginTask"/>
            </and>
        </condition>
        <antcall target="reload"/>
    </target>

    <target name="reload" if="can.reload.plugins">
        <!-- The Reload Plugin Task can be downloaded from community.jedit.org -->
        <taskdef name="reloadPlugin" classname="ReloadPluginTask"/>
        <reloadPlugin jarfile="${jedit.jars.dir}/${jar.file}"/>
    </target>


</project>

