<?xml version="1.0"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
  "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd">
<article>
	<articleinfo>
		<title>JavaScriptShell plugin</title>
		<author>
			<firstname>Jakub</firstname>
			<surname>Roztoƒçil</surname>
			<email>jakub@webkitchen.cz</email>
		</author>
		<edition>Version 0.1</edition>
		<legalnotice>
			<title>Legal Notice</title>
			<para>
				Permission is granted to copy, distribute and/or modify this document
				under the terms of the GNU Free Documentation License, Version 1.1 or
				any later version published by the Free Software Foundation; with no
				<quote>Invariant Sections</quote>, <quote>Front-Cover Texts</quote> or
				<quote>Back-Cover Texts</quote>, each as defined in the license. A copy of
				the license can be found in the file <filename>COPYING.DOC.txt</filename>
				included with jEdit.
			</para>
		</legalnotice>
	</articleinfo>
	<section id="summary">
		<title>Summary</title>
		<para>
			The JavaScriptShell plugin adds to jEdit a new script handler so you can write macros and startup scripts
			in JavaScript. It also adds JavaScript shell to the console interface provided by the Console Plugin.
		</para>
		<para>
			In scripts and the shell are few predefined variables available,
			their values are identical to the variables in BeanShell
			scripts. The variables are: view, textArea and buffer.
		</para>

	</section>
	<section id="startup">
		<title>Example of a useful startup script written in JavaScript</title>
		<programlisting>/*
 * ~/.jedit/startup/startup.js
 */

var jEdit = org.gjt.sp.jedit.jEdit;
var Macros = org.gjt.sp.jedit.Macros;


function include(path) {
	if (Macros.getHandler("JavaScriptHandler").accept(path)) {
		Macros.runScript(view, path, false);
	} else {
		throw new Error('Not a JavaScript macro - ' + path);
	}
}

function alert(message) {
	Macros.message(view, message);
}

function prompt(question, defaultValue) {
	return Macros.input(view, question, defaultValue || '');
}

function confirm(question) {
	var op = javax.swing.JOptionPane;
	return Macros.confirm(view, question, op.OK_CANCEL_OPTION) == op.OK_OPTION;
}

var document = {
	write: function(text) {
		textArea.setSelectedText(text);
	},
	close: function() {
		jEdit.closeBuffer(view, buffer);
	}
}

var window = {
	close: function() {
		jEdit.closeView(view);
	},
	open: function(path) {
		jEdit.openFile(view, path);
	}
}</programlisting>
	</section>

	<section id="change-log">
		<title>Change log</title>
		<itemizedlist>
			<listitem>
				<para>Version 0.1, Requires jEdit 4.3pre6, ConsolePlugin 4.3.3 and Java 1.6</para>
				<itemizedlist>
					<listitem>
						<para>Initial release.</para>
					</listitem>
				</itemizedlist>
			</listitem>
			<listitem>
				<para>Version 0.2, Requires jEdit 4.3pre6, ConsolePlugin 4.3.3 and Java 1.6</para>
				<itemizedlist>
					<listitem>
						<para>Added menu with actions "JavaScript shell", "Evaluate buffer in JavaScript" and "Evaluate selection in JavaScript"</para>
					</listitem>
				</itemizedlist>
			</listitem>
		</itemizedlist>
	</section>
</article>
