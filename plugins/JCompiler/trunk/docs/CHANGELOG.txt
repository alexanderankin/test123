MISC

- Ability to run a class out of process..

NEXT VERSION 

- NullPointerException when compiling under JDK 1.2.2

- When you double click on an error.  The current view should get the focus and 
  toFront() and requestFocus()


- build rollback() functionality into FileChangeMonitor() this will allow you to
  determine what previous files were previously changed so that if an error 
  happens during a compile you can recover from it.
  

- use the -verbose option with javac to determine the build progress.  Put 
  output through a filter and any "[wrote" messages should signal that a file 
  has been compiled so you can increase the progress bar by this much.


- When the user clicks on Java Compiler and there is no file to compile... bring
  up the GUI anyway and tell the user that...


- Have a "show compiler console" so that if it is in the background bring it 
  to the foreground and if it isn't running at all... load it up.


- add two tabs to the compile window... Compiler Output/Console Output

- BUG:  When you goto compiler on a system with out the destination directory,
  the compile proceeds correctly but actually nothing happens.  Before you actuall
  compile to a directory make sure that it exists.

- When you are compiling a set of files... and one hasn't been changed (so you 
  don't want to re-compile it) fire an event anyway so that the user knows that 
  the build progress is moving very fast.

- Currently if the .java file isn't found that you are attempting to compile it 
  just throws a NPE.  Handle this better and show the user a GUI.  The way to 
  duplicate it is to load a file into jEdit... delete it... then try to compile
  it.

- Make sure that tools.jar is in the classpath.  This can be detected by I guess
  using the CLASSPATH

  
- (NOTE:  This requires JDK 1.2) if the user is using a target directory.  Make 
  sure to add that to the classpath
  so that files put there can be used in other applications.

- (NOTE:  This requires JDK 1.2) use java.home/lib/tools.jar if it could not be 
  found within the current classpath

- Incorporate support for timing a build... "Build complete.  Took 14 seconds"
  
-  *********** IMPORTANT ***********

- add "Load stack trace" on the jEdit menu

- (DONE) log to the jEdit log the JCompiler command line syntax

VERSION 0.4.8

- (DONE)wouldn't compile with javac

VERSION 0.4.7 

- (DONE) set the Thread priority during Thread compiles to Thread.MIN_PRIORITY

- (DONE) add the support to prompt for a JTextArea and then assume it is a stack trace
  which you can double click on and decompile the file and view what's up.

- (DONE) Every once in a file... sun.tools.java.Main throws an NPE.  catch this and 
  print it as a stack trace

- (DONE) Incorporate the bug fixes sent in.

- (DONE) an exception is thrown if you double click on no text.

- (DONE) Uses a StringWriter for output instead of a text file... faster, no exceptions, 
  in memory
    - after this, fix the progress bar, 
  
- (DONE) Implement a basic progress bar... setting up get's 50% and the other get's 100%
    
VERSION 0.4.2

- (DONE) JCompiler code now under jcompiler
- (DONE) JDK 1.3 was using the 1.1 Security Manager.
- (DONE) Remove the "smartcompile" option.  This isn't necessary if I am already doing
  package compiles


VERSION 0.4.0  

- (DONE) Migrate to BuildTools and not JavaBuildTools

- (DONE) BUG when finding .java files they should "END" in .java and not just contain it.

- (DONE) add a Rebuld Package(s) option that doesn't use the FileChangeController.  
  but calls FileChangeMonitor.getAllFiles()

- (DONE) Currently "Compile File" is broken.  It doesn't bring up a GUI dialog when 
  compiling files

- (DONE) Better handle exceptions

- (DONE) Rebuild Package(s) 
  Rebuild (all packages and all files regardless of whether they need it or not)

- (DONE) make a -d destination directory option

- (DONE) remove smart compiler

- (DONE) place a box around the top MISC options and the bottom CLASSPATH options.  
  Also change the layout manager to be similar to JavaDoc

  
VERSION 0.3.7
  
- (DONE) add recursive package compile support

- (DONE) removed shortcuts

- (DONE) removed stand-alone plugin pulldowns... now off of a submenus
