<?xml version="1.0"?>

<!-- XML user's guide -->
<!-- (C) 2001 Slava Pestov -->

<!-- jEdit buffer-local properties: -->
<!-- :indentSize=1:noTabs=true: -->

<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
  "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">

<book>

<bookinfo><title>XML plugin user's guide</title>

 <authorgroup>
  <author><firstname>Slava</firstname><surname>Pestov</surname></author>
  <author><firstname>Andr&eacute;</firstname><surname>Kaplan</surname></author>
  <author><firstname>David</firstname><surname>Walend</surname></author>
  <author><firstname>Ollie</firstname><surname>Rutherfurd</surname></author>
  <author><firstname>Scott</firstname><surname>Wyatt</surname></author>
 </authorgroup>

 <legalnotice><title>Legal Notice</title>
  <para>
   Permission is granted to copy, distribute and/or modify this document
   under the terms of the GNU Free Documentation License, Version 1.1 or
   any later version published by the Free Software Foundation; with no
   <quote>Invariant Sections</quote>, <quote>Front-Cover Texts</quote> or
   <quote>Back-Cover Texts</quote>, each as defined in the license. A copy of
   the license can be found in the file <filename>COPYING.DOC.txt</filename>
   included with jEdit.
  </para>
 </legalnotice>
</bookinfo>

<chapter id="intro"><title>Introduction</title>

 <para>
  The XML plugin provides a number of features that make editing XML and
  HTML files easier:
 </para>

 <itemizedlist>
  <listitem><para>Display of the element tree in a dockable window</para></listitem>
  <listitem><para>Matching tag highlighting</para></listitem>
  <listitem><para>One click insertion of tags and entities</para></listitem>
  <listitem><para>Completion popups for tags and entities</para></listitem>
  <listitem><para>Graphical editing of tags and attributes</para></listitem>
  <listitem><para>A number of miscellaneous commands, for moving the
  caret to the next and previous tag, and converting special
  characters to entities and vice versa</para></listitem>
 </itemizedlist>

 <para>
  In addition, XML files are validated against a DTD. This feature is
  currently not available for HTML files; consider using the
  <application>JTidy</application> plugin to validate HTML.
 </para>

 <para>
  XML files are parsed with the Xerces XML parser, version 1.4.4. HTML files
  are parsed using the HTML parser bundled with Swing.
 </para>
</chapter>

<chapter id="tree"><title>The XML tree window</title>

 <para>
  <guimenu>Plugins</guimenu>&gt;<guisubmenu>XML</guisubmenu>&gt;<guimenuitem>XML
  Tree</guimenuitem> displays the XML tree window. This window is floating by
  default, but it can be made to
  dock into the view in the <guibutton>Docking</guibutton> pane of the
  <guimenuitem>Global Options</guimenuitem> dialog box.
 </para>

 <para>
  Clicking on an element in the tree will move the caret to its location in the
  text area;
  conversely, moving the caret in the text area will select the corresponding
  element in the tree. Double-clicking on an element will show the
  <guimenuitem>Edit Tag</guimenuitem> dialog box; see
  <xref linkend="edit-tag" />.
 </para>

 <para>
  If the XML tree window is docked into the current view, hovering the mouse
  over an element will display all attributes of that element in
  the view's status bar. If you want attributes to be displayed in
  the tree itself, you can specify so in the
  <guibutton>XML</guibutton>&gt;<guibutton>General</guibutton> pane
  of the <guimenu>Utilities</guimenu>&gt;<guimenuitem>Global Options</guimenuitem>
  dialog box.
 </para>

</chapter>

<chapter id="validation"><title>XML validation</title>

 <para>
  By default, switching to a different buffer will parse it if it is an XML file;
  saving an XML file will also parse it. The XML plugin can also
  optionally re-parse files on the fly; this should only be used on fast
  systems with a lot of memory.
  The current buffer can be parsed at any other time by clicking the parse
  button
  in the XML tree window.
 </para>

 <para>
  Any errors found while parsing XML are handled by the
  <application>ErrorList</application> plugin; this means they are highlighted
  in the text area, and shown in the
  <guimenu>Plugins</guimenu>&gt;<guisubmenu>Error
  List</guisubmenu>&gt;<guimenuitem>Error List</guimenuitem> window. See the
  documentation for the <application>ErrorList</application> plugin for details.
 </para>

 <para>
  If a DTD or XML schema is available, it will be used to validate the XML
  file; otherwise, only minimal error checking will be performed.
  If the XML file specifies the DTD using a public ID, you will need to
  ensure the XML plugin loads the catalog where the public ID is defined;
  see <xref linkend="catalog" />.
 </para>

 <para>
  You can specify when to parse, and which edit modes to parse in, in the
  <guibutton>XML</guibutton>&gt;<guibutton>General</guibutton> pane
  of the <guimenu>Utilities</guimenu>&gt;<guimenuitem>Global Options</guimenuitem>
  dialog box.
 </para>

</chapter>

<chapter id="tag-highlight"><title>Matching tag highlighting</title>

 <para>
  If the caret is positioned on a tag, the corresponding opening or closing
  tag will be highlighted in the text area. You can disable this feature
  completely, or specify in which edit modes it should be used
  in the
  <guibutton>XML</guibutton>&gt;<guibutton>Tag Highlighting</guibutton> pane
  of the <guimenu>Utilities</guimenu>&gt;<guimenuitem>Global Options</guimenuitem>
  dialog box.
 </para>

</chapter>

<chapter id="insert"><title>Inserting tags or entities</title>

 <para>
  <guimenu>Plugins</guimenu>&gt;<guisubmenu>XML</guisubmenu>&gt;<guimenuitem>XML
  Tree</guimenuitem> displays the XML insert window. This window is floating by
  default, but it can be made to
  dock into the view in the <guibutton>Docking</guibutton> pane of the
  <guimenuitem>Global Options</guimenuitem> dialog box.
 </para>

 <para>
  If editing an XML or an HTML file, this window will list
  all declared elements and entities.
 </para>

 <para>
  Clicking an element in the list will insert it into the buffer and show
  the <guimenuitem>Edit Tag</guimenuitem> dialog box for specifying attributes.
  See <xref linkend="edit-tag" /> for information about the
  <guimenuitem>Edit Tag</guimenuitem> dialog box. Clicking an element
  with the right mouse button will insert it in the text area, but the
  <guimenuitem>Edit Tag</guimenuitem> dialog box will not be shown.
 </para>

 <para>
  If text is selected, each selection is wrapped in a pair of opening and
  closing tags. This is a very powerful feature; you can select any number
  of text chunks, and surround them with tags, all sharing a common set of
  attributes.
 </para>

 <para>
  With XML files, the list of elements and entities is loaded from the file's DTD.
  If the XML file specifies the DTD using a public ID, you will need to
  ensure the XML plugin loads the catalog where the public ID is defined;
  see <xref linkend="catalog" />.
 </para>

 <para>
  With HTML files, the list of elements and entities is stored in the XML plugin
  itself. It is based on the XHTML 1.0 DTD, and is compatible with HTML
  4.0 and HTML 3.2 as well.
 </para>

 <para>
  The XML plugin includes a few other built-in element
  and entity lists, for Ant <filename>build.xml</filename> files, XSL stylesheets,
  as well as XML schemas (files with the <filename>.xsd</filename> extension).
 </para>

</chapter>

<chapter id="completion"><title>Tag and entity completion</title>

 <para>
  If <keycap>&lt;</keycap> is typed and no other key is pressed within a
  specified delay (half a second by default), a tag list popup will be
  shown. The arrow keys can be used to select a tag; if you start
  typing a tag name, only tags whose names begin with the already-entered
  text will be shown.
 </para>

 <para>
  Pressing <keycap>Space</keycap> or <keycap>&gt;</keycap> will insert
  the currently selected
  tag into the buffer. Pressing <keycap>Enter</keycap> will insert
  the tag and show the <guimenuitem>Edit Tag</guimenuitem> dialog box;
  see <xref linkend="edit-tag" />.
 </para>

 <para>
  Entity completion works in a similar manner; typing
  <keycap>&amp;</keycap> will show an entity list popup. Pressing
  <keycap>Space</keycap>, <keycap>Enter</keycap> or <keycap>;</keycap>
  will insert the currently selected entity into the buffer.
 </para>

 <para>
  Just as with the <guimenuitem>XML Insert</guimenuitem> window,
  the <guimenuitem>XML Tree</guimenuitem> window must be open
  for tag and entity completion to work with XML files, but for HTML
  files, the <guimenuitem>XML Tree</guimenuitem> window need not be
  open and the list of elements and entities is stored in the XML plugin
  itself.
 </para>

 <para>
  In XML files only, typing <quote>&lt;/</quote> will automatically close
  the last open tag.
 </para>

 <para>
  Another convenience feature that is disabled by default inserts a
  closing tag when you finish typing an opening tag.
 </para>

 <para>
  Completion features can be enabled, disabled and configured in the
  <guibutton>XML</guibutton>&gt;<guibutton>Completion</guibutton> pane
  of the <guimenu>Utilities</guimenu>&gt;<guimenuitem>Global Options</guimenuitem>
  dialog box.
 </para>

</chapter>

<chapter id="edit-tag"><title>The Edit Tag dialog box</title>

 <para>
  <guimenu>Plugins</guimenu>&gt;<guisubmenu>XML</guisubmenu>&gt;<guimenuitem>Edit
  Tag at Caret</guimenuitem> displays a dialog box for graphically editing the
  attributes of the tag at the caret position.
 </para>

 <para>
  The <guimenuitem>XML Tree</guimenuitem> window must be open
  for the <guimenuitem>Edit Tag</guimenuitem> dialog box to work with XML
  files, but for HTML files, the <guimenuitem>XML Tree</guimenuitem> window
  need not be open and the list of elements and entities is stored in the
  XML plugin itself.
 </para>

 <para>
  The dialog box lists all declared attributes for the current tag in a
  table. The columns of the table are as follows:
 </para>

 <itemizedlist>
  <listitem><formalpara><title>Set</title><para>A check box that controls
  if the attribute is specified or not. Required attributes are always
  specified.</para></formalpara></listitem>

  <listitem><formalpara><title>Name</title><para>The name of the
  attribute.</para></formalpara></listitem>

  <listitem><formalpara><title>Type</title><para>This will either be
  <quote>text</quote> or <quote>choice</quote>. If the attribute is
  required, <quote>required</quote> will be
  appended.</para></formalpara></listitem>

  <listitem><formalpara><title>Value</title><para>For
  <quote>text</quote> attributes, this is a text field.
  For <quote>choice</quote> attributes, this is a combo
  box. Depending on the DTD, some attributes might define a
  default value.</para></formalpara>

  <para>
   Note that special characters entered in the text field are
   automatically converted to entities if necessary.
  </para></listitem>
 </itemizedlist>

 <para>
  The <guilabel>Preview</guilabel> text field shows what the tag will look
  like with all currently-specified attributes. Clicking
  <guibutton>OK</guibutton> will insert the tag into the buffer.
 </para>

</chapter>

<chapter id="entity-commands"><title>Entity conversion</title>

 <para>
  <guimenu>Plugins</guimenu>&gt;<guisubmenu>XML</guisubmenu>&gt;<guimenuitem>Characters
  to Entities</guimenuitem> converts special characters to entities in the
  current selection.
 </para>

 <para>
  <guimenu>Plugins</guimenu>&gt;<guisubmenu>XML</guisubmenu>&gt;<guimenuitem>Entities
  to Characters</guimenuitem> converts entities to characters in the
  current selection.
 </para>

 <para>
   Note that a few characters (<literal>&lt;</literal>,
   <literal>&gt;</literal>, <literal>&amp;</literal>,
   <literal>&quot;</literal>, <literal>&apos;</literal>) are not converted.
   This allows you to have markup as part of the selection.
 </para>

 <para>
  The <guimenuitem>XML Tree</guimenuitem> window must be open
  for entity conversion to work with XML files, but for HTML
  files, the <guimenuitem>XML Tree</guimenuitem> window need not be
  open and the list of entities is stored in the XML plugin
  itself.
 </para>

</chapter>

<chapter id="edit-commands"><title>Editing commands</title>

 <para>
  The following commands can be helpful when editing XML and HTML
  files.
 </para>

 <para>
  <guimenu>Plugins</guimenu>&gt;<guisubmenu>XML</guisubmenu>&gt;<guimenuitem>Close
  Last Open Tag</guimenuitem> inserts a closing tag for the last opened tag.
  With HTML files, this might incorrectly close such tags as
  <literal>&lt;img&gt;</literal> and <literal>&lt;br&gt;</literal>.
 </para>

 <para>
  <guimenu>Plugins</guimenu>&gt;<guisubmenu>XML</guisubmenu>&gt;<guimenuitem>Go
  to Previous Tag</guimenuitem> moves the caret to start of the previous
  tag.
 </para>

 <para>
  <guimenu>Plugins</guimenu>&gt;<guisubmenu>XML</guisubmenu>&gt;<guimenuitem>Go
  to Next Tag</guimenuitem> moves the caret to start of the next
  tag.
 </para>

 <para>
  <guimenu>Plugins</guimenu>&gt;<guisubmenu>XML</guisubmenu>&gt;<guimenuitem>Remove
  All Tags</guimenuitem> removes all tags from the current buffer, leaving
  only text.
 </para>

</chapter>

<chapter id="misc-commands"><title>Miscellaneous commands</title>

 <para>
  The XML plugin provides a few additional commands that can be bound to
  keyboard shortcuts in the <guibutton>Shortcuts</guibutton> pane of the
  <guimenuitem>Global Options</guimenuitem> dialog box.
 </para>

 <para>
  <guimenu>Plugins</guimenu>&gt;<guisubmenu>XML</guisubmenu>&gt;<guimenuitem>Parse
  XML</guimenuitem> has the same effect as clicking the parse button in the
  XML tree window.
 </para>

 <para>
  <guimenu>Plugins</guimenu>&gt;<guisubmenu>XML</guisubmenu>&gt;<guimenuitem>Parse
  XML on Keystroke</guimenuitem> is a checkbox menu item that toggles on-the-fly
  parsing, for the current buffer only.
 </para>

</chapter>

<chapter id="other-plugins"><title>Using the XML parser in other plugins</title>

 <para>
  The jEdit core only includes a very simple, non-validating
  and non SAX-compliant parser known as &AElig;lfred.
  The XML plugin includes and uses the much better Xerces
  XML parser, from <ulink url="http://xml.apache.org">xml.apache.org</ulink>.
  If you are developing your own plugin that needs to handle XML, you
  might prefer to use Xerces over the default jEdit parser.
 </para>

 <para>
  If you would like to use this parser from your own plugin, you will first
  need to change your plugin's license if it is licensed under the GPL.
  The GPL is not compatible with the Xerces license.
 </para>

 <para>
  The XML plugin itself is licensed under a modified GPL; this will
  probably be sufficient for your plugin. Here is the text of the license,
  embedded in each source file of the XML plugin:
 </para>

  <blockquote><para>
   The XML plugin is licensed under the GNU General Public License, with
   the following exception:
  </para>

  <para>
   Permission is granted to link this code with software released under
   the Apache license version 1.1, for example used by the Xerces XML
   parser package.
  </para></blockquote>

 <para>
  You will also need to add a dependency for the XML plugin in your plugin's
  property file:
 </para>

 <programlisting>plugin.MyPlugin.depend.<replaceable>n</replaceable>=plugin xml.XmlPlugin 0.6</programlisting>

 <para>
  Note that you must replace <replaceable>n</replaceable> with the
  appropriate number, as dependency properties must have consecutive numbers..
 </para>

 <para>
  That's all there is to it; you can now use the Xerces parser in your plugin.
  Xerces includes its own implementations of the JAXP, SAX2 and DOM APIs, so
  integrating existing code should be relatively easy.
 </para>

</chapter>

<chapter id="catalog"><title>Resolving system and public IDs</title>

 <para>
  The XML plugin can use catalogs in XML catalog and OASIS SOCAT formats
  to resolve system and public IDs. Catalogs to search in can be specified
  in the <guibutton>XML</guibutton>&gt;<guibutton>Catalogs</guibutton> pane
  of the <guimenu>Utilities</guimenu>&gt;<guimenuitem>Global Options</guimenuitem>
  dialog box.
 </para>

</chapter>

<appendix id="changes"><title>Change log</title>

 <itemizedlist>

  <listitem><para><emphasis role="bold">Version 0.6</emphasis> requires
  jEdit 4.0pre4 and the ErrorList plugin 1.2.</para>

  <itemizedlist>
   <listitem><para>
    HTML files are now parsed using the Swing HTML parser. Note that this
    parser is buggy and doesn't validate.
   </para></listitem>
   <listitem><para>
    The <guimenuitem>XML Tree</guimenuitem> window no longer needs to
    be opened for XML parsing to take place.
   </para></listitem>
   <listitem><para>
    Attributes of type <classname>ID</classname> are now listed in the
    <guimenuitem>XML Insert</guimenuitem> window, along with the name of
    the element where they are contained. Left-clicking on an entry in the
    list inserts the attribute value in the buffer, right-clicking moves
    the caret to the location of the declaring element.
   </para></listitem>
   <listitem><para>
    When navigating tag and entity completion popups using the arrow keys,
    the selection will now wrap around when it reaches the top or bottom.
   </para></listitem>
   <listitem><para>
    Pressing the <keycap>Backspace</keycap> key now works when completing
    tags and entities.
   </para></listitem>
   <listitem><para>
    Tag completion for XML schema (<filename>.xsd</filename>) files
    (Tom Gutwin).
   </para></listitem>
   <listitem><para>
    Updated for jEdit 4.0 and ErrorList 1.2 API changes.
   </para></listitem>
   <listitem><para>
    <quote>Delay before showing popup</quote> setting could not be
    changed.
   </para></listitem>
   <listitem><para>
    <guimenuitem>Go to Matching Tag</guimenuitem> command was missing
    from the <guimenu>XML</guimenu> menu.
   </para></listitem>
   <listitem><para>
    <guimenuitem>Edit Tag</guimenuitem> dialog box didn't let you edit
    tag attribute values on Java 2 version 1.3.
   </para></listitem>
   <listitem><para>
    Right-clicking on a tag in the <guimenuitem>XML Insert</guimenuitem>
    window while nothing was selected would only insert a closing tag.
   </para></listitem>
  </itemizedlist>

  </listitem>

  <listitem><para><emphasis role="bold">Version 0.5</emphasis> requires
  jEdit 3.2.1, the EditBus plugin 1.0.1, and the ErrorList plugin 1.1.</para>

  <itemizedlist>
   <listitem><para>
    <guibutton>Remove</guibutton> button in catalog option pane didn't work.
   </para></listitem>
   <listitem><para>
    <guibutton>Show attributes in tree</guibutton> setting didn't work.
    properly
   </para></listitem>
   <listitem><para>
    Double-click on tag in XML tree window didn't work.
   </para></listitem>
   <listitem><para>
    <guimenuitem>Go to Matching Tag</guimenuitem> command selected the
    matching tag but didn't move the caret.
   </para></listitem>
   <listitem><para>
    Fixed possible (harmless) exception printed when opening a file where
    tag highlights are to be used.
   </para></listitem>
   <listitem><para>
    The XML plugin now includes its own copy of the
    <classname>JCheckBoxList</classname> class, which fixes a bug. The bug
    fix will only appear in the jEdit core in version 4.0pre1, but I want
    to keep the XML plugin compatible with jEdit 3.2.
   </para></listitem>
   <listitem><para>
    Edit tag dialog improvements.
   </para></listitem>
   <listitem><para>
    Tag completion improvements.
   </para></listitem>
   <listitem><para>
    If the XML insert window is docked at the top or bottom of the view, the
    two lists are placed side-by-side, instead of vertically.
   </para></listitem>
   <listitem><para>
    Tag list for XSL files (Felix Rosencrantz).
   </para></listitem>
   <listitem><para>
    Tag list for Ant <filename>build.xml</filename> files.
   </para></listitem>
   <listitem><para>
    Clicking an element in the XML insert window while a selection is active
    wraps each selection with opening and closing tags.
   </para></listitem>
   <listitem><para>
    Xerces 1.4.3 included.
   </para></listitem>
   <listitem><para>
    Documentation is now generated with DocBook-XSL stylesheets.
   </para></listitem>
   <listitem><para>
    Ant build file provided instead of JMK makefile.
   </para></listitem>
  </itemizedlist>

  </listitem>

  <listitem><para><emphasis role="bold">Version 0.4</emphasis> requires
  jEdit 3.2.1, the EditBus plugin 1.0.1, and the ErrorList plugin 1.1.</para>

   <itemizedlist>
    <listitem><para>
     Fixes a few bugs.
    </para></listitem>

    <listitem><para>
     Can now use catalogs in XMLCatalog and OASIS OPEN
     format to resolve system and public IDs.
    </para></listitem>

    <listitem><para>
     New <guimenuitem>XML Insert</guimenuitem> window lists declared
     elements (loaded from the DTD for XML files, a built-in list for
     HTML files).
    </para></listitem>

    <listitem><para>
     <guimenuitem>Edit Tag</guimenuitem> dialog box
     for graphically editing tag attributes.
    </para></listitem>

    <listitem><para>
     Tag and entity completion, invoked when <keycap>&lt;</keycap> or
     <keycap>&amp;</keycap> is pressed.
    </para></listitem>

    <listitem><para>
     Tag-related commands moved from the HTML plugin.
    </para></listitem>

  </itemizedlist>

  </listitem>

  <listitem><para><emphasis role="bold">Version 0.3</emphasis> requires
  jEdit 3.2pre9, the EditBus plugin 1.0.1, and the ErrorList plugin 1.1.</para>

   <itemizedlist>
    <listitem><para>
     Now uses Apache Xerces parser to parse XML, instead of brain-dead
     &AElig;lfred parser included with jEdit
    </para></listitem>

    <listitem><para>
     Automatic parsing can be disabled, and even if enabled, is only
     performed if the XML tree window is open. It is disabled by default
    </para></listitem>

    <listitem><para>
     Delay before automatic parsing begins can be configured
    </para></listitem>

    <listitem><para>
     Display of attributes can be configured
    </para></listitem>

    <listitem><para>
     Option pane lets you set which modes XML parsing is performed in, previously
     this list of modes was hard-coded
    </para></listitem>

    <listitem><para>
     Menu item command to re-parse current buffer, can be bound to a keystroke,
     for example
    </para></listitem>

    <listitem><para>
     Menu item command to toggle automatic parse for the current buffer only
    </para></listitem>

    <listitem><para>
     One error source per XML tree, instead of a global error source
    </para></listitem>
   </itemizedlist>

  </listitem>

 </itemizedlist>

</appendix>

</book>
