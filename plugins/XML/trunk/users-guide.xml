<?xml version="1.0"?>

<!-- XML user's guide -->
<!-- (C) 2001 Slava Pestov -->

<!-- jEdit buffer-local properties: -->
<!-- :indentSize=1:noTabs=true: -->

<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
  "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">

<book>

<bookinfo><title>XML plugin user's guide</title>

 <authorgroup>
  <author><firstname>Slava</firstname><surname>Pestov</surname></author>
  <author><firstname>Andr&eacute;</firstname><surname>Kaplan</surname></author>
 </authorgroup>

 <legalnotice><title>Legal Notice</title>
  <para>
   Permission is granted to copy, distribute and/or modify this document
   under the terms of the GNU Free Documentation License, Version 1.1 or
   any later version published by the Free Software Foundation; with no
   <quote>Invariant Sections</quote>, <quote>Front-Cover Texts</quote> or
   <quote>Back-Cover Texts</quote>, each as defined in the license. A copy of
   the license can be found in the file <filename>COPYING.DOC.txt</filename>
   included with jEdit.
  </para>
 </legalnotice>
</bookinfo>

<chapter id="intro"><title>Introduction</title>

 <para>
  The XML plugin provides a number of features that make editing XML and
  HTML files easier:
 </para>

 <itemizedlist>
  <listitem><para>On-the-fly validation of XML files</para></listitem>
  <listitem><para>Display of the element tree in a dockable window</para></listitem>
  <listitem><para>Matching tag highlighting</para></listitem>
  <listitem><para>One click insertion of tags and entities</para></listitem>
  <listitem><para>Graphical editing of tags and attributes</para></listitem>
  <listitem><para>A number of miscellaneous commands</para></listitem>
 </itemizedlist>

</chapter>

<chapter id="dtds"><title>Locating DTDs and completion info</title>

 <para>
  A DTD (document type definition) declares all elements and entities that can be
  used within a specific type of XML file. In order to implement many of its
  features, the XML plugin needs to load DTDs specified in
  <literal>&lt;!DOCTYPE&gt;</literal> declarations. This is done as follows:
 </para>
 <itemizedlist>
  <listitem><para>Some DTDs that are bundled with the plugin are resolved
  automatically:</para>
  <itemizedlist>
   <listitem><para>DTDs declared by jEdit: <filename>actions.dtd</filename>,
   <filename>catalog.dtd</filename>,
   <filename>dockables.dtd</filename>,
   <filename>recent.dtd</filename>,
   <filename>xmode.dtd</filename>,
   <filename>plugins.dtd</filename>.</para></listitem>
   <listitem><para>A few plugin DTDs: <filename>commando.dtd</filename> (Console
   plugin), <filename>sqlServerType.dtd</filename> (SQL plugin).</para></listitem>
   <listitem><para>XHTML 1.0 DTDs, referenced using one of the usual public or
   system IDs.</para></listitem>
   <listitem><para>DocBook 4.1.2 DTDs, referenced using one of the usual public or
   system IDs.</para></listitem>
  </itemizedlist>
  <para>
   In addition, some file types without a DTD
   (HTML, XML Schema, XSL, Ant <filename>build.xml</filename>)
   have their completion info bundled with the XML plugin. Tag and entity popups can
   therefore be used with these file types, however they are not validated as validation
   requires a DTD.
  </para>
  </listitem>
  <listitem><para>Any catalog files specified in the
  <guibutton>XML</guibutton>&gt;<guibutton>Catalogs</guibutton> pane
  of the <guimenu>Utilities</guimenu>&gt;<guimenuitem>Global Options</guimenuitem>
  dialog box are searched for the DTD.</para>
  <para>
  Catalog files must either be in OASIS OPEN or XML catalog format. These two formats
  are documented below.</para>
  </listitem>
  <listitem><para>If the above two methods fail,
  the plugin prompts if the DTD should be downloaded from
  the <literal>SYSTEM</literal> location specified in the
  <literal>&lt;!DOCTYPE&gt;</literal> declaration. If the download succeeds,
  the DTD is cached for future use in the <filename>dtds</filename>
  subdirectory of the jEdit settings directory.</para>
  <para>
  The downloaded DTDs cache can be cleared using the
  <guimenu>Plugins</guimenu>&gt;<guisubmenu>XML</guisubmenu>&gt;<guimenuitem>Clear
  DTD Cache</guimenuitem> command.
 </para>
 </listitem>
 </itemizedlist>

 <sect1><title>OASIS OPEN catalog format</title>
  <para>
   Each line in an OASIS OPEN catalog file must look like one of the following:
  </para>
  <itemizedlist>
   <listitem><para><literal>-- <replaceable>comment</replaceable></literal>
   - comments are ignored.</para></listitem>
   <listitem><para><literal>SYSTEM "<replaceable>system ID</replaceable>"
   "<replaceable>new system ID</replaceable>"</literal> - maps the first system ID
   to the second.</para></listitem>
   <listitem><para><literal>PUBLIC "<replaceable>public ID</replaceable>"
   "<replaceable>new system ID</replaceable>"</literal> - maps the public ID
   to the system ID.</para></listitem>
   <!-- <listitem><para><literal>OVERRIDE <replaceable>YES or NO</replaceable></literal>
   - if <literal><replaceable>YES</replaceable></literal>, then </para></listitem> -->
  </itemizedlist>
 </sect1>

 <sect1><title>XML catalog format</title>
  <para>
   Not yet written.
  </para>
 </sect1>

</chapter>

<chapter id="parsing"><title>Parsing XML and HTML</title>

 <para>
  The XML plugin automatically parses XML and HTML files when they are loaded or saved.
  Optionally, they can also be parsed on the fly, but this uses a fair bit of
  memory and processor power so it is disabled by default.
  The current buffer can be parsed at any other time by clicking the parse
  button in the XML tree window, or using the
  <guimenu>Plugins</guimenu>&gt;<guisubmenu>XML</guisubmenu>&gt;<guimenuitem>Parse
  XML Buffer</guimenuitem>.
 </para>

 <para>
  XML files are validated, while HTML files are not.
  Any errors found while parsing XML are handled by the
  <application>ErrorList</application> plugin; in other words, they are highlighted
  in the text area, and shown in the
  <guimenu>Plugins</guimenu>&gt;<guisubmenu>Error
  List</guisubmenu>&gt;<guimenuitem>Error List</guimenuitem> window. See the
  documentation for the <application>ErrorList</application> plugin for details.
 </para>

 <para>
  If a DTD <!-- or XML schema --> is available, it will be used to validate the XML
  file; otherwise, only minimal error checking will be performed.
 </para>

 <para>
  <guimenu>Plugins</guimenu>&gt;<guisubmenu>XML</guisubmenu>&gt;<guimenuitem>Parse
  XML</guimenuitem> has the same effect as clicking the parse button in the
  XML tree window.
 </para>

 <para>
  <guimenu>Plugins</guimenu>&gt;<guisubmenu>XML</guisubmenu>&gt;<guimenuitem>Parse
  XML on Keystroke</guimenuitem> is a checkbox menu item that toggles on-the-fly
  parsing, for the current buffer only.
 </para>

</chapter>

<chapter id="tree"><title>The XML tree window</title>

 <para>
  <guimenu>Plugins</guimenu>&gt;<guisubmenu>XML</guisubmenu>&gt;<guimenuitem>XML
  Tree</guimenuitem> displays all elements defined in the current buffer in a
  dockable window. This window is floating by
  default, but it can be docked into the view in the <guibutton>Docking</guibutton>
  pane of the <guimenuitem>Global Options</guimenuitem> dialog box.
 </para>

 <para>
  Clicking on an element in the tree will move the caret to its location in the
  text area;
  conversely, moving the caret in the text area will select the corresponding
  element in the tree. Double-clicking on an element will show the
  <guimenuitem>Edit Tag</guimenuitem> dialog box; see
  <xref linkend="edit-tag" />.
 </para>

 <para>
  If the XML tree window is docked into the current view, hovering the mouse
  over an element will display all attributes of that element in
  the view's status bar. If you want attributes to be displayed in
  the tree itself, you can specify so in the
  <guibutton>XML</guibutton>&gt;<guibutton>General</guibutton> pane
  of the <guimenu>Utilities</guimenu>&gt;<guimenuitem>Global Options</guimenuitem>
  dialog box.
 </para>

</chapter>

<chapter id="moving-around"><title>Moving around XML and HTML files</title>

 <para>
  If the caret is positioned on a tag, the corresponding opening or closing
  tag will be highlighted in the text area. You can disable this feature,
  or change the tag highlight color in the
  <guibutton>XML</guibutton>&gt;<guibutton>General</guibutton> pane
  of the <guimenu>Utilities</guimenu>&gt;<guimenuitem>Global Options</guimenuitem>
  dialog box.
 </para>

 <para>
  <guimenu>Plugins</guimenu>&gt;<guisubmenu>XML</guisubmenu>&gt;<guimenuitem>Go
  to Previous Tag</guimenuitem> moves the caret to start of the previous
  tag.
 </para>

 <para>
  <guimenu>Plugins</guimenu>&gt;<guisubmenu>XML</guisubmenu>&gt;<guimenuitem>Go
  to Next Tag</guimenuitem> moves the caret to start of the next
  tag.
 </para>

 <para>
  <guimenu>Plugins</guimenu>&gt;<guisubmenu>XML</guisubmenu>&gt;<guimenuitem>Go
  to Matching Tag</guimenuitem> moves the caret to the corresponding opening or
  closing tag.
 </para>

</chapter>

<chapter id="insert"><title>The XML insert window</title>

 <para>
  <guimenu>Plugins</guimenu>&gt;<guisubmenu>XML</guisubmenu>&gt;<guimenuitem>XML
  Insert</guimenuitem> displays the XML insert window. This window is floating by
  default, but it can be docked
  into the view in the <guibutton>Docking</guibutton> pane of the
  <guimenuitem>Global Options</guimenuitem> dialog box.
 </para>

 <para>
  This window lists elements that may be inserted at the caret position,
  all declared entities, and all IDs (element attributes
  with a value type of <property>ID</property>).
 </para>

 <para>
  Clicking an element in the list will insert it into the buffer and show
  the <guimenuitem>Edit Tag</guimenuitem> dialog box for specifying attributes.
  See <xref linkend="edit-tag" /> for information about the
  <guimenuitem>Edit Tag</guimenuitem> dialog box. Clicking an element
  with the right mouse button will insert it in the text area, but the
  <guimenuitem>Edit Tag</guimenuitem> dialog box will not be shown.
 </para>

 <para>
  Clicking an entity will insert it into the buffer.
 </para>

 <para>
  Clicking an ID with the left mouse button will insert it into the buffer;
  clicking with the right mouse button will move the caret to the element
  that declares it.
 </para>

 <para>
  If text is selected, each selection is wrapped in a pair of opening and
  closing tags. This is a very powerful feature; you can select any number
  of text chunks, and surround them with tags, all sharing a common set of
  attributes.
 </para>

</chapter>

<chapter id="completion"><title>Tag and entity completion</title>

 <para>
  If the less-than symbol (<quote>&lt;</quote>) is typed and no other key
  is pressed within a
  specified delay (half a second by default), a tag list popup will be
  shown. Note that only tags which are the parent element is
  allowed to contain are listed. The arrow keys can be used to select a tag;
  if you start
  typing a tag name, only tags whose names begin with the already-entered
  text will be shown.
 </para>

 <para>
  Pressing <keycap>Space</keycap> or <keycap>&gt;</keycap> will insert
  the currently selected
  tag into the buffer. Pressing <keycap>Enter</keycap> will insert
  the tag and show the <guimenuitem>Edit Tag</guimenuitem> dialog box;
  see <xref linkend="edit-tag" />.
 </para>

 <para>
  Entity completion works in a similar manner; typing
  <keycap>&amp;</keycap> will show an entity list popup. Pressing
  <keycap>Space</keycap>, <keycap>Enter</keycap> or <keycap>;</keycap>
  will insert the currently selected entity into the buffer.
 </para>

 <para>
  An element or entity completion popup can also be shown at any other time
  by invoking the
  <guimenu>Plugins</guimenu>&gt;<guisubmenu>XML</guisubmenu>&gt;<guimenuitem>Complete
  Element or Entity</guimenuitem> command.
 </para>

 <para>
  Typing <quote>&lt;/</quote> will automatically close
  the last open tag.
 </para>

 <para>
  Another convenience feature that is disabled by default inserts a
  closing tag when you finish typing an opening tag.
 </para>

 <para>
  These features can be enabled, disabled and configured in the
  <guibutton>XML</guibutton>&gt;<guibutton>Completion</guibutton> pane
  of the <guimenu>Utilities</guimenu>&gt;<guimenuitem>Global Options</guimenuitem>
  dialog box.
 </para>

</chapter>

<chapter id="edit-tag"><title>The Edit Tag dialog box</title>

 <para>
  The <guimenuitem>Edit Tag</guimenuitem> dialog box can be opened in one of
  several ways:
 </para>

 <itemizedlist>
  <listitem><para>Invoking
  <guimenu>Plugins</guimenu>&gt;<guisubmenu>XML</guisubmenu>&gt;<guimenuitem>Edit
  Tag at Caret</guimenuitem>.
  </para></listitem>
  <listitem><para>Double-clicking a tag in the text area while holding down
  <keycap>Control</keycap>.</para></listitem>
  <listitem><para>Double-clicking on a tag in the
  <guimenuitem>XML Tree</guimenuitem> window (for information about this
  window see <xref linkend="tree" />).</para></listitem>
 </itemizedlist>

 <para>
  The dialog box lists all declared attributes for the current tag in a
  table. The columns of the table are as follows:
 </para>

 <itemizedlist>
  <listitem><formalpara><title>Set</title><para>A check box that controls
  if the attribute is specified or not. Required attributes are always
  specified.</para></formalpara></listitem>

  <listitem><formalpara><title>Name</title><para>The name of the
  attribute.</para></formalpara></listitem>

  <listitem><formalpara><title>Type</title><para>This will either be
  <quote>text</quote> or <quote>choice</quote>. If the attribute is
  required, <quote>required</quote> will be
  appended.</para></formalpara></listitem>

  <listitem><formalpara><title>Value</title><para>For
  <quote>text</quote> attributes, this is a text field.
  For <quote>choice</quote> attributes, this is a combo
  box. Depending on the DTD, some attributes might define a
  default value.</para></formalpara>

  <para>
   Note that special characters entered in the text field are
   automatically converted to entities if necessary.
  </para></listitem>
 </itemizedlist>

 <para>
  The <guilabel>Preview</guilabel> text field shows what the tag will look
  like with all currently-specified attributes. Clicking
  <guibutton>OK</guibutton> will insert the tag into the buffer.
 </para>

</chapter>

<chapter id="edit-commands"><title>Miscellaneous commands</title>

 <para>
  The following commands can be helpful when editing XML and HTML
  files.
 </para>

 <para>
  <guimenu>Plugins</guimenu>&gt;<guisubmenu>XML</guisubmenu>&gt;<guimenuitem>Close
  Last Open Tag</guimenuitem> inserts a closing tag for the last opened tag.
 </para>

 <para>
  <guimenu>Plugins</guimenu>&gt;<guisubmenu>XML</guisubmenu>&gt;<guimenuitem>Remove
  All Tags</guimenuitem> removes all tags from the current buffer, leaving
  only text.
 </para>

 <para>
  <guimenu>Plugins</guimenu>&gt;<guisubmenu>XML</guisubmenu>&gt;<guimenuitem>Split
  Tag</guimenuitem> splits the current tag at the cursor, and creates a new tag at the same
  level. This is useful when editing HTML, DocBook or similar documents, for inserting 
  many &lt;p&gt; or &lt;para&gt; tags. This command tries
  to match the current indenting style.
 </para>

 <para>
  <guimenu>Plugins</guimenu>&gt;<guisubmenu>XML</guisubmenu>&gt;<guimenuitem>Characters
  to Entities</guimenuitem> converts special characters to entities in the
  current selection.
 </para>

 <para>
  <guimenu>Plugins</guimenu>&gt;<guisubmenu>XML</guisubmenu>&gt;<guimenuitem>Entities
  to Characters</guimenuitem> converts entities to characters in the
  current selection.
 </para>

</chapter>

<chapter id="other-plugins"><title>Using the XML parser in other plugins</title>

 <para>
  The jEdit core only includes a very simple, non-validating
  and non SAX-compliant parser known as &AElig;lfred.
  The XML plugin includes and uses the much better Xerces
  XML parser, from <ulink url="http://xml.apache.org">xml.apache.org</ulink>.
  If you are developing your own plugin that needs to handle XML, you
  might prefer to use Xerces over the default jEdit parser.
 </para>

 <para>
  If you would like to use this parser from your own plugin, you will first
  need to change your plugin's license if it is licensed under the GPL.
  The GPL is not compatible with the Xerces license.
 </para>

 <para>
  The XML plugin itself is licensed under a modified GPL; this will
  probably be sufficient for your plugin. Here is the text of the license,
  embedded in each source file of the XML plugin:
 </para>

  <blockquote><para>
   The XML plugin is licensed under the GNU General Public License, with
   the following exception:
  </para>

  <para>
   Permission is granted to link this code with software released under
   the Apache license version 1.1, for example used by the Xerces XML
   parser package.
  </para></blockquote>

 <para>
  You will also need to add a dependency for the XML plugin in your plugin's
  property file:
 </para>

 <programlisting>plugin.MyPlugin.depend.<replaceable>n</replaceable>=plugin xml.XmlPlugin 0.9</programlisting>

 <para>
  Note that you must replace <replaceable>n</replaceable> with the
  appropriate number, as dependency properties must have consecutive numbers.
 </para>

 <para>
  That's all there is to it; you can now use the Xerces parser in your plugin.
  Xerces includes its own implementations of the JAXP, SAX2 and DOM APIs, so
  integrating existing code should be relatively easy.
 </para>

</chapter>

<appendix id="changes"><title>Change log</title>

 <itemizedlist>

  <listitem><para><emphasis role="bold">Version 0.10</emphasis> requires
  jEdit 4.1pre5 and the ErrorList plugin 1.2.</para>

  <itemizedlist>
   <listitem><para>Fixed problems handling tags whose names ended with a number.
   </para></listitem>
   <listitem><para>We no longer show the <guimenuitem>Edit Tag</guimenuitem>
   dialog box for elements that do not define any attributes.
   </para></listitem>
   <listitem><para>Right-clicking on an element in the <guimenuitem>XML
   Insert</guimenuitem> window will insert any required attributes
   as well.
   </para></listitem>
   <listitem><para>The entity resolver now uses the VFS API; so it should be
   possible to download DTDs from FTP servers that require authentication, etc.
   </para></listitem>
  </itemizedlist>
  </listitem>

  <listitem><para><emphasis role="bold">Version 0.9.2</emphasis> requires
  jEdit 4.1pre5 and the ErrorList plugin 1.2.</para>

  <itemizedlist>
   <listitem><para>The DTD downloader was broken. It would re-download DTDs every
   time without adding them to the catalog.
   </para></listitem>
   <listitem><para>The XML parser object no longer responds to events in
   views other than the one associated with the parser.
   </para></listitem>
   <listitem><para>The tag highlight was using a deprecated API and as a
   result would not be shown sometimes.
   </para></listitem>
   <listitem><para>Tag matching and closing tag completion was broken in various
   ways.
   </para></listitem>
   <listitem><para>Fixed memory leaks when using multiple views.
   </para></listitem>
   <listitem><para>Fixed possible problem if a document contained a <quote>&lt;</quote>
   but no corresponding <quote>&gt;.</quote>.
   </para></listitem>
   <listitem><para>With some DTDs, elements could show up multiple times in
   completion lists.
   </para></listitem>
  </itemizedlist>
  </listitem>

  <listitem><para><emphasis role="bold">Version 0.9.1</emphasis> requires
  jEdit 4.1pre5 and the ErrorList plugin 1.2.</para>

  <itemizedlist>
   <listitem><para>Fixes a showstopper bug where the built-in catalog had
   an incorrect reference to the jEdit 4.1 <filename>xmode.dtd</filename>.
   </para></listitem>
  </itemizedlist>
  </listitem>

  <listitem><para><emphasis role="bold">Version 0.9</emphasis> requires
  jEdit 4.1pre2 and the ErrorList plugin 1.2.</para>

  <itemizedlist>
   <listitem><para>The DTD resolver has been improved. It can now automatically
   download DTDs from the network (after prompting the user) and cache them in the
   <filename>dtds</filename> subdirectory of the jEdit settings directory.
   </para>
   <para>
   Cached DTDs are consulted before the list of imported catalogs. The DTD cache can
   be cleared with the
   <guimenu>Plugins</guimenu>&gt;<guisubmenu>XML</guisubmenu>&gt;<guimenuitem>Clear
   DTD Cache</guimenuitem> command.
   </para></listitem>
   <listitem><para><guimenuitem>Complete Element or Entity</guimenuitem> command
   lets you show a completion popup at any time.</para></listitem>
   <listitem><para><guimenuitem>Split Tag</guimenuitem> command
   (Chris Stevenson).</para></listitem>
   <listitem><para>Updated XSD completion info (Tom Gutwin).</para></listitem>
   <listitem><para>New icons for <guimenuitem>XML Insert</guimenuitem> and
   <guimenuitem>XML Tree</guimenuitem> windows
   (Kris Kopicki).
   </para></listitem>
   <listitem><para>
    Entering a <userinput>/</userinput> inside a tag will no longer cause
    problems - fixed for real this time!
   </para></listitem>
   <listitem><para>
    In HTML files, closing tag completion was not aware of HTML's
    case insensitivity, so it would behave correctly with
    <literal>&lt;br&gt;</literal>, but it would try closing
    <literal>&lt;BR&gt;</literal>, for example.
   </para></listitem>
   <listitem><para>
    Tag matching should no longer be confused by PHP, JSP and ASP inline
    scripts.
   </para></listitem>
   <listitem><para>
    Completion popups will no longer be shown inside PHP, JSP and ASP inline
    scripts.
   </para></listitem>
   <listitem><para>
    Fixed stupid long-standing bug in tag and entity completion code that would
    show an empty popup if a <quote>&lt;</quote> or <quote>&amp;</quote> was
    entered immediately after a non-whitespace character.
   </para></listitem>
   <listitem><para>
    Fixed a possible <classname>NullPointerException</classname> in the
    <guimenuitem>XML Insert</guimenuitem> window.
   </para></listitem>
   <listitem><para>
    Fixed a problem with resolving DTDs for buffers stored on
    virtual file systems.
   </para></listitem>
   <listitem><para>
    Made attribute list handling in DTDs compliant with XML specification.
   </para></listitem>
   <listitem><para>
    Fixed a problem where the tag highlight could be unnecessarily drawn when
    switching from an XML to a non-XML buffer.
   </para></listitem>
   <listitem><para>
    Buffer change listeners for the XML parser and tag matcher are only added when
    necessary. This should remove a tiny bit of unnecessary overhead for non-XML
    files.
   </para></listitem>
  </itemizedlist>

  </listitem>
  <listitem><para><emphasis role="bold">Version 0.8.1</emphasis> requires
  jEdit 4.0pre7 and the ErrorList plugin 1.2.</para>

  <itemizedlist>
   <listitem><para>
    <guimenuitem>Parse XML Buffer</guimenuitem> and <guimenuitem>Parse on
    Keystroke</guimenuitem> menu item commands didn't work.
   </para></listitem>
   <listitem><para>
    Fixed bad interaction between 4.0pre7's
    <function>MiscUtilities.constructPath()</function> method and Xerces path
    handling.
   </para></listitem>
   <listitem><para>
    Entering a <userinput>/</userinput> inside a tag will no longer cause
    problems.
   </para></listitem>
   <listitem><para>
    JSP constructs (like <userinput>&lt;%= ... %&gt;</userinput>) are no longer
    recognized as tags.
   </para></listitem>
   <listitem><para>
    Tag completion now correctly handles DTDs that define elements with content
    <literal>ANY</literal>.
   </para></listitem>
   <listitem><para>
    Fixed possible <classname>ArrayIndexOutOfBoundsException</classname> in
    <function>SAXParser.Handler.findTagStart()</function>.
   </para></listitem>
  </itemizedlist>

  </listitem>

  <listitem><para><emphasis role="bold">Version 0.8</emphasis> requires
  jEdit 4.0pre4 and the ErrorList plugin 1.2.</para>

  <itemizedlist>
   <listitem><para>
    <keycap>Control</keycap>-double clicking on a tag in the text area opens the
    <guimenuitem>Edit Tag</guimenuitem> dialog box.
   </para></listitem>
   <listitem><para>
    Tag completion popups and the <guimenuitem>XML Insert</guimenuitem> window
    now only list elements that can be inserted at the caret position.
   </para></listitem>
   <listitem><para>
    Option added to only show the <literal>ID</literal> attributes of elements
    in the tree.
   </para></listitem>
   <listitem><para>
    Closing tag completion can now be used in HTML files.
   </para></listitem>
   <listitem><para>
    XHTML 1.0, and DocBook-XML 1.4.2 DTDs are now bundled with the plugin; so no
    extra configuration is
    needed to get on-the-fly validation and completion in XHTML and DocBook
    documents.
   </para></listitem>
   <listitem><para>
    Much faster tag matching and highlighting.
   </para></listitem>
   <listitem><para>
    The catalog manager should now be able to locate XML schemas and use them
    for validation purposes.
   </para></listitem>
   <listitem><para>
    XSL element completion popups no longer list HTML tags as well. This feature
    will be reintroduced when namespace support is added to the XML plugin.
   </para></listitem>
   <listitem><para>
    <guimenuitem>Entities to Characters</guimenuitem> and <guimenuitem>Characters
    to Entities</guimenuitem> commands now convert &lt;, &gt; and &amp; as well.
   </para></listitem>
   <listitem><para>
    Only the first 100 parse errors are reported now, this prevents
    gratious slowdowns if for example a file has 500 parse errors.
   </para></listitem>
   <listitem><para>
    Added option to allow downloading DTDs from network. This is disabled by
    default as it is a privacy risk; someone can send you an XML document with
    an embedded system ID, and then find out at what time and from what IP you
    view the file.
   </para></listitem>
   <listitem><para>
    Fixed NullPointerException when invoking the
    <guimenuitem>Parse XML Buffer</guimenuitem> command.
   </para></listitem>
   <listitem><para>
    Tag and entity completion popup now explicitly returns focus to the text
    area; this seems to be necessary for JDK 1.4 on Windows.
   </para></listitem>
   <listitem><para>
    If you entered a tag or entity that was not in the current buffer's
    completion list, trying to enter <quote>&gt;</quote>, <quote>;</quote> or a
    space would not work.
   </para></listitem>
   <listitem><para>
    <guimenuitem>Entities to Characters</guimenuitem> would throw an exception
    if the text contained an unknown entity.
   </para></listitem>
   <listitem><para>
    Fixed possible race condition in XML parsing code that could result in a
    NullPointerException.
   </para></listitem>
   <listitem><para>
    Xerces 1.4.4 included.
   </para></listitem>
  </itemizedlist>

  </listitem>

  <listitem><para><emphasis role="bold">Version 0.7</emphasis> - due to
  a communication error with the plugin central maintainer, version 0.6 was
  listed on plugin central as version 0.7.</para></listitem>

  <listitem><para><emphasis role="bold">Version 0.6</emphasis> requires
  jEdit 4.0pre4 and the ErrorList plugin 1.2.</para>

  <itemizedlist>
   <listitem><para>
    HTML files are now parsed using the Swing HTML parser. Note that this
    parser is buggy and doesn't validate.
   </para></listitem>
   <listitem><para>
    The <guimenuitem>XML Tree</guimenuitem> window no longer needs to
    be opened for XML parsing to take place.
   </para></listitem>
   <listitem><para>
    Attributes of type <classname>ID</classname> are now listed in the
    <guimenuitem>XML Insert</guimenuitem> window, along with the name of
    the element where they are contained. Left-clicking on an entry in the
    list inserts the attribute value in the buffer, right-clicking moves
    the caret to the location of the declaring element.
   </para></listitem>
   <listitem><para>
    When navigating tag and entity completion popups using the arrow keys,
    the selection will now wrap around when it reaches the top or bottom.
   </para></listitem>
   <listitem><para>
    Pressing the <keycap>Backspace</keycap> key now works when completing
    tags and entities.
   </para></listitem>
   <listitem><para>
    Tag highlighting now shows a status bar message if the matching tag is
    not visible on the screen.
   </para></listitem>
   <listitem><para>
    Tag completion for XML schema (<filename>.xsd</filename>) files
    (Tom Gutwin).
   </para></listitem>
   <listitem><para>
    Updated for jEdit 4.0 and ErrorList 1.2 API changes.
   </para></listitem>
   <listitem><para>
    <quote>Delay before showing popup</quote> setting could not be
    changed.
   </para></listitem>
   <listitem><para>
    <guimenuitem>Go to Matching Tag</guimenuitem> command was missing
    from the <guimenu>XML</guimenu> menu.
   </para></listitem>
   <listitem><para>
    <guimenuitem>Edit Tag</guimenuitem> dialog box didn't let you edit
    tag attribute values on Java 2 version 1.3.
   </para></listitem>
   <listitem><para>
    Right-clicking on a tag in the <guimenuitem>XML Insert</guimenuitem>
    window while nothing was selected would only insert a closing tag.
   </para></listitem>
  </itemizedlist>

  </listitem>

  <listitem><para><emphasis role="bold">Version 0.5</emphasis> requires
  jEdit 3.2.1, the EditBus plugin 1.0.1, and the ErrorList plugin 1.1.</para>

  <itemizedlist>
   <listitem><para>
    <guibutton>Remove</guibutton> button in catalog option pane didn't work.
   </para></listitem>
   <listitem><para>
    <guibutton>Show attributes in tree</guibutton> setting didn't work.
    properly
   </para></listitem>
   <listitem><para>
    Double-click on tag in XML tree window didn't work.
   </para></listitem>
   <listitem><para>
    <guimenuitem>Go to Matching Tag</guimenuitem> command selected the
    matching tag but didn't move the caret.
   </para></listitem>
   <listitem><para>
    Fixed possible (harmless) exception printed when opening a file where
    tag highlights are to be used.
   </para></listitem>
   <listitem><para>
    The XML plugin now includes its own copy of the
    <classname>JCheckBoxList</classname> class, which fixes a bug. The bug
    fix will only appear in the jEdit core in version 4.0pre1, but I want
    to keep the XML plugin compatible with jEdit 3.2.
   </para></listitem>
   <listitem><para>
    Edit tag dialog improvements.
   </para></listitem>
   <listitem><para>
    Tag completion improvements.
   </para></listitem>
   <listitem><para>
    If the XML insert window is docked at the top or bottom of the view, the
    two lists are placed side-by-side, instead of vertically.
   </para></listitem>
   <listitem><para>
    Tag list for XSL files (Felix Rosencrantz).
   </para></listitem>
   <listitem><para>
    Tag list for Ant <filename>build.xml</filename> files.
   </para></listitem>
   <listitem><para>
    Clicking an element in the XML insert window while a selection is active
    wraps each selection with opening and closing tags.
   </para></listitem>
   <listitem><para>
    Xerces 1.4.3 included.
   </para></listitem>
   <listitem><para>
    Documentation is now generated with DocBook-XSL stylesheets.
   </para></listitem>
   <listitem><para>
    Ant build file provided instead of JMK makefile.
   </para></listitem>
  </itemizedlist>

  </listitem>

  <listitem><para><emphasis role="bold">Version 0.4</emphasis> requires
  jEdit 3.2.1, the EditBus plugin 1.0.1, and the ErrorList plugin 1.1.</para>

   <itemizedlist>
    <listitem><para>
     Fixes a few bugs.
    </para></listitem>

    <listitem><para>
     Can now use catalogs in XMLCatalog and OASIS OPEN
     format to resolve system and public IDs.
    </para></listitem>

    <listitem><para>
     New <guimenuitem>XML Insert</guimenuitem> window lists declared
     elements (loaded from the DTD for XML files, a built-in list for
     HTML files).
    </para></listitem>

    <listitem><para>
     <guimenuitem>Edit Tag</guimenuitem> dialog box
     for graphically editing tag attributes.
    </para></listitem>

    <listitem><para>
     Tag and entity completion, invoked when <keycap>&lt;</keycap> or
     <keycap>&amp;</keycap> is pressed.
    </para></listitem>

    <listitem><para>
     Tag-related commands moved from the HTML plugin.
    </para></listitem>

  </itemizedlist>

  </listitem>

  <listitem><para><emphasis role="bold">Version 0.3</emphasis> requires
  jEdit 3.2pre9, the EditBus plugin 1.0.1, and the ErrorList plugin 1.1.</para>

   <itemizedlist>
    <listitem><para>
     Now uses Apache Xerces parser to parse XML, instead of brain-dead
     &AElig;lfred parser included with jEdit
    </para></listitem>

    <listitem><para>
     Automatic parsing can be disabled, and even if enabled, is only
     performed if the XML tree window is open. It is disabled by default
    </para></listitem>

    <listitem><para>
     Delay before automatic parsing begins can be configured
    </para></listitem>

    <listitem><para>
     Display of attributes can be configured
    </para></listitem>

    <listitem><para>
     Option pane lets you set which modes XML parsing is performed in, previously
     this list of modes was hard-coded
    </para></listitem>

    <listitem><para>
     Menu item command to re-parse current buffer, can be bound to a keystroke,
     for example
    </para></listitem>

    <listitem><para>
     Menu item command to toggle automatic parse for the current buffer only
    </para></listitem>

    <listitem><para>
     One error source per XML tree, instead of a global error source
    </para></listitem>
   </itemizedlist>

  </listitem>

 </itemizedlist>

</appendix>

</book>
