<?xml version="1.0"?>

<!-- JavaInsight plugin user's guide -->
<!-- (c) 2002 Andre Kaplan, Dirk Moebius -->

<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
  "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">

<book>


<bookinfo>
    <title>JavaInsight plugin</title>

    <authorgroup>
        <author>
            <firstname>Andr&eacute;</firstname>
            <surname>Kaplan</surname>
        </author>

        <author>
            <firstname>Dirk</firstname>
            <surname>M&ouml;bius</surname>
        </author>

        <author>
            <firstname>Kevin</firstname>
            <surname>Burton</surname>
            <othername role="mi">A.</othername>
        </author>
    </authorgroup>

    <legalnotice>
        <title>Legal Notice</title>

        <para>
        Permission is granted to copy, distribute and/or modify this
        document under the terms of the GNU Free Documentation License,
        Version 1.1 or any later version published by the
        Free Software Foundation; with no
        <quote>Invariant Sections</quote>,
        <quote>Front-Cover Texts</quote> or
        <quote>Back-Cover Texts</quote>,
        each as defined in the license.
        A copy of the license can be found in the file
        <filename>COPYING.DOC.txt</filename> included with jEdit.
        </para>
    </legalnotice>
</bookinfo>


<chapter id="introduction">
    <title>Introduction</title>

    <para>
    The main purpose of JavaInsight is to view the content of java bytecode
    (<filename>*.class</filename> files) in a disassembled or decompiled form.
    </para>

    <para>
    JavaInsight comes with two external libraries.
    </para>

    <itemizedlist>
        <listitem><para>
        The bytecode disassembling is performed by
        <emphasis>BCEL</emphasis> (Byte Code Engineering Library) by
        Markus Dahm <email>markus.dahm@berlin.de</email>.
        More information about BCEL can be found at
        <ulink url="http://jakarta.apache.org/bcel">http://jakarta.apache.org/bcel</ulink>.
        </para></listitem>

        <listitem><para>
        The decompilation is performed by <emphasis>Jode</emphasis>, a tool written by
        Jochen Hoenicke <email>jochen@gnu.org</email>.
        More information about Jode can be found at
        <ulink url="http://jode.sourceforge.net">http://jode.sourceforge.net</ulink>.
        </para></listitem>
    </itemizedlist>

</chapter>


<chapter id="actions">
    <title>Actions</title>

    <simplesect id="class_tree">
        <title>... in Class Tree</title>

        <itemizedlist>
            <listitem>Double-click a class to decompile it with Jode.</listitem>

            <listitem>Right-click to show a popup menu with the following actions:
            <variablelist>
                <varlistentry>
                    <term>Decompile with Jode</term>

                    <listitem><para>
                    Decompiles the currently selected class with Jode. Only shown,
                    when a class is selected
                    </para></listitem>
                </varlistentry>

                <varlistentry>
                    <term>Add Archives...</term>

                    <listitem><para>
                    Add a JAR or ZIP file archive to the current classpath.
                    </para></listitem>
                </varlistentry>

                <varlistentry>
                    <term>Classpath View</term>

                    <listitem><para>
                    Switches the tree to classpath view.
                    </para></listitem>
                </varlistentry>

                <varlistentry>
                    <term>Package View</term>

                    <listitem><para>
                    Switches the tree to package view.
                    </para></listitem>
                </varlistentry>

                <varlistentry>
                    <term>Flat Packages</term>

                    <listitem><para>
                    Toggles between flat and hierarchical view of the packages.
                    </para></listitem>
                </varlistentry>

            </variablelist>
            </listitem>

        </itemizedlist>

    </simplesect>

    <simplesect id="file_system_browser">
        <title>... in File System Browser</title>

        <para>
        Right-click a file. The popup menu shows the following additional actions:
        </para>

        <variablelist>
            <varlistentry>
                <term>Decompile with Jode</term>

                <listitem><para>
                Decompiles the currently selected file with Jode. The file should
                be a class file, otherwise you&#39;ll get an error.
                </para></listitem>
            </varlistentry>

            <varlistentry>
                <term>Show bytecode</term>

                <listitem><para>
                Show bytecode decompiler output from the BCEL library.
                </para></listitem>
            </varlistentry>

            <varlistentry>
                <term>Show Jasmin output</term>

                <listitem><para>
                Shows Jasmin assembly output for the currently selected file.
                </para></listitem>
            </varlistentry>

        </variablelist>

    </simplesect>

</chapter>


<chapter id="configuration">
    <title>Configuration</title>

    <para>
    To configure JavaInsight, open the Global Options dialog
    (<guimenu>Utilities&gt;</guimenu>
     <guimenuitem>Global&nbsp;Options</guimenuitem>) and select the entry
     <guimenu>Plugins&gt;</guimenu>
     <guimenuitem>Java&nbsp;Insight</guimenuitem>.
    </para>

    <para>
    The following options can be set:
    </para>

    <variablelist>
        <varlistentry>
            <term>Use &quot;pretty&quot; names for local variables.</term>

            <listitem><para>
            Jode tries to prettify the local variable names.
            This option is on per default.
            </para></listitem>
        </varlistentry>

        <varlistentry>
            <term>Remove locals, that are used only one time.</term>

            <listitem><para>
            Such local variables are defined, but apparently never used. Since they
            only clutter up the code, they can be removed without problems.
            Note, that such local variables are only produced by crappy Java
            compilers; good compilers strip them out anyway.
            This option is off per default.
            </para></listitem>
        </varlistentry>

        <varlistentry>
            <term>Decrypt encrypted strings.</term>

            <listitem><para>
            This option is meant for obfuscators that &quot;encrypt&quot; strings.
            Jode tries to recognize encrypted strings and to decrypt them automatically.
            If activated, Jode searches for expressions like
            <programlisting>methodX(&quot;abc&quot;)</programlisting>
            and assumes that <function>methodX</function>
            is a decryption routine and <literal>&quot;abc&quot;</literal>
            is an encrypted string.
            It is checked whether <function>methodX</function> is
            <token>static</token>, <token>final</token> and returns a
            <token>String</token>.
            If this is the case, Jode tries to invoke <function>methodX</function> with
            the constant argument <literal>&quot;abc&quot;</literal>.
            If successful, Jode replaces the method call with the resulting string.
            This option is on per default, because it shouldn&#39;t do anything harmful.
            </para></listitem>
        </varlistentry>

        <varlistentry>
            <term>Generate imports for packages with more than <varname>nnn</varname> classes.</term>

            <listitem><para>
            Set this to 0, if you don&#39;t want to generate imports for whole packages,
            such as:
            <programlisting>import&nbsp;java.awt.*;</programlisting>
            The default is 0.
            </para></listitem>
        </varlistentry>

        <varlistentry>
            <term>Generate imports for classes used more than <varname>nnn</varname> times.</term>

            <listitem><para>
            Set this to 0, if you don&#39;t want to generate imports for classes, rather
            use full qualified class names always.
            The default is 1.
            </para></listitem>
        </varlistentry>

        <varlistentry>
            <term>Set status of buffer to &quot;saved&quot; after decompile.</term>

            <listitem><para>
            Use this if you want to get rid of &quot;Save changes?&quot; messages when you
            close the decompilation buffer.
            </para></listitem>
        </varlistentry>

    </variablelist>

</chapter>


</book>

