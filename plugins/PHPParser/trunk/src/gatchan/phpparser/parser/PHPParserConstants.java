/* Generated By:JavaCC: Do not edit this line. PHPParserConstants.java */
package gatchan.phpparser.parser;

public interface PHPParserConstants {

  int EOF = 0;
  int PHPSTARTSHORT = 1;
  int PHPSTARTLONG = 2;
  int PHPECHOSTART = 3;
  int PHPEND = 4;
  int SINGLE_LINE_COMMENT = 21;
  int PUBLIC = 26;
  int PROTECTED = 27;
  int PRIVATE = 28;
  int ABSTRACT = 29;
  int INTERFACE = 30;
  int IMPLEMENTS = 31;
  int FINAL = 32;
  int TRY = 33;
  int CATCH = 34;
  int THROW = 35;
  int CLASS = 36;
  int FUNCTION = 37;
  int NAMESPACE = 38;
  int VAR = 39;
  int IF = 40;
  int ELSEIF = 41;
  int ELSE = 42;
  int ARRAY = 43;
  int BREAK = 44;
  int LIST = 45;
  int PRINT = 46;
  int ECHO = 47;
  int INCLUDE = 48;
  int REQUIRE = 49;
  int INCLUDE_ONCE = 50;
  int REQUIRE_ONCE = 51;
  int GLOBAL = 52;
  int STATIC = 53;
  int CASE = 54;
  int CONST = 55;
  int CONTINUE = 56;
  int _DEFAULT = 57;
  int DO = 58;
  int EXTENDS = 59;
  int FOR = 60;
  int NEW = 61;
  int CLONE = 62;
  int RETURN = 63;
  int SWITCH = 64;
  int WHILE = 65;
  int ENDWHILE = 66;
  int ENDSWITCH = 67;
  int ENDIF = 68;
  int ENDFOR = 69;
  int ENDFOREACH = 70;
  int FOREACH = 71;
  int AS = 72;
  int CLASSACCESS = 73;
  int STATICCLASSACCESS = 74;
  int ARRAYASSIGN = 75;
  int DEFINE = 76;
  int GOTO = 77;
  int NULL = 78;
  int SUPER = 79;
  int THIS = 80;
  int TRUE = 81;
  int FALSE = 82;
  int INSTANCEOF = 83;
  int STRING = 84;
  int OBJECT = 85;
  int BOOL = 86;
  int BOOLEAN = 87;
  int REAL = 88;
  int DOUBLE = 89;
  int FLOAT = 90;
  int INT = 91;
  int INTEGER = 92;
  int AT = 93;
  int BANG = 94;
  int TILDE = 95;
  int HOOK = 96;
  int COLON = 97;
  int OR_OR = 98;
  int AND_AND = 99;
  int PLUS_PLUS = 100;
  int MINUS_MINUS = 101;
  int PLUS = 102;
  int MINUS = 103;
  int STAR = 104;
  int SLASH = 105;
  int BIT_AND = 106;
  int BIT_OR = 107;
  int BIT_XOR = 108;
  int REMAINDER = 109;
  int LSHIFT = 110;
  int RSIGNEDSHIFT = 111;
  int RUNSIGNEDSHIFT = 112;
  int _ORL = 113;
  int XOR = 114;
  int _ANDL = 115;
  int INTEGER_LITERAL = 116;
  int DECIMAL_LITERAL = 117;
  int HEX_LITERAL = 118;
  int OCTAL_LITERAL = 119;
  int FLOATING_POINT_LITERAL = 120;
  int EXPONENT = 121;
  int STRING_LITERAL = 122;
  int STRING_2 = 123;
  int STRING_3 = 124;
  int ESCAPED = 125;
  int DOUBLEQUOTE = 126;
  int DOLLARS = 127;
  int DOUBLEQUOTE2 = 128;
  int LBRACE1 = 129;
  int RBRACE1 = 133;
  int HEREDOCSTARTTOKEN = 136;
  int DOLLAR = 137;
  int IDENTIFIER = 138;
  int LETTER = 139;
  int DIGIT = 140;
  int SPECIAL = 141;
  int LPAREN = 143;
  int RPAREN = 144;
  int RBRACE = 145;
  int LBRACKET = 146;
  int RBRACKET = 147;
  int SEMICOLON = 148;
  int COMMA = 149;
  int DOT = 150;
  int LBRACE = 151;
  int GT = 152;
  int LT = 153;
  int EQUAL_EQUAL = 154;
  int LE = 155;
  int GE = 156;
  int NOT_EQUAL = 157;
  int DIF = 158;
  int BANGDOUBLEEQUAL = 159;
  int TRIPLEEQUAL = 160;
  int ASSIGN = 161;
  int PLUSASSIGN = 162;
  int MINUSASSIGN = 163;
  int STARASSIGN = 164;
  int SLASHASSIGN = 165;
  int ANDASSIGN = 166;
  int ORASSIGN = 167;
  int XORASSIGN = 168;
  int DOTASSIGN = 169;
  int REMASSIGN = 170;
  int TILDEEQUAL = 171;
  int LSHIFTASSIGN = 172;
  int RSIGNEDSHIFTASSIGN = 173;
  int NAMESPACE_NAME = 174;

  int DEFAULT = 0;
  int PHPPARSING = 1;
  int IN_SINGLE_LINE_COMMENT = 2;
  int IN_VARIABLE = 3;
  int IN_NAMESPACE = 4;
  int IN_FORMAL_COMMENT = 5;
  int IN_MULTI_LINE_COMMENT = 6;
  int IN_STRING = 7;
  int DOLLAR_IN_STRING = 8;
  int SKIPSTRING = 9;
  int DOLLAR_IN_STRING_EXPR = 10;

  String[] tokenImage = {
    "<EOF>",
    "\"<?\"",
    "\"<?php\"",
    "\"<?=\"",
    "\"?>\"",
    "<token of kind 5>",
    "\"<?xml\"",
    "\"\\n\"",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "\"\\f\"",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "\"//\"",
    "\"#\"",
    "<token of kind 19>",
    "\"/*\"",
    "<SINGLE_LINE_COMMENT>",
    "<token of kind 22>",
    "\"*/\"",
    "\"*/\"",
    "<token of kind 25>",
    "\"public\"",
    "\"protected\"",
    "\"private\"",
    "\"abstract\"",
    "\"interface\"",
    "\"implements\"",
    "\"final\"",
    "\"try\"",
    "\"catch\"",
    "\"throw\"",
    "\"class\"",
    "\"function\"",
    "\"namespace\"",
    "\"var\"",
    "\"if\"",
    "\"elseif\"",
    "\"else\"",
    "\"array\"",
    "\"break\"",
    "\"list\"",
    "\"print\"",
    "\"echo\"",
    "\"include\"",
    "\"require\"",
    "\"include_once\"",
    "\"require_once\"",
    "\"global\"",
    "\"static\"",
    "\"case\"",
    "\"const\"",
    "\"continue\"",
    "\"default\"",
    "\"do\"",
    "\"extends\"",
    "\"for\"",
    "\"new\"",
    "\"clone\"",
    "\"return\"",
    "\"switch\"",
    "\"while\"",
    "\"endwhile\"",
    "\"endswitch\"",
    "\"endif\"",
    "\"endfor\"",
    "\"endforeach\"",
    "\"foreach\"",
    "\"as\"",
    "\"->\"",
    "\"::\"",
    "\"=>\"",
    "\"define\"",
    "\"goto\"",
    "\"null\"",
    "\"super\"",
    "\"this\"",
    "\"true\"",
    "\"false\"",
    "\"instanceof\"",
    "\"string\"",
    "\"object\"",
    "\"bool\"",
    "\"boolean\"",
    "\"real\"",
    "\"double\"",
    "\"float\"",
    "\"int\"",
    "\"integer\"",
    "\"@\"",
    "\"!\"",
    "\"~\"",
    "\"?\"",
    "\":\"",
    "\"||\"",
    "\"&&\"",
    "\"++\"",
    "\"--\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"&\"",
    "\"|\"",
    "\"^\"",
    "\"%\"",
    "\"<<\"",
    "\">>\"",
    "\">>>\"",
    "\"OR\"",
    "\"XOR\"",
    "\"AND\"",
    "<INTEGER_LITERAL>",
    "<DECIMAL_LITERAL>",
    "<HEX_LITERAL>",
    "<OCTAL_LITERAL>",
    "<FLOATING_POINT_LITERAL>",
    "<EXPONENT>",
    "<STRING_LITERAL>",
    "<STRING_2>",
    "<STRING_3>",
    "<ESCAPED>",
    "\"\\\"\"",
    "\"$\"",
    "\"\\\"\"",
    "\"{\"",
    "\"{\"",
    "\"}\"",
    "<token of kind 132>",
    "\"}\"",
    "<token of kind 134>",
    "<token of kind 135>",
    "\"<<<\"",
    "\"$\"",
    "<IDENTIFIER>",
    "<LETTER>",
    "<DIGIT>",
    "<SPECIAL>",
    "<token of kind 142>",
    "\"(\"",
    "\")\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\",\"",
    "\".\"",
    "\"{\"",
    "\">\"",
    "\"<\"",
    "\"==\"",
    "\"<=\"",
    "\">=\"",
    "\"!=\"",
    "\"<>\"",
    "\"!==\"",
    "\"===\"",
    "\"=\"",
    "\"+=\"",
    "\"-=\"",
    "\"*=\"",
    "\"/=\"",
    "\"&=\"",
    "\"|=\"",
    "\"^=\"",
    "\".=\"",
    "\"%=\"",
    "\"~=\"",
    "\"<<=\"",
    "\">>=\"",
    "<NAMESPACE_NAME>",
  };

}
