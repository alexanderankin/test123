# :encoding=UTF-8:
# 
# This file maps input strings to character compositions, like a simple
# input method. Only non-whitespace characters may be used for the input
# string (the replacement text may contain whitespace). The format of the
# table is a series of lines, where the input strings appear at the start
# of each line, followed by whitespace, and then the output string. Lines
# that are JUST a hash mark, or that begin with a hash AND a space, are
# comments (since abbreviations are at minimum two characters long, this
# doesn't affect the table at all). Lines that are all whitespace are
# ignored.
# 
# Instead of a replacement string, you can use a special notation,
# U+HHHH or U+10HHHH to represent a Unicode character expressed in hex.
#
# You can also use a special form as the replacement string, which is
#      (<function name>)FUNC
# which will use BeanShell to evaluation <function name>, passing in as
# an argument the text in the document contained between '(' and ')'.
# Actually, the parentheses can be any characters, and the document text
# will be scanned to find the opening and closing delimeters. Example:
#   FB	|foobar|FUNC
# will match the document form |analyze|FB, and call foobar("analyze")
# 


# Accented characters
AE	Æ
ae	æ
A`	À
a`	à
A'	Á
a'	á
A^	Â
a^	â
Av	Ǎ
av	ǎ
A:	Ä
a:	ä
A-	Ā
a-	ā
C,	Ç
c,	ç
Cv	Č
cv	č
E`	È
e`	è
E'	É
e'	é
E^	Ê
e^	ê
Ev	Ě
ev	ě
E:	Ë
e:	ë
E-	Ē
e-	ē
I`	Ì
i`	ì
I'	Í
i'	í
I:	Ï
i:	ï
I-	Ī
i-	ī
Iv	Ǐ
iv	ǐ
I^	Î
i^	î
N~	Ñ
n~	ñ
O`	Ò
o`	ò
O'	Ó
o'	ó
O:	Ö
o:	ö
O-	Ō
o-	ō
oe      œ
OE      Œ
Ov	Ǒ
ov	ǒ
O^	Ô
o^	ô
Sv	Š
sv	š
U`	Ù
u`	ù
U'	Ú
u'	ú
U:	Ü
u:	ü
U-	Ū
u-	ū
Uv	Ǔ
uv	ǔ
U^	Û
u^	û

# Punctuation
\`	‘
\'	’
\``	“
\''	”
...	…
**	•
\-	–
\--	—

# Arrows
<-      ←
-^      ↑
->      →
-v      ↓
<->     ↔
^-v     ↕

# Numeral forms
1/2	½
1/3	⅓
1/4	¼
1/5	⅕
1/8	⅛
2/3	⅔
3/4	¾
^1	¹
^2	²
^3	³
^4	⁴
_1	₁
_2	₂
_3	₃
_4	₄

# Currency and miscellaneous symbols
c/	¢
C=	€
Y=	¥
deg	°
div	÷
mul	×
inf	∞
pil	¶
dag	†
ddag	‡

# Box drawing
|-	─
||	│
|ul	┌
|ur	┐
|ll	└
|lr	┘
||-	├
|-|	┤
|T	┬
|_T	┴
|+	┼

|=-	═
|=|	║
|=ul	╔
|=ur	╗
|=ll	╚
|=lr	╝
|=|-	╠
|=-|	╣
|=T	╦
|=_T	╩
|=+	╬

# Greek letters
ohm	Ω
\u	μ

# Functions
0x	(ConvertHex)FUNC
U+	(CodepointToChar)FUNC
U-	(CharToCodepoint)FUNC
bsh	(BeanShellEval)FUNC
