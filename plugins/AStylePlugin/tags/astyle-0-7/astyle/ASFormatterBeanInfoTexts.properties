# Message properties for AStyle
#
# These properties get used in the ASFormatterBeanInfo
# property description.
#
# jEdit options:
# :tabSize=4:indentSize=4:noTabs=false:maxLineLen=0:


useTabs.label=Use Tabs
useTabs.description=\
	Whether code should be indented using tabs or spaces.


tabIndentation.label=Tab width
tabIndentation.description=\
	Assume each tab is this number of spaces long.


spaceIndentation.label=Space indent
spaceIndentation.description=\
	Number of spaces to indent with.


forceTabs.label=Enforce Tabs
forceTabs.description=\
	Use tabs in areas, where the Beautifier would prefer to use spaces.


maxInStatementIndentLength.label=Max. multi-line statement indent
maxInStatementIndentLength.description=\
	Maximum indentation between two lines in a multi-line statement.


minConditionalIndentLength.label=Min. multi-line statement indent
minConditionalIndentLength.description=\
	Minumum indentation between two lines in a multi-line condition.


classIndent.label=Indent classes
classIndent.description=\
	Whether class definitions should be indented.


switchIndent.label=Indent switch blocks
switchIndent.description=\
	Whether switch blocks should be indented.


caseIndent.label=Indent case statements
caseIndent.description=\
	Whether case statements should be indented.


bracketIndent.label=Indent brackets
bracketIndent.description=\
	Whether brackets should be indented.


blockIndent.label=Indent blocks
blockIndent.description=\
	If checked, entire blocks will be indented one additional indent.


namespaceIndent.label=Indent namespaces
namespaceIndent.description=\
	Whether namespace blocks should be indented (C++ only).


labelIndent.label=Indent labels
labelIndent.description=\
	If checked, labels will be indented one indent LESS than \
	the current indentation level.


emptyLineFill.label=Fill empty lines
emptyLineFill.description=\
	Whether empty lines should be filled with whitespace.


preprocessorIndent.label=Indent preprocessor lines
preprocessorIndent.description=\
	Whether multiline #define statements should be indented.


cStyle.label=C/C++ file
cStyle.description=\
	Set this to true, if you want to beautify a C/C++ file; \
	false, if you want to beautify a Java file.\n\
	\n\
	If true, the beautifier performs additional indenting on \
	on templates and precompiler instructions, among other \
	things.


bracketFormatMode.label=Bracket format mode
bracketFormatMode.description=\
	Choose between ANSI C/C++ style, Java/K&R style or Linux \
	style bracket placement or no formatting of brackets.


breakClosingHeaderBracketsMode.label=Break before closing headers
breakClosingHeaderBracketsMode.description=\
	If true, brackets just before closing headers (e.g. 'else', \
	'catch') will be broken, even if standard brackets are \
	attached. Otherwise, closing header brackets will be treated \
	as standard brackets.


breakElseIfsMode.label=Break 'else if'
breakElseIfsMode.description=\
	Whether 'else' should be broken from their succeeding 'if'.


operatorPaddingMode.label=Pad operators
operatorPaddingMode.description=\
	Whether operators should be padded with whitespace.


parenthesisPaddingMode.label=Pad parenthesis
parenthesisPaddingMode.description=\
	Whether parenthesis should be padded with whitespace.


breakOneLineBlocksMode.label=Break one-line blocks
breakOneLineBlocksMode.description=\
	Whether there should be a break before one-line blocks.


singleStatementsMode.label=Break multiple statement lines
singleStatementsMode.description=\
	Whether lines consisting of multiple statements should be \
	broken into single statement lines.


tabSpaceConversionMode.label=Convert tabs to spaces
tabSpaceConversionMode.description=\
	Whether tabs should be converted to spaces.


breakBlocksMode.label=Separate unrelated blocks
breakBlocksMode.description=\
	Whether unrelated blocks of code should be separated with \
	empty lines.


breakClosingHeaderBlocksMode.label=Separate 'else'/'catch' blocks
breakClosingHeaderBlocksMode.description=\
	Whether closing header blocks such as 'else', 'catch', etc. \
	should be separated with empty lines.

