<?xml version="1.0" ?>

<!DOCTYPE COMMANDO SYSTEM "commando.dtd">

<COMMANDO>
	<UI>
		<CAPTION LABEL="Paths">

		<ENTRY LABEL="Boot class path" VARNAME="bootclasspath"/>
		<ENTRY LABEL="Class path" VARNAME="classpath"
			EVAL="System.getProperty(&quot;java.class.path&quot;);" />
		<ENTRY LABEL="Source path" VARNAME="sourcepath" />
		<ENTRY LABEL="Extension directory" VARNAME="extdirs" />
		<ENTRY LABEL="Output directory" VARNAME="outputpath"
			EVAL="System.getProperty(&quot;user.dir&quot;);" />

		</CAPTION>

		<CAPTION LABEL="Compilation flags">

		<TOGGLE LABEL="Generate debug info" VARNAME="debug" />
		<TOGGLE LABEL="Optimize" VARNAME="optimize" />
		<TOGGLE LABEL="Show warnings" VARNAME="warn" DEFAULT="TRUE" />
		<TOGGLE LABEL="Show deprecation" VARNAME="deprecation" DEFAULT="TRUE" />
		<TOGGLE LABEL="Verbose compile messages" VARNAME="verbose" />
		<ENTRY LABEL="Source file encoding" VARNAME="encoding"
			EVAL="buffer.getProperty(Buffer.ENCODING);" />
		<ENTRY LABEL="Target JDK" VARNAME="target" />

		</CAPTION>

		<CAPTION LABEL="Source file">

		<ENTRY LABEL="Source file" VARNAME="source"
			EVAL="buffer.getPath();" />

		</CAPTION>
	</UI>

	<COMMANDS>
		<COMMAND SHELL="System" CONFIRM="FALSE">
			buf = new StringBuffer();
			buf.append(System.getProperty("java.home"));
			buf.append(File.separator);
			buf.append("bin");
			buf.append(File.separator);
			buf.append("javac");

			if(!bootclasspath.equals(""))
			{
				buf.append(" -bootclasspath \"");
				buf.append(bootclasspath);
				buf.append('"');
			}

			if(!classpath.equals(""))
			{
				buf.append(" -classpath \"");
				buf.append(classpath);
				buf.append('"');
			}

			if(!sourcepath.equals(""))
			{
				buf.append(" -sourcepath \"");
				buf.append(sourcepath);
				buf.append('"');
			}

			if(!extdirs.equals(""))
			{
				buf.append(" -extdirs \"");
				buf.append(extdirs);
				buf.append('"');
			}

			if(!outputpath.equals(""))
			{
				buf.append(" -d \"");
				buf.append(outputpath);
				buf.append('"');
			}

			if(debug)
				buf.append(" -g");

			if(optimize)
				buf.append(" -O");

			if(!warn)
				buf.append(" -nowarn");

			if(deprecation)
				buf.append(" -deprecation");

			if(verbose)
				buf.append(" -verbose");

			if(!encoding.equals(""))
			{
				buf.append(" -encoding ");
				buf.append(encoding);
			}

			if(!target.equals(""))
			{
				buf.append(" -target ");
				buf.append(target);
			}

			buf.append(' ');
			buf.append(source);

			// return value
			buf.toString();
		</COMMAND>
	</COMMANDS>
</COMMANDO>
