<?xml version="1.0" ?>

<!DOCTYPE COMMANDO SYSTEM "commando.dtd">

<COMMANDO>
	<UI>
		<CAPTION LABEL="Files">
			<FILE_ENTRY LABEL="Source file(s)" VARNAME="source" EVAL="buffer.getPath()" />
			<DIR_ENTRY LABEL="Output directory" VARNAME="outputdir" EVAL="buffer.getDirectory()" />
			<ENTRY LABEL="Output file name" VARNAME="executable" EVAL="getBufferOutputName(buffer);" />
			<ENTRY LABEL="Include" VARNAME="include" />
		</CAPTION>

		<CAPTION LABEL="Options">
			<CHOICE LABEL="Optimize" VARNAME="optimize" DEFAULT="none">
				<OPTION LABEL="None" VALUE="none" />
				<OPTION LABEL="Level 1" VALUE="1" />
				<OPTION LABEL="Level 2" VALUE="2" />
				<OPTION LABEL="Level 3" VALUE="3" />
			</CHOICE>
			<CHOICE LABEL="Compile to" VARNAME="compileto" DEFAULT="exec">
				<OPTION LABEL="Executable" VALUE="exec" />
				<OPTION LABEL="Assembly" VALUE="assembly" />
				<OPTION LABEL="Object" VALUE="object" />
				<OPTION LABEL="Preprocessed source" VALUE="preproc" />
			</CHOICE>
			<TOGGLE LABEL="Generate debug info" VARNAME="debug" DEFAULT="FALSE" />
			<TOGGLE LABEL="Verbose on error" VARNAME="verbose" DEFAULT="FALSE" />
		</CAPTION>

		<CAPTION LABEL="Advanced">
			<ENTRY LABEL="Additional parameters" VARNAME="params" />
		</CAPTION>
	</UI>

	<COMMANDS>
		<COMMAND SHELL="System">
			buf = new StringBuffer();
			if (buffer.getMode().getName().equals("c++")) buffer.append("g++");
			else buffer.append("gcc");

			if(!include.equals(""))
			{
				tokenizer = new StringTokenizer(include, File.pathSeparator);
				while (tokenizer.hasMoreTokens())
					buf.append(" -I\""+tokenizer.nextToken()+"\"");
			}
			
			if (debug)
				buf.append(" -g");
			
			if (compileto.equals("assembly")) buf.append(" -S");
			else if (compileto.equals("object")) buf.append(" -c");
			else if (compileto.equals("preproc")) buf.append(" -E");
			
			if (!optimize.equals("none"))
				buf.append(" -O"+optimize);
			
			if (params.length() > 0)
				buf.append(" "+params);
			
			if (!outputdir.endsWith(File.separator)) outputdir += File.separator;
			buf.append(" -o \""+outputdir+executable+"\"");
			
			buf.append(" \""+source+"\"");

			// return value
			return buf.toString();
		</COMMAND>
	</COMMANDS>
</COMMANDO>
