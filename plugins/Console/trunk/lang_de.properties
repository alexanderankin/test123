# Console DE translation
# Translator: Schwenn (jedit@rstyx.de)
# :encoding=UTF-8:
# :folding=explicit:collapseFolds=1:noWordSep=_\\:

### Plugin properties
plugin.console.ConsolePlugin.name=Konsole

# jEdit 4.4 plugin API for short description.
plugin.console.ConsolePlugin.description=[Console] Eine Kommandozeilen-Shell und eine Plugin-Schnittstelle, \
       um andere benutzerdefinierte Shells einzurichten.

# Menu
console.label=Konsole
run-last-console-command.label=Letztes Kommando ausführen
commando.label=Commando...
commando-compile.label=Compiliere aktive Datei...
commando-run.label=Starte aktive Datei...
chdir-pv-selected.label=cd zu aktivem Knoten
chdir-pv-root.label=cd zu Wurzelverzeichnis
project-compile.label=Compiliere Projekt
project-run.label=Starte Projekt

browse-commando-directory.label=Browse Commando-Arbeitsverzeichnis
rescan-commands.label=Dynamische Menüs neu aufbauen
console-clear.label=Konsole leeren
action-set.commando.label=Plugin: Konsole Commandos

### Console component

console.title=Konsole
console.run=Starten
console.to-buffer=Befehl > neue Datei
console.stop=Stop
console.clear=Löschen

console.completions=/-- Mögliche Vervollständigungen:
console.completions-end=\\-- Ende der Vervollständigungen.
console.prompt={0} fertig.

### Console option panes

options.console.general.label=Allgemein
options.console.system.label=System Shell
options.console.general.commando.toolbar=Symbolleiste anzeigen
options.console.general.rememberCWD=Arbeitsverzeichnis merken
options.console.toolbar.buttons=Schaltflächen für Commando Symbolleiste
options.console.general.shellprefix=Shell Präfix:
options.console.general.shellprefix.tooltip=(Experimentell) - Mit dieser Option können Sie Befehle innerhalb alternativer Shells ausführen.
options.console.general.font=Schrift:
options.console.general.encoding=Zeichenkodierung:
options.console.general.charlimit=Max. Anzahl verbleibender Zeichen:
options.console.general.historylimit=Max. Anzahl zu merkender Befehle:
options.console.general.bgColor.tooltip=Wird ignoriert, wenn "Globale Optionen -> Erscheinungsbild -> Farben von jEdits Textbereich in allen Textkomponenten verwenden" eingeschaltet ist.
options.console.general.bgColor=Konsole Hintergrund:
options.console.general.plainColor=Einfacher Text:
options.console.general.caretColor=Cursor:
options.console.general.warningColor=Warnmeldungen:
options.console.general.errorColor=Fehlermeldungen:
options.console.system.clearBeforeExecute=Rückscrollpuffer leeren vor Commando, Build, oder Start eines Projektes
options.console.general.infoColor=Informationsmeldungen:
options.console.general.changedir=Optionen zur Knoten-Auswahl
options.last-selected=(Zuletzt gewählte)
options.console.general.changedir.nodeselect=Bei Auswahl eines VFS-Knotens wird dessen Verzeichnis zum Arbeitsverzeichnis
options.console.general.changedir.pvchange=Bei Knotenauswahl im Projekte-Dockfenster, Wechsel ins Knoten-Verzeichnis
options.console.general.mergeError=Standardausgabe (stdout) und Standard-Fehlerausgabe (stderr) mischen
options.console.general.welcome=Begrüßungstext anzeigen
options.console.general.showExitStatus=Exit-Status anzeigen
options.console.general.mergeError.tooltip=zum Mischen der Ausgabeströme stdout und stderr für 'make <Pfad>'\
        - hilft der Fehlerliste, die korrekte Pfadinformation zu ermitteln für Make-Dateien, die mit mehreren Verzeichnissen umgehen.
options.console.general.pathdirs=Zusätzlicher Suchpfad:
options.console.general.pathdirs.tooltip=OS-abhängige Verzeichnisse, die dem %PATH% neu gestarteter Prozesse vorangestellt oder angehängt werden.
options.console.general.pathdirs.append=Zusätzlichen Suchpfad an %PATH% hinten anhängen (anstatt voranzustellen)
options.console.toolbar.label=Commando Symbolleiste
options.console.toolbarcaption=Symbolleisten-Optionen:

options.console.errors.label=Fehlermuster
options.console.errors.caption=Fehlermuster:
options.console.errors.edit=Bearbeiten
options.console.errors.apply=Testen/Bestätigen
options.console.errors.apply.tooltip=Regulären Ausdruck testen und bei Erfolg Änderungen bestätigen
options.console.errors.info=HINWEIS: Jede Änderung eines Reg. Ausdruckes muss mit "Testen/Bestätigen" abgeschlossen werden. \n\
                            Ansonsten gehen diese Änderungen verloren nach Klick auf "OK/Anwenden".

options.console.errors.reset=Zurücksetzen
options.console.errors.reset.tooltip=Standard wiederherstellen

options.console.errors.reload=Neu laden
options.console.errors.reload.tooltip=Werte aus gespeicherten Einstellungen wiederherstellen

options.console.errors.checking.title=Regulären Ausdruck prüfen
options.console.errors.checking.message={0}

options.console.errors.testarea.label=Testbereich

#options.console.errors.testarea=controller.cpp: In constructor `Controller::Controller(int, char**)': \n\
#        controller.cpp:33: error: syntax error before `=' token \n\
#        controller.cpp: In member function `QMenu* \n\ Controller::fileMenu(QWidget*)': \n\
#        controller.cpp:132: warning: unused parameter `QWidget*parent' \n\
#        make: *** [.obj/controller.o] Error 1 \n

options.console.errors.title=Fehlermuster bearbeiten
options.console.errors.name=Name:
options.console.errors.match=Reg. Ausdruck - Fehler:
options.console.errors.warning=Reg. Ausdruck - Warnung:
options.console.errors.extra=Reg. Ausdruck - Extra Zeilen:
options.console.errors.filename=Dateiname:
options.console.errors.line=Zeilennummer:
options.console.errors.message=Fehlermeldung:
options.console.general.defaultshell=Standard-Shell:

console.not-filled-out.title=Felder sind nicht ausgefüllt
console.not-filled-out.message=Alle Felder dieses Dialoges müssen ausgefüllt werden.

options.console.compile-run.label=Compilieren & Starten
options.console.compile-run.caption=Compiler und Interpreter:
options.console.compile-run.mode=Modus
options.console.compile-run.compiler=Compiler
options.console.compile-run.interpreter=Interpreter

# Because this uses a JLabel, the HTML formatting is necessary
options.console.compile-run.help=<HTML>Nützliche Variablen:<BLOCKQUOTE> \
	      $f - Absoluter Pfad der aktiven Datei<BR /> \
	      $d - Verzeichnis der aktiven Datei<BR /> \
	      $n - Name der aktiven Datei</BLOCKQUOTE> \
	      Die Dokumentation des Konsolen-Plugins enthält die komplette Liste der Variablen.</HTML>

options.pv.commands.label=Konsole

options.pv.commands.help=Diese Befehle können aufgerufen werden über "Plugins -> Konsole -> Project".
options.pv.commands.compile=Compiliere Projekt:
options.pv.commands.run=Starte Projekt:

### SystemShell
console.shell.info=Diese Shell startet Betriebssystem-Prozesse.\n\
        \n\
        "%<TAB>" listet eingebaute Befehle auf.\n\
        Starten eines eingebauten Befehls mit Argument "--help" gibt kurze Hilfe.\n\
        Der Befehl %help zeigt die Hilfedatei des Konsolen-Plugins an.\n\
        \n\
        Durch Compiler und einige andere Programme generierte Fehler werden für direkten\n\
        Ein-Klick-Zugriff im Fenster des Fehlerlisten-Plugins aufgelistet.\n\
        \n\

console.shell.unknown-builtin=Eingebauter Befehl {0} nicht erkannt.\n\
        "%<TAB>" drücken, um eine Liste der Befehle zu erhalten.

console.shell.bad-opt-long=Unbekannte Option --{0}. Versuchen Sie den --help Parameter...
console.shell.need-arg-long=Option --{0} erfordert ein Argument.
console.shell.no-arg-long=Präfix '--no' nicht erlaubt mit Option --{0}.
console.shell.bad-opt=Unbekannte Option -{0}. Versuchen Sie den --help Parameter...
console.shell.bad-args=Ungültige Anzahl Argumente. Versuchen Sie den --help Parameter...
console.shell.bad-regex=Falsche Angabe für {0} in Fehlermuster ''{1}''. => Prüfen Sie 'Plugin Optionen->Konsole->Fehlermuster'
console.shell.noproc=Zur Zeit läuft kein Prozess.

console.shell.not-found-win=Befehl nicht gefunden: {0}

console.shell.killed=Prozess {0} beendet
console.shell.detached=Prozess {0} entkoppelt

console.shell.alias.usage=Verwendung: %alias <Alias> <Befehl>\n\
  Läßt <Alias> die selben Dinge tun wie <Befehl>.\n\
  Aliase bleiben nicht erhalten.

console.shell.aliases.usage=Verwendung: %aliases\n\
  Listet alle definierten Aliase.\n\
  Aliase bleiben nicht erhalten.

console.shell.browse.usage=Verwendung: %browse [-n|--new-window] [<Verzeichnis>]\n\
  Öffnet das angegebene Verzeichnis im Dateisystem-Browser.\n\
  Wurde kein Verzeichnis angegebenen, wird das Arbeitsverzeichnis angenommen.

console.shell.cd.usage=Verwendung: %cd [<Verzeichnis>]\n\
  Setzt das Arbeitsverzeichnis.
console.shell.cd.error=Das Verzeichnis {0} existiert nicht
console.shell.cd.file={0} ist kein Verzeichnis.

console.shell.clear.usage=Verwendung: %clear\n\
  Löscht den Ausgabebereich.

console.shell.detach.usage=Verwendung: %detach\n\
  Entkoppelt den aktuell laufenden Prozess und\n\
  läßt ihn im Hintergrund weiterlaufen.

console.shell.dirstack.usage=Verwendung: %dirstack\n\
  Gibt den Verzeichnisspeicher aus,\n\
  der durch %pushd und %popd verwendet wird.

console.shell.echo.usage=Verwendung: %echo <Argumente> ...\n\
  Gibt <Argumente> in der Konsole aus.

console.shell.env.usage=Verwendung: %env\n\
  Gibt alle Umgebungsvariablen in der Konsole aus.

console.shell.edit.usage=Verwendung: %edit <Dateien> ...\n\
  Öffnet alle angegebenen Dateien.

console.shell.help.usage=Verwendung: %help [<Befehl|URL>]\n\
  Wurde ein eingebauter Befehl angegeben, wird eine kurze Hilfe angezeigt.\n\
  Wurde eine URL angegeben, wird diese URL im Hilfe-Fenster angezeigt.\n\
  Wurden keine Argumente angegeben, wird die Dokumentation der Konsole angezeigt.

console.shell.kill.usage=Verwendung: %kill\n\
  Beendet den aktuell laufenden Prozess.

console.shell.popd.usage=Verwendung: %popd\n\
  Wechselt in das oberste Verzeichnis des Verzeichnisspeichers.
console.shell.popd.error=Verzeichnisspeicher ist leer.

console.shell.pushd.usage=Verwendung: %pushd\n\
  Legt das aktuelle Arbeitsverzeichnis im Verzeichnisspeicher ab.
console.shell.pushd.ok=Verzeichnis {0} gespeichert; %popd eingeben, um zurückzukehren.

console.shell.pwd.usage=Verwendung: %pwd\n\
  Gibt das aktuelle Arbeitsverzeichnis in der Konsole aus.

console.shell.run.usage=Verwendung: %run <Skript>...\n\
  Startet das angegebene Skript.\n\
  Es können BeanShell-Skripte ausgeführt werden oder beliebige Skripttypen, \
  die duch ein installiertes Plugin unterstützt werden (z.B. Python-Skripte, \
  wenn das JythonInterpreter-Plugin installiert ist).

console.shell.set.usage=Verwendung: %set <Variable> <Wert>\n\
  Setzt den Wert der Umgebungsvariablen <Variable> auf <Wert>.

console.shell.unalias.usage=Verwendung: %unalias <alias>\n\
  Entfernt den angegebenen Alias.\n\
  Aliase bleiben nicht erhalten.

console.shell.unset.usage=Verwendung: %unset <variable>\n\
  Löscht die Umgebungsvariable <Variable>.

console.shell.version.usage=Verwendung: %version\n\
  Zeigt die Version des Konsolen-Plugins an.
console.shell.error=Fehler beim Ausführen des Prozesses: {0}
console.shell.error.working-dir=Arbeitsverzeichnis existiert nicht: {0}\n\
  "cd" eingeben, um zuerst in ein anderes Verzeichnis zu wechseln.
console.shell.exited=Prozess {0} beendet mit Kode {1}

#console.shell.runInDir={0}> {1}

### BeanShell

console.beanshell.info=Diese Shell wertet Befehle in jEdit's BeanShell- \
  Interpreter aus. Versuchen Sie zum Beispiel, "2+2" auszuwerten.\n\
  \n\
  Neben den durch jEdit gesetzten Variablen (view, editPane, textArea, \
  buffer), ist die aktuelle Konsolen-Instanz in der Variable "console" gespeichert.\n

console.beanshell.prompt=BeanShell>
### Error parsing
console.error.make.entering=Gehe ins Verzeichnis `(.+)'
console.error.make.leaving=Verlasse Verzeichnis `(.+)'


commando.title=Commando
commando.caption=Befehl:
commando.settings=Einstellungen
commando.commands=Befehle
commando.copy=Kopieren
commando.hide=Verstecken
commando.customize=Anpassen
commando.uncustomize=Anpassungen zurück nehmen
commando.xml-error.title=Parse-Fehler
commando.xml-error.message=Ein Fehler trat auf beim Durchsuchen von "{0}" in Zeile {1}\n\
  ({2}).
console.commando.button.tooltiptext=Rechts-Klick für Menü
console.commando.button.customized.tooltiptext=Benutzerdefiniertes Commando
commando.uncustomize.tooltiptext=Benutzerdefinierte {0}.xml aus jEdit Einstellungs-Verzeichnis löschen
commando.bad-shell.title=Unbekannte Shell
commando.bad-shell.message=Shell "{0}" existiert nicht.

commando.exit-status.title=Befehl gescheitert
commando.exit-status.message=Ausführung des folgenden Befehls ist gescheitert:\n\
  {0}\n\
  \n\
  Zum nächsten Befehl gehen?

commando.confirm.title=Bestätigung erforderlich
commando.confirm.message=Möchten Sie den folgenden Befehl ausführen?\n\
  {0}

commando.no-compiler.title=Compiler nicht definiert
commando.no-compiler.message=Dem aktiven Bearbeitungsmodus ist kein Compiler zugeordnet.\n\
  Jedem Bearbeitungsmodus kann ein Compiler zugewiesen werden\n\
  unter "Plugin-Optionen -> Konsole -> Compilieren & Starten".
commando.no-compiler.message=Dem aktiven Bearbeitungsmodus ist kein Compiler zugeordnet.\n\
  Jedem Bearbeitungsmodus kann ein Compiler zugewiesen werden\n\
  unter "Plugin-Optionen -> Konsole -> Compilieren & Starten".

commando.not-saved-compile.title=Änderungen speichern
commando.not-saved-compile.message=Änderungen speichern in "{0}" vor dem Compilieren?

commando.no-interpreter.title=Kein Interpreter definiert
commando.no-interpreter.message=Dem aktiven Bearbeitungsmodus ist kein Interpreter zugeordnet.\n\
  Jedem Bearbeitungsmodus kann ein Interpreter zugewiesen werden\n\
  unter "Plugin-Optionen->Konsole->Compilieren & Starten".

commando.not-saved-run.title=Änderungen speichern
commando.not-saved-run.message=Änderungen speichern in "{0}" vor dem Start?

commando.no-command.title=Unbekanntes Commando
commando.no-command.message=Unbekanntes commando: {0}


# Project compilation
console.pv.not-installed.title=Projekte-Plugin ist nicht installiert
console.pv.not-installed.message=Diese Aktion erfordert das Projekte-Plugin. Bitte zuerst dieses installieren.
console.pv.no-active-project.title=Kein aktives Projekt
console.pv.no-active-project.message=Bitte ein Projekt im Fenster des Projekte-Plugin wählen und erneut versuchen.
console.pv.no-command.title=Befehl nicht gefunden
console.pv.no-command.message=Kein {0}-Befehl wurde definiert.\n\
	Möchten Sie ihn jetzt definieren?

# Sensible Defaults Department
options.console.errors.reset-confirm.title=Fehlermuster auf Standard setzen
options.console.errors.reset-confirm.message=Alle Fehlermuster werden auf den Standard zurückgesetzt. Sind Sie sicher?

### ANSI escape sequencies
ansi-escape.title=ANSI escape sequencies parser
ansi-escape.behaviour-caption=Parser Verhalten:
ansi-escape.behaviour-names=ignorieren;entfernen;parsen
ansi-escape.mode-caption=Repräsentations-Modus:
ansi-escape.mode-names=7bit;8bit
