<?xml version="1.0"?>

<project name="NetRexxScript" default="build" basedir=".">

	<!-- Allow properties to be overridden: -->
    <property file="build.properties" />
    <property file="../build.properties" />
    <property file="${user.home}/.build.properties" />
    <property file="${user.home}/build.properties" />
    
	<!-- JEdit's local installation properties -->

	<property name="install.dir" value=".." description="Installation output directory for plugin jars"/>
	<property name="jedit.plugins.dir" value="${install.dir}" description="Location of required plugin jars"/>
	
	<!-- Project properties -->
	<property name="project.version" value="0.1.1" description="Project's build version"/>
	<property name="project.root.dir" value="." description="Project's root directory"/>
	<property name="project.settings.dir" value="${project.root.dir}" description="Project's settings directory"/>
	<property name="project.netrexx.libdir" value="lib" description="Location of NetRexxC.jar file"/>
	
	<import file="${user.home}/test-build.xml" optional="true" />
	
	<!-- This should have been set elsewhere already! -->
	<!-- This must point to the location of the jEdit 4.2 main jar in order to support 4.2 users in addition to 4.3 users. -->
	<!-- <property name="jedit.install.dir" value="C:\Program Files\jEdit"/> -->
	<property name="jedit.install.dir" value="C:/downloads/jEdit/4.2" description="jEdit installation to build against"/>

    <target name="TeeCheck" description="Checks if Java version of TeeStream class is uptodate">
    	<uptodate property="TeeStream.isUpToDate"
            srcfile="src/javasrc/nrx/TeeStream.nrx"
            targetfile="src/javasrc/java/TeeStream.java"/>
    </target>   

    <target name="TeeBuild" depends="TeeCheck" unless="TeeStream.isUpToDate" description="Compiles NetRexx version of TeeStream class (Java output has an error)">
        <netrexxc srcDir="src/javasrc/nrx" destDir="src/javasrc/java" classpath=".;${project.netrexx.libdir}\NetRexxC.jar"
            comments="true" savelog="false" time="true" compact="false" compile="false" java="true" format="true"
            verbose='verbose0' crossref="false" replace="true" />
    </target>
    
    <target name="keepJava" depends="TeeBuild" unless="TeeStream.isUpToDate" description="Copies Java output from TeeStream compile">
        <copy file="src/javasrc/java/TeeStream.java.keep" tofile="src/javasrc/java/TeeStream.java" preservelastmodified="true" verbose="true"/>        
    </target>
    
    <target name="fixJava" depends="keepJava" unless="TeeStream.isUpToDate" description="Patches Java file for TeeStream class">
	<replace file="src/javasrc/java/TeeStream.java" token="Appendable append(" value="Appendable noappend(" />
    </target>

    <target name="compileJava" depends="fixJava" description="Compile Java temp file for TeeStream class">
        <javac srcDir="src/javasrc/java" destDir="." verbose="true" classpath=".;${project.netrexx.libdir}\NetRexxC.jar"/>        	
    </target>
    
    <target name="buildnrx" depends="compileJava" description="Compiles NetRexx source files">
        <netrexxc srcDir="src" destDir="." includes="*.nrx"
        	classpath=".;${project.netrexx.libdir}\NetRexxC.jar;${jedit.install.dir}\jedit.jar;${jedit.plugins.dir}\ErrorList.jar"
        	comments="false" savelog="false" time="true" compact="false"
        	verbose='verbose0' crossref="false" replace="false" keep="false"/>
    </target>
    
    <target name="compilemacros" description="Builds sample script classfiles">
        <netrexxc srcDir="NetRexx" destDir="macros/NetRexx" includes="class*.nrx"
        	classpath=".;${project.netrexx.libdir}\NetRexxC.jar;${jedit.install.dir}\jedit.jar"
        	comments="false" savelog="false" time="true" compact="false"
        	verbose='verbose3' crossref="false" replace="false" keep="false"/>
    </target>
    
    <target name="build" depends="init,cleannrx" description="Builds NetRexxScript plugin jar">
        <jar destfile="${install.dir}\NetRexxScript.jar" basedir="." 
        	excludes="*.java *.nrx **\*.log **\*.jar build.xml src\ lib\ build\ dist\"/>
         <copy file="${project.netrexx.libdir}\NetRexxC.jar" todir="${install.dir}" preservelastmodified="true" />
    </target>  
    
    <target name="cleannrx" depends="buildnrx,compilemacros" description="Cleans up work files for normal build">
       <delete verbose="true" >
        	<fileset dir="." includes="*.nrx" />
        	<fileset dir="src/javasrc/java" includes="*.nrx" />
        	<fileset dir="src/javasrc/java" includes="*.keep" />
        	<fileset dir="macros/NetRexx" includes="class*.nrx" />        	
        	</delete>
    </target>
    
    <target name="clean" description="Cleans out all build work files for fresh start">
       <delete verbose="true" >
        	<fileset dir="." includes="*.nrx" />
        	<fileset dir="." includes="*.class" />
        	<fileset dir="src/javasrc/java" includes="*.java" />
        	<fileset dir="src/javasrc/java" includes="*.nrx" />
        	<fileset dir="src/javasrc/java" includes="*.keep" />
        	<fileset dir="macros/NetRexx" includes="class*.nrx" />        	
        	<fileset dir="macros/NetRexx" includes="*.class" />        	
        	</delete>
    </target>
	
	<target name="init"  description="Set build number and document version level">
		<tstamp/>
		<buildnumber file="${project.settings.dir}/build.number"/>
		<property name="build.id.string"
			value="${ant.project.name} ${project.version}, build ${build.number}-${DSTAMP}"/>
		<echo level="info" message="Starting building for ${build.id.string}"/>
	</target>
	
    <target name="dist" depends="clean,build" description="Builds JAR file from scratch">
    </target>

</project>


